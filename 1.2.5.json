{
    "meta": {
        "generator": "0.10.0",
        "format": 20,
        "date": 1625342326815
    },
    "custom": {
        "general": {
            "name": "General",
            "files": {
                "welcome": {
                    "name": "Welcome",
                    "type": "md",
                    "content": "# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## Welcome!\r\nWelcome to the `discord-economy-super v1.2.5` documentation.\r\n\r\n## Installation\r\n<b>Please note:<b>\r\n</br>\r\n<b>Node.js 14.0.0 or newer is required. Otherwise, the module won't work.</b><br>\r\n```console\r\nnpm i discord-economy-super\r\n```\r\n\r\n## About\r\n<b>Discord Economy Super is a powerful Node.js  module that allows you to make an economy system in your bot very easily.</b>\r\n<br>\r\n<ul>\r\n<li><b>Typescript Support</b></li>\r\n<li><b>Customizable</b></li>\r\n<li><b>Easy to use</b></li>\r\n<li><b>Beginner friendly</b></li>\r\n<li><b>Flexible</b></li>\r\n<li><b>Shop</b></li>\r\n<li><b>Bank Balance</b></li>\r\n</ul>\r\n\r\n## Help\r\n<b>If you don't understand something in the documentation or you are experiencing problems, feel free to join our <a href = \"https://discord.gg/afUTRzfb\">Support Server</a>.</b>\r\n\r\n## Useful Links\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/afUTRzfb\">Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, please send it in Discord to ShadowPlay#9706.</b>\r\n<br>\r\n<b>If you have any questions or need help, join the <a href = \"https://discord.gg/afUTRzfb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# Thanks for using Discord Economy Super â™¥",
                    "path": "general/welcome.md"
                },
                "examples": {
                    "name": "Examples",
                    "type": "md",
                    "content": "# Discord Economy Super\n\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\n\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\n\n## Simple Example\n```js\nconst { Client } = require('discord.js')\nconst client = new Client();\n\nconst Economy = require('discord-economy-super');\nconst eco = new Economy();\n\nclient.on('ready', () => {\n  console.log(`${client.user.tag} is ready!`);\n});\n\nclient.login('token')\n```\n\n## Advanced Example\n```js\nconst { Client, Intents } = require('discord.js') // npm i discord.js\nconst client = new Client({\n    partials: ['CHANNEL', 'GUILD_MEMBER', 'MESSAGE', 'REACTION', 'USER'], \n    ws: {\n        intents: Intents.ALL \n    } \n});\n\nconst Economy = require('discord-economy-super');\nconst eco = new Economy({\n  storagePath: './storage.json', // Full path to a JSON File. Default: './storage.json'.\n  checkStorage: true, // Checks the if database file exists and if it has errors. Default: true.\n  dailyCooldown: 60000 * 60 * 24, // Daily Cooldown, ms (24 Hours = 1 Day). Default: 24 Hours (60000 * 60 * 24) ms.\n  workCooldown: 60000 * 60, // Work Cooldown, ms (1 Hour). Default: 1 Hour (60000 * 60) ms.\n  weeklyCooldown: 60000 * 60 * 24 * 7, // Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms\n  dailyAmount: 100, // Daily Amount. Default: 100.\n  workAmount: [10, 50], // Work Amount: first element is min value, second is max value (It also can be a Number). Default: [10, 50].\n  weeklyAmount: 1000, // Amount of money for Weekly Command. Default: 1000.\n  updateCountdown: 1000, // Checks for if storage file exists in specified time (in ms). Default: 1000.\n  dateLocale: 'ru', // The region (example: ru; en) to format date and time. Default: 'ru'.\n  updater: {\n        checkUpdates: true, // Sends the update state message in console on start. Default: true.\n        upToDateMessage: true // Sends the message in console on start if module is up to date. Default: true.\n    },\n    errorHandler: {\n        handleErrors: true, // Handles all errors on start. Default: true.\n        attempts: 5, // Amount of attempts to load the module. Use 'null' for infinity attempts. Default: 5.\n        time: 3000 // Time between every attempt to start the module. Default: 3000.\n    }\n});\n\nclient.on('ready', () => {\n  console.log(`${bot.user.tag} is ready!`);\n});\n\nclient.login('token') // https://discord.com/developers/applications\n```\n\n## Example Events Usage\n```js\nconst { Client, Intents } = require('discord.js') // npm i discord.js\nconst client = new Client({\n    partials: ['CHANNEL', 'GUILD_MEMBER', 'MESSAGE', 'REACTION', 'USER'], \n    ws: {\n        intents: Intents.ALL \n    }\n});\n\nconst Economy = require('discord-economy-super');\nconst eco = new Economy({\n  storagePath: './storage.json', // Full path to a JSON File. Default: './storage.json'.\n  checkStorage: true, // Checks the if database file exists and if it has errors. Default: true.\n  dailyCooldown: 60000 * 60 * 24, // Daily Cooldown, ms (24 Hours = 1 Day). Default: 24 Hours (60000 * 60 * 24) ms.\n  workCooldown: 60000 * 60, // Work Cooldown, ms (1 Hour). Default: 1 Hour (60000 * 60) ms.\n  weeklyCooldown: 60000 * 60 * 24 * 7, // Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms\n  dailyAmount: 100, // Daily Amount. Default: 100.\n  workAmount: [10, 50], // Work Amount: first element is min value, second is max value (It also can be a Number). Default: [10, 50].\n  weeklyAmount: 1000, // Amount of money for Weekly Command. Default: 1000.\n  updateCountdown: 1000, // Checks for if storage file exists in specified time (in ms). Default: 1000.\n  dateLocale: 'ru', // The region (example: ru; en) to format date and time. Default: 'ru'.\n  updater: {\n        checkUpdates: true, // Sends the update state message in console on start. Default: true.\n        upToDateMessage: true // Sends the message in console on start if module is up to date. Default: true.\n    },\n    errorHandler: {\n        handleErrors: true, // Handles all errors on start. Default: true.\n        attempts: 5, // Amount of attempts to load the module. Use 'null' for infinity attempts. Default: 5.\n        time: 3000 // Time between every attempt to start the module. Default: 3000.\n    }\n});\n\nclient.on('ready', () => {\n  console.log(`${bot.user.tag} is ready!`);\n});\n\n// balance events\neco.on('balanceSet', balance => {\n    console.log(`Someone's just set ${balance.amount} coins for balance for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('balanceAdd', balance => {\n    console.log(`Someone's just added ${balance.amount} coins for balance for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('balanceSubtract', balance => {\n    console.log(`Someone's just subtracted ${balance.amount} coins from balance for member ${balance.memberID} on guild ${balance.guildID}. His balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'.`)\n})\n\n\n// bank balance events\neco.on('bankSet', balance => {\n    console.log(`Someone's just set ${balance.amount} coins in bank for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('bankAdd', balance => {\n    console.log(`Someone's just added ${balance.amount} coins in bank for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('bankSubtract', balance => {\n    console.log(`Someone's just subtracted ${balance.amount} coins from bank for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\n\n// shop events\neco.on('shopAddItem', item => {\n    console.log(`Someone's just added an item in the shop!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description}\\nMessage on use: ${item.message}\\nMax amount of item in inventory: ${item.maxAmount}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopRemoveItem', item => {\n    console.log(`Someone's just removed an item from the shop!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description}\\nMessage on use: ${item.message}\\nMax amount of item in inventory: ${item.maxAmount}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopEditItem', item => {\n    console.log(`Someone's just edited an item in the shop!\\nID: ${item.id}\\Guild ID: ${item.guildID}\\nWhat changed: ${item.changed}\\nBefore: ${item.oldValue}\\nAfter: ${item.newValue}`)\n})\neco.on('shopItemBuy', item => {\n    console.log(`Someone's just bought an item from the shop!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description || 'Not specified'}\\nMessage on use: ${item.message || 'Not specified'}\\nMax amount of item in inventory: ${item.maxAmount || 'Any'}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopItemUse', item => {\n    console.log(`Someone's just used an item!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description || 'Not specified'}\\nMessage on use: ${item.message || 'Not specified'}\\nMax amount of item in inventory: ${item.maxAmount || 'Any'}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopClear', cleared => {\n  if(cleared) console.log('The shop was cleared successfully!')\n  else console.log('Cannot clear the shop!')\n})\n\n\n// core events\neco.on('ready', () => {\n    console.log('Economy is ready!')\n})\neco.on('destroy', () => {\n    console.log('Economy was destroyed.')\n})\n\nclient.login('token') // https://discord.com/developers/applications\n```\n\n## Useful Links\n<ul>\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Bot Examples</a></b></li>\n<li><b><a href = \"https://discord.gg/afUTRzfb\">Discord Server</a></b></li>\n</ul>\n<b>If you found a bug, please send it in Discord to ShadowPlay#9706.</b>\n<br>\n<b>If you have any questions or need help, join the <a href = \"https://discord.gg/afUTRzfb\">Support Server</a>.</b>\n<br>\n<b>Module Created by ShadowPlay.</b>\n\n# Thanks for using Discord Economy Super â™¥",
                    "path": "general/examples.md"
                },
                "changelog": {
                    "name": "Changelog",
                    "type": "md",
                    "content": "# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## Changelog\r\n<b>1.0.1</b>\r\n<ul>\r\n  <li><b>The first version of the module: added a basic methods: 'Economy.fetch()', 'Economy.set()', 'Economy.add()', 'Economy.subtract()', 'Economy.daily()', 'Economy.work()', 'Economy.getDailyCooldown()', 'Economy.getWorkCooldown()', 'Economy.all()' and 'Economy.leaderboard()'. Also added an EconomyError class, but you couldn't use it yourself.</b></li>\r\n</ul>\r\n<b>1.0.2</b>\r\n<ul>\r\n  <li><b>Edited README.md</b></li>\r\n</ul>\r\n<b>1.0.3</b>\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n<b>1.0.4</b>\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n<b>1.0.5</b>\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n<b>1.0.6</b>\r\n<ul>\r\n  <li><b>Edited README.md</b></li>\r\n  <li><b>Fixed bugs.</b></li>\r\n  <li><b>Code optimization</b></li>\r\n  <li><b>Now you can create a shop on your Discord server using Economy.shop methods. They are listed above.</b></li>\r\n  <li><b>Added an 'EconomyError' class property.</b></li>\r\n  <li><b>Added a 'dateLocale' property for options object.</b></li>\r\n</ul>\r\n<b>1.0.7</b>\r\n<ul>\r\n  <li><b>Fixed bugs</b></li>\r\n</ul>\r\n<b>1.0.8</b>\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now this module is including Events. They are listed above.</b></li>\r\n</ul>\r\n<b>1.1.4</b>\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Added an update checking system for this module.</b></li>\r\n<li><b>Added a 'checkUpdates' property for options object.</b></li>\r\n</ul>\r\n<b>1.1.5</b>\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Updated the examples.</b></li>\r\n<li><b>Fixed the types.</b></li>\r\n<li><b>Added a Table of Contents in README.md</b></li>\r\n<li><b>If you have an earlier Node.js version than v14, you will receive an error.</b></li>\r\n<li><b>Now you can configure the update checking system settings using 'options.updater' properties in constructor options. The 'options.checkUpdates' property was removed in favor of 'options.updater' configuration object. Use 'options.updater.checkUpdates' instead.</b></li>\r\n<li><b>Added an error handler that will work on startup. You can configure it using 'options.errorHandler' properties in constructor options.</b></li>\r\n<li><b>Option properties 'description, 'mesasge' and 'maxAmount', in 'Economy.shop.addItem' method are optional now.</b></li>\r\n<li><b>Now everyone will have a Bank Balance. This is another type of money, you can use it whatever you want. :) | The methods are almost the same: 'Economy.bankFetch()', 'Economy.bankSet()', 'Economy.bankAdd()', 'Economy.bankSubtract()' and 'Economy.bankLeaderboard()'.</b></li>\r\n<li><b>Added a new events for Bank Balance: 'bankSet', 'bankAdd' and 'bankSubtract'.</b></li>\r\n<li><b>Now every balance and bank-balance event object is including 'type' and 'balance' properties. The first property is type of the operation ('set', 'add', 'subtract', 'bankSet', 'bankAdd', 'bankSubtract') and the second is user's new balance after the operation was completed successfully.</b></li>\r\n<li><b>Now you can manually check the module updates using the new 'Economy.checkUpdates()' method.</b></li>\r\n<li><b>Added an additional 'Economy.ready' and 'Economy.errored' properties to check the module state.</b></li>\r\n<li><b>Now you can add a role to users on your Discord server. Click <a href=\"https://www.npmjs.com/package/discord-economy-super#shop-methods\">here</a> for more info.</b></li>\r\n<li><b>Added a new 'shopItemBuy' and 'shopItemUse' events.</b></li>\r\n<li><b>Now if user try to buy an item when he reached the max amount of item in his inventory, the method will return a 'max' string.</b></li>\r\n<li><b>Now this module has a Support Server. Click <b><a href = \"https://discord.gg/afUTRzfb\">here</a></b> to join!</b></li>\r\n</ul>\r\n<b>1.1.6</b>\r\n<ul>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed bug with \"The module is not ready to work\" error on startup.</b></li>\r\n<li><b>Removed an accidentaly added \"discord.js\" module from dependencies.</b></li>\r\n</ul>\r\n<b>1.1.7</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>TypeScript support is finally here! Created a type defenitions for this module.</b></li>\r\n</ul>\r\n<b>1.1.8</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now you can disable checking a storage file using the 'options.checkStorage' option.</b></li>\r\n<li><b>Now you can kill the Economy instance using the 'Economy.kill()' method.</b></li>\r\n<li><b>'Economy.init()' method is not private anymore due to 'Economy.kill()' method.</b></li>\r\n<li><b>Added an 'interval' property that displays the database checking interval.</b></li>\r\n<li><b>Now you can clear the entire database using the 'Economy.clearStorage()' method.</b></li>\r\n<li><b>Now this module is using errors that in 'Economy.errors' property and in './src/errors.js' file.</b></li>\r\n<li><b>Now you can clear any cooldown using the 'Economy.clearDailyCooldown', 'Economy.clearWorkCooldown' and ''Economy.clearWeeklyCooldown' methods.</b></li>\r\n<li><b>Added a test for basic Economy methods. You can run it by using these commands:\r\n\r\n```console\r\ncd node_modules/discord-economy-super\r\nnpm test\r\n```\r\nThe test will look like this:\r\n\r\n![Test](https://cdn.discordapp.com/attachments/764192017542283325/838226957166313472/Screenshot_4.png)\r\n</b></li>\r\n</ul>\r\n<b>1.1.9</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed type defenitions.</b></li>\r\n</ul>\r\n<b>1.2.0</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>'Economy.shop.clearInventory()' method is working fine now.</b></li>\r\n</ul>\r\n<b>1.2.1</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now 'Economy.work()' method is not taking a daily cooldown as work reward anymore.</b></li>\r\n<li><b>Added an 'Economy.removeGuild()' method to fully remove the guild from database.</b></li>\r\n<li><b>Added an 'Economy.removeUser()' method to to remove the user from database.</b></li>\r\n</ul>\r\n<b>1.2.2</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed another issues with 'Economy.work()' method...</b></li>\r\n</ul>\r\n<b>1.2.3</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>'Economy.leaderboard()' method will return an empty array if the leaderboard is empty.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n<li><b>Fixed typos</b></li>\r\n</ul>\r\n<b>1.2.4</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>'Economy.daily()', '.work()' and '.weekly()' methods will return an object** instead of Number | String.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n</ul>\r\n\r\n** The object structure will look like this:\r\n\r\n```js\r\n{\r\n    status: Boolean,\r\n    value: { // object returns if reward is already claimed; else - number\r\n        days: Number,\r\n        hours: Number,\r\n        minutes: Number,\r\n        seconds: Number,\r\n        milliseconds: Number\r\n    },\r\n    pretty: String | Number,\r\n    reward: Number | Array<Number> // array returns if work reward is array\r\n}\r\n```\r\n\r\n<b>1.2.5</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Updated typings.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n<li><b>discord.js is no longer imported in the module.</b></li>\r\n<li><b>Added a 'ready' and 'destroy' events. <a href = \"https://www.npmjs.com/package/discord-economy-super#module-events\">Learn more</a>.</b></li>\r\n<li><b>All balance and bank methods were moved to objects. <a href = \"https://www.npmjs.com/package/discord-economy-super#balance-methods\">Learn more</a>.</b></li>\r\n<b>Here is the difference between v1.2.4 and v1.2.5.</b>\r\n\r\n```diff\r\n- eco.fetch('123', '123')\r\n- eco.set(10, '123', '123')\r\n- eco.add(10, '123', '123')\r\n- eco.subtract(10, '123', '123')\r\n- eco.leaderboard('123')\r\n\r\n+ eco.balance.fetch('123', '123')\r\n+ eco.balance.set(10, '123', '123')\r\n+ eco.balance.add(10, '123', '123')\r\n+ eco.balance.subtract(10, '123', '123')\r\n+ eco.balance.leaderboard('123')\r\n\r\n- eco.bankFetch('123', '123')\r\n- eco.bankSet(10, '123', '123')\r\n- eco.bankAdd(10, '123', '123')\r\n- eco.bankSubtract(10, '123', '123')\r\n- eco.bankLeaderboard('123')\r\n\r\n+ eco.bank.fetch('123', '123')\r\n+ eco.bank.set(10, '123', '123')\r\n+ eco.bank.add(10, '123', '123')\r\n+ eco.bank.subtract(10, '123', '123')\r\n+ eco.bank.leaderboard('123')\r\n```\r\n<li><b>'Economy.balance.leaderboard()' and 'Economy.bank.leaderboard()' methods arrays are now have an 'index' property in object.</b></li>\r\n</ul>\r\n<b>1.2.6</b>\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Now 'ready' and 'destroy' events will return nothing (Void) instead of Boolean.</b></li>\r\n</ul>\r\n<b>1.2.8</b>\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Item IDs in shop and inventory are now synced with the last element of array. It fixes the bug with similar item IDs in the shop and inventory.</b></li>\r\n</ul>\r\n<b>1.3.0</b>\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Now this module has a <a href=\"https://des-docs.tk\">documentation website</a>!</b></li>\r\n<li><b>Added an 'Economy.docs' property that contains a link to the docs website.</b></li>\r\n<li><b>I think this is the last version of this module. Next versions would be only bugfixes or people's ideas. Thank you for using this module!</b></li>\r\n</ul>\r\n\r\n## Useful Links\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">Github</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/afUTRzfb\">Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, please send it in Discord to ShadowPlay#9706.</b>\r\n<br>\r\n<b>If you have any questions or need help, join the <a href = \"https://discord.gg/afUTRzfb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# Thanks for using Discord Economy Super â™¥",
                    "path": "general/changelog.md"
                }
            }
        }
    },
    "classes": [
        {
            "name": "EconomyError",
            "description": "EconomyError class.",
            "construct": {
                "name": "EconomyError",
                "description": "Creates an 'EconomyError' error instance.",
                "params": [
                    {
                        "name": "message",
                        "description": "Error message.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ],
                            [
                                [
                                    "Error"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "name",
                    "description": "Error name.",
                    "type": [
                        [
                            [
                                "string"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 19,
                        "file": "EconomyError.js",
                        "path": "src"
                    }
                }
            ],
            "meta": {
                "line": 4,
                "file": "EconomyError.js",
                "path": "src"
            }
        },
        {
            "name": "Economy",
            "description": "The main Economy class.",
            "construct": {
                "name": "Economy",
                "description": "The Economy class.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.checkStorage",
                        "description": "Checks the if database file exists and if it has errors. Default: true",
                        "type": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dailyCooldown",
                        "description": "Cooldown for Daily Command (in ms). Default: 24 Hours (60000 * 60 * 24) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.workCooldown",
                        "description": "Cooldown for Work Command (in ms). Default: 1 Hour (60000 * 60) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dailyAmount",
                        "description": "Amount of money for Daily Command. Default: 100.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.weeklyCooldown",
                        "description": "Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.weeklyAmount",
                        "description": "Amount of money for Weekly Command. Default: 1000.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.workAmount",
                        "description": "Amount of money for Work Command. Default: [10, 50].",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ],
                            [
                                [
                                    "Array"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.updateCountdown",
                        "description": "Checks for if storage file exists in specified time (in ms). Default: 1000.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dateLocale",
                        "description": "The region (example: 'ru'; 'en') to format date and time. Default: 'ru'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.updater",
                        "description": "Update Checker options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.updater.checkUpdates",
                        "description": "Sends the update state message in console on start. Default: true.",
                        "type": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.updater.upToDateMessage",
                        "description": "Sends the message in console on start if module is up to date. Default: true.",
                        "type": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.errorHandler",
                        "description": "Error Handler options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.errorHandler.handleErrors",
                        "description": "Handles all errors on startup. Default: true.",
                        "type": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.errorHandler.attempts",
                        "description": "Amount of attempts to load the module. Use 'null' for infinity attempts. Default: 5.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.errorHandler.time",
                        "description": "Time between every attempt to start the module (in ms). Default: 3000.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "ready",
                    "description": "Module ready status.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "boolean"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 166,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "errored",
                    "description": "Economy errored status.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "boolean"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 171,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "version",
                    "description": "Module version.",
                    "type": [
                        [
                            [
                                "string"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 176,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "docs",
                    "description": "Link to the module's documentation website.",
                    "type": [
                        [
                            [
                                "string"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 181,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "options",
                    "description": "Constructor options object.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "object"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 186,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "interval",
                    "description": "Database checking interval.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "NodeJSTimeout"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 191,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "errors",
                    "description": "Economy errors object.",
                    "type": [
                        [
                            [
                                "object"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 196,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "balance",
                    "description": "Balance methods object.",
                    "type": [
                        [
                            [
                                "Balance"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 201,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bank",
                    "description": "Bank balance methods object.",
                    "type": [
                        [
                            [
                                "Balance"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 206,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shop",
                    "description": "An object with methods to create a shop on your server.",
                    "type": [
                        [
                            [
                                "Shop"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 211,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "methods": [
                {
                    "name": "checkUpdates",
                    "description": "Checks for if the module is up to date.",
                    "async": true,
                    "returns": {
                        "types": [
                            [
                                [
                                    "Promise"
                                ]
                            ]
                        ],
                        "description": "This method will show is the module updated, latest version and installed version."
                    },
                    "meta": {
                        "line": 218,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "all",
                    "description": "Fetches the entire database.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ],
                        "description": "Database contents"
                    },
                    "meta": {
                        "line": 236,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "clearStorage",
                    "description": "Clears the storage file.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared successfully: true; else: false"
                    },
                    "meta": {
                        "line": 243,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "removeGuild",
                    "description": "Fully removes the guild from database.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared successfully: true; else: false"
                    },
                    "meta": {
                        "line": 253,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "removeUser",
                    "description": "Removes the user from database.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared successfully: true; else: false"
                    },
                    "meta": {
                        "line": 270,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "daily",
                    "description": "Adds a daily reward on user's balance",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was added. Default: 'claimed the daily reward'",
                            "default": "claimed the daily reward",
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "Daily money amount or time before next claim"
                    },
                    "meta": {
                        "line": 287,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "work",
                    "description": "Adds a work reward on user's balance",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was added. Default: 'claimed the work reward'",
                            "default": "claimed the work reward",
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "Work money amount"
                    },
                    "meta": {
                        "line": 339,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "weekly",
                    "description": "Adds a weekly reward on user's balance",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was added. Default: 'claimed the weekly reward'",
                            "default": "claimed the weekly reward",
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "Weekly money amount"
                    },
                    "meta": {
                        "line": 392,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "getDailyCooldown",
                    "description": "Gets user's daily cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Cooldown end timestamp"
                    },
                    "meta": {
                        "line": 443,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "getWorkCooldown",
                    "description": "Gets user's work cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Cooldown end timestamp"
                    },
                    "meta": {
                        "line": 455,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "getWeeklyCooldown",
                    "description": "Gets user's work cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Cooldown end timestamp"
                    },
                    "meta": {
                        "line": 467,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "clearDailyCooldown",
                    "description": "Clears user's daily cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false"
                    },
                    "meta": {
                        "line": 479,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "clearWorkCooldown",
                    "description": "Clears user's work cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false"
                    },
                    "meta": {
                        "line": 503,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "clearWeeklyCooldown",
                    "description": "Clears user's work cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false"
                    },
                    "meta": {
                        "line": 527,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "kill",
                    "description": "Kills the Economy instance.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "this"
                                ]
                            ]
                        ],
                        "description": "Economy instance."
                    },
                    "meta": {
                        "line": 549,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "init",
                    "description": "Starts the module.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Promise",
                                    "<("
                                ],
                                [
                                    "true",
                                    "|"
                                ],
                                [
                                    "void",
                                    "|"
                                ],
                                [
                                    "Error",
                                    ")>"
                                ]
                            ]
                        ],
                        "description": "If started successfully: true; else: Error instance."
                    },
                    "meta": {
                        "line": 562,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "_init",
                    "description": "Initializates the module.",
                    "access": "private",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Promise",
                                    "<("
                                ],
                                [
                                    "true",
                                    "|"
                                ],
                                [
                                    "Error",
                                    ")>"
                                ]
                            ]
                        ],
                        "description": "If started successfully: true; else: Error instance."
                    },
                    "meta": {
                        "line": 615,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "events": [
                {
                    "name": "balanceSet",
                    "description": "Emits when someone's set the money on the balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 17,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "balanceAdd",
                    "description": "Emits when someone's added the money on the balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 28,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "balanceSubtract",
                    "description": "Emits when someone's subtracts the money from user's balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 39,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bankSet",
                    "description": "Emits when someone's set the money on the bank balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 50,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bankAdd",
                    "description": "Emits when someone's added the money on the bank balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 61,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bankSubtract",
                    "description": "Emits when someone's subtracts the money from user's bank balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 72,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopAddItem",
                    "description": "Emits when someone's added an item in the shop.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.name",
                            "description": "Item name.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.price",
                            "description": "Item price.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.message",
                            "description": "Item message that will be returned on item use.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.description",
                            "description": "Item description.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.maxAmount",
                            "description": "Max amount of the item that user can hold in his inventory.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.role",
                            "description": "Role ID from your Discord server.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.date",
                            "description": "Formatted date when the item was added to the shop.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 84,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopItemBuy",
                    "description": "Emits when someone's added an item in the shop.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.name",
                            "description": "Item name.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.price",
                            "description": "Item price.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.message",
                            "description": "Item message that will be returned on item use.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.description",
                            "description": "Item description.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.maxAmount",
                            "description": "Max amount of the item that user can hold in his inventory.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.role",
                            "description": "Role ID from your Discord server.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.date",
                            "description": "Formatted date when the item was added to the shop.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 96,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopItemUse",
                    "description": "Emits when someone's used an item from his inventory.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.name",
                            "description": "Item name.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.price",
                            "description": "Item price.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.message",
                            "description": "Item message that will be returned on item use.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.description",
                            "description": "Item description.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.maxAmount",
                            "description": "Max amount of the item that user can hold in his inventory.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.role",
                            "description": "Role ID from your Discord server.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.date",
                            "description": "Formatted date when the item was added to the shop.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 108,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopEditItem",
                    "description": "Emits when someone's edited an item in the shop.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.changed",
                            "description": "hat was changed in item data.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.oldValue",
                            "description": "Value before edit.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.newValue",
                            "description": "Value after edit.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 120,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "ready",
                    "description": "Emits when the module is ready.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Void event.",
                            "type": [
                                [
                                    [
                                        "void"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 130,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "destroy",
                    "description": "Emits when the module is destroyed.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Void event.",
                            "type": [
                                [
                                    [
                                        "void"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 135,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "meta": {
                "line": 16,
                "file": "index.js",
                "path": "src"
            }
        },
        {
            "name": "Balance",
            "description": "Balance methods object class.",
            "methods": [
                {
                    "name": "fetch",
                    "description": "Fetches the user's balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "User's balance"
                    },
                    "meta": {
                        "line": 767,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "set",
                    "description": "Sets the money amount on user's balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Amount of money that you want to set",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you set the money",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount"
                    },
                    "meta": {
                        "line": 781,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "add",
                    "description": "Adds the money amount on user's balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Amount of money that you want to add",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount"
                    },
                    "meta": {
                        "line": 809,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "subtract",
                    "description": "Subtracts the money amount from user's balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Amount of money that you want to subtract",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you subtract the money",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount"
                    },
                    "meta": {
                        "line": 838,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "leaderboard",
                    "description": "Shows a money leaderboard for your server",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "Sorted leaderboard array"
                    },
                    "meta": {
                        "line": 864,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "meta": {
                "line": 760,
                "file": "index.js",
                "path": "src"
            }
        },
        {
            "name": "Bank",
            "description": "Bank methods object class.",
            "methods": [
                {
                    "name": "fetch",
                    "description": "Fetches the user's bank balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "User's bank balance"
                    },
                    "meta": {
                        "line": 887,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "set",
                    "description": "Sets the money amount on user's bank balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Amount of money that you want to set",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you set the money",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount"
                    },
                    "meta": {
                        "line": 901,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "add",
                    "description": "Adds the money amount on user's bank balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Amount of money that you want to add",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount"
                    },
                    "meta": {
                        "line": 929,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "subtract",
                    "description": "Subtracts the money amount from user's bank balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Amount of money that you want to subtract",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you subtract the money",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount"
                    },
                    "meta": {
                        "line": 958,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "leaderboard",
                    "description": "Shows a bank money leaderboard for your server",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "Sorted leaderboard array"
                    },
                    "meta": {
                        "line": 984,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "meta": {
                "line": 880,
                "file": "index.js",
                "path": "src"
            }
        },
        {
            "name": "Shop",
            "description": "Shop methods object class.",
            "methods": [
                {
                    "name": "addItem",
                    "description": "Creates an item in shop.",
                    "params": [
                        {
                            "name": "options",
                            "description": "Options object with item info.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "options.itemName",
                            "description": "Item name.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "options.price",
                            "description": "Item price.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "options.message",
                            "description": "Item message that will be returned on use.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "options.description",
                            "description": "Item description.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "options.maxAmount",
                            "description": "Max amount of the item that user can hold in his inventory.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "options.role",
                            "description": "Role ID from your Discord server.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ],
                        "description": "Item info."
                    },
                    "meta": {
                        "line": 1013,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "editItem",
                    "description": "Edits the item in shop.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "arg",
                            "description": "This argument means what thing in item you want to edit. Avaible arguments: description, price, name, message, amount, role",
                            "type": [
                                [
                                    [
                                        "description",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "price",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "itemName",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "message",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "maxAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "role",
                                        "'"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If edited successfully: true, else: false"
                    },
                    "meta": {
                        "line": 1042,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "removeItem",
                    "description": "Removes an item from the shop.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If removed: true, else: false"
                    },
                    "meta": {
                        "line": 1090,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "clear",
                    "description": "Clears the shop.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true, else: false"
                    },
                    "meta": {
                        "line": 1109,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "clearInventory",
                    "description": "Clears the user's inventory.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true, else: false"
                    },
                    "meta": {
                        "line": 1128,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "clearHistory",
                    "description": "Clears the user's purchases history.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true, else: false"
                    },
                    "meta": {
                        "line": 1153,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "list",
                    "description": "Shows all items in the shop.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "The shop array."
                    },
                    "meta": {
                        "line": 1175,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "searchItem",
                    "description": "Searches for the item in the shop.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "If item not found: null; else: item data array"
                    },
                    "meta": {
                        "line": 1187,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "buy",
                    "description": "Buys the item from the shop",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was added. Default: 'received the item from the shop'",
                            "default": "received the item from the shop",
                            "type": [
                                [
                                    [
                                        "string"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "String"
                                ]
                            ],
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If item bought successfully: true; if item not found: false; if user reached the item's max amount: 'max'"
                    },
                    "meta": {
                        "line": 1206,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "inventory",
                    "description": "Shows all items in user's inventory",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "The user's inventory array."
                    },
                    "meta": {
                        "line": 1245,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "useItem",
                    "description": "Uses the item from the user's inventory.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "client",
                            "description": "The Discord Client [Optional]",
                            "type": [
                                [
                                    [
                                        "Client"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ],
                        "description": "Item message"
                    },
                    "meta": {
                        "line": 1262,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "history",
                    "description": "Shows the user's purchase history.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "data"
                                ]
                            ]
                        ],
                        "description": "User's purchase history."
                    },
                    "meta": {
                        "line": 1306,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "meta": {
                "line": 1000,
                "file": "index.js",
                "path": "src"
            }
        }
    ],
    "interfaces": [],
    "typedefs": [],
    "externals": []
}
