{"meta":{"generator":"0.11.1","format":22,"date":1679191362660},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## üôã‚Äç‚ôÇÔ∏è | Welcome!\r\nWelcome to the `discord-economy-super v1.7.5` documentation!\r\n\r\n## üìÇ | Installation\r\n<b>Note:<b>\r\n</br>\r\n<b>Node.js 14.0.0 or newer is required. Otherwise, the module won't work.</b><br>\r\n```console\r\n$ npm i discord-economy-super\r\n$ yarn add discord-economy-super\r\n$ pnpm add discord-economy-super\r\n```\r\n\r\n## ‚ùì | What is Discord Economy Super?\r\n<b>Discord Economy Super is a powerful Node.js module that allows you to make an economy system in your bot very easily. Supports both MongoDB and JSON databases!</b>\r\n\r\nFeatures:\r\n<br>\r\n<ul>\r\n<li><b>Clean TypeScript Defenitions üìò</b></li>\r\n<li><b><a href=\"https://des-docs.js.org/#/docs/main/1.7.5/general/migrating-to-mongo\">MongoDB Support üçÉ</a></b></li>\r\n<li><b>Object-oriented üìú</b></li>\r\n<li><b>Flexible and Customizable ‚öôÔ∏è</b></li>\r\n<li><b>Easy to use üëç</b></li>\r\n<li><b>Beginner Friendly üòÑ</b></li>\r\n<li><b>Shop System üõí</b></li>\r\n<li><b>Bank Balance System üè¶</b></li>\r\n<li><b>Custom Currencies System üíµ</b></li>\r\n<li><b><a href=\"https://des-docs.js.org/#/docs/main/1.7.5/general/custom-data\">Custom Item Data üìù</a></b></li>\r\n<li><b><a href=\"https://des-docs.js.org/#/docs/main/1.7.5/general/configuring\">Multi-Server Setup üîß</a></b></li>\r\n</ul>\r\n\r\n## ü§î | Help\r\n<b>If you don't understand something in the documentation or you are experiencing problems, feel free to join our <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>\r\n\r\nLooking for a documentation for **MongoDB** version? Scroll down to the end in a version selection dropdown list on a sidebar!\r\n\r\n</b>\r\n\r\n## üïò | My Other Modules\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-leveling-super\">discord-leveling-super</a></b></li>\r\n<li><b><a href = \"https://www.npmjs.com/package/quick-mongo-super\">quick-mongo-super</a></b></li>\r\n</ul>\r\n\r\n## ‚ùó | Useful Links\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://des-docs.js.org/#/docs/main/1.5.2general/faq\">Frequently Asked Questions</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<br>\r\n<b>If you don't understand something in the documentation or you are experiencing problems, feel free to join our <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/welcome.md"},"faq":{"name":"FAQ","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## ‚ùì | Frequently Asked Questions\r\n\r\n### **Q:** Is it possible to use MongoDB in Economy?\r\n\r\n#### **A:** Of course! Just follow the [migration guide](https://des-docs.js.org/#/docs/main/1.7.5/general/migrating-to-mongo) to start using Economy with MongoDB.\r\n\r\n<br>\r\n\r\n### **Q:** I have dublicate items in my inventory. How do I filter them out?\r\n\r\n#### **A:** There's a `stack()` method in `InventoryItem` that allows you to do this easliy.\r\n\r\nIt transforms the normal inventory array into array of unique objects that includes the number of specific item in inventory (quantity), the item itself and the total price of all of the specific item *(totalItemPrice = itemPrice \\* quantity)*\r\n\r\n```js\r\n// Assuming that `inventory` variable is inventory array (e. g. array of `InventoryItem`s):\r\n\r\nmessage.channel.send(\r\n\t`${message.author} - User Inventory [**${inventory.length}** items]:\\n\\n` +\r\n\r\n\tinventory.map((item, index) => {\r\n    \tconst stackedItem = item.stack()\r\n\r\n    \tconst entry =\r\n        \t`${index + 1} - **x${stackedItem.quantity} ${stackedItem.item.name}** - ` +\r\n        \t`${stackedItem.totalPrice} coins in total`\r\n\r\n    \treturn entry\r\n\t}).join('\\n')\r\n)\r\n```\r\n\r\n<br>\r\n\r\n### **Q:** Why do I get a \"Cannot read property '(any manager property or method)' of null\"?\r\n\r\n#### **A:** Because the module is not started and not ready yet. Assign the economy property to your bot client or reassign the economy variable in \"ready\" event to fix this problem:\r\n\r\n```js\r\nconst Economy = require('discord-economy-super')\r\nlet economy = new Economy(options)\r\n\r\neconomy.on('ready', eco => {\r\n    <client>.eco = eco\r\n\t// or\r\n\teconomy = eco\r\n})\r\n\r\n\r\n// both ways will work fine:\r\n\r\nconst economyUsers = eco.users.all()\r\nconst economyUsers1 = bot.eco.users.all()\r\n```\r\n\r\n<br>\r\n\r\n### **Q:** Why do I get a \"SyntaxError: Unexpected token '.' \"?\r\n\r\n#### **A:** Because the module is supporting only Node.js v14.0.0 or above. Earlier versions are not supporting the \"?.\" operator. You need to update Node.js to make the module work.\r\n\r\n<br>\r\n\r\n### **Q:** Why is the code from examples not working?\r\n\r\n#### **A:** Examples provided in documentation and in GitHub are for one-file bot. For multiple-files bot it might need to be changed. See the questions above to get more info. If it's a bug, see the question below.\r\n\r\n### **Q:** I found a bug or have an idea. Where I could submit it?\r\n\r\n#### **A:** In our [Support Server](https://discord.gg/4pWKq8vUnb). We appreciate that!\r\n\r\n<br>\r\n\r\n### **Q:** Can I use the module globally?\r\n\r\n#### **A:** Yes! Just use a static value (such as 'global', '123', etc.) as guildID in all methods, and the module will work like with only one guild. \r\n#### For example, we have this database: \r\n\r\n```js\r\n{\r\n    \"global\": {\r\n\t    \"123\": {\r\n\t\t    \"money\": 1150,\r\n\t\t    \"dailyCooldown\": 1638034751398,\r\n\t\t    \"weeklyCooldown\": 1636811771994,\r\n\t\t    \"workCooldown\": 1636817161065,\r\n\t\t    \"inventory\": [],\r\n\t\t    \"history\": []\r\n\t    }\r\n    },\r\n\t\"other_guild_id\": {\r\n\t\t\"123\": {\r\n\t\t\t\"money\": 2000,\r\n\t\t\t\"dailyCooldown\": 1638034751398,\r\n\t\t\t\"weeklyCooldown\": 1636811771994,\r\n\t\t\t\"workCooldown\": 1636817161065,\r\n\t\t\t\"inventory\": [],\r\n\t\t\t\"history\": []\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nAnd here's the example code with that database:\r\n```js\r\nconst STATIC_GUILD_ID = 'global'\r\nconst OTHER_GUILD_ID = 'other_guild_id'\r\n\r\nconst guild = eco.guilds.get(STATIC_GUILD_ID)\r\nconst guild1 = eco.guilds.get(OTHER_GUILD_ID)\r\n\r\nconst user = guild.users.get('123')\r\nconst user1 = guild1.users.get('123')\r\n\r\nconst balance = user.balance.get() // 1150\r\nconst balance1 = user1.balance.get() // 2000\r\n```\r\nIn this code, `global` and `other_guild_id` are different values. It means, that the module will search for the data in different guilds. Using the same value will search for the data in the same guild. So, the data from every Discord guild will be stored in the same Economy guild and the data will be accessible on every Discord guild.\r\n\r\nSee [this page](https://des-docs.js.org/#/docs/main/1.7.5/general/global) for additional info about using the module globally.\r\n\r\n<br>\r\n\r\n### **Q:** Can I send a random messages on using the item?\r\n\r\n#### **A:** Yes! Here's the example of it:\r\n\r\nRandom string syntax: `[random=\"item1\", \"item2\", \"etc...\"]`\r\nExample usage:\r\n\r\n```js\r\nconst guild = eco.guilds.get('guildID')\r\nconst user = eco.users.get('userID')\r\n\r\nguild.shop.addItem({\r\n  name: 'good day',\r\n  price: 100,\r\n  message: 'What a [random=\"wonderful\", \"great\", \"sunny\"] day!',\r\n});\r\n\r\nuser.items.buy(1, \"memberID\", \"guildID\")\r\n\r\neco.inventory.useItem(1, \"memberID\", \"guildID\"); // What a wonderful day!\r\neco.inventory.useItem(1, \"memberID\", \"guildID\"); // What a great day!\r\neco.inventory.useItem(1, \"memberID\", \"guildID\"); // What a sunny day!\r\n\r\n// In a returning string, [random=\"wonderful\", \"great\", \"sunny\"]\r\n// will be replaced with the any of\r\n// the words \"wonderful\", \"great\" or \"sunny\".\r\n```\r\n\r\n<br>\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Bot Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/faq.md"},"migrating-to-mongo":{"name":"Migrating to MongoDB","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n# MongoDB Migration Guide\r\n\r\n## Introduction\r\n\r\nBefore we start, I'd like to say about the most important changes in MongoDB version of economy.<br>\r\nFirstly, you have to use (async/await)s to get methods' values as it had to be moved to Promises usage.<br>\r\nFor example, this code:\r\n\r\n```js\r\nconst guild = eco.guilds.get(\"123\");\r\nconst user = guild.users.get(\"321\");\r\n\r\nconsole.log(guild);\r\nconsole.log(user);\r\n```\r\n\r\nshould be changed to this:\r\n\r\n```js\r\n// in async function\r\n\r\nconst guild = await eco.guilds.get(\"123\");\r\nconst user = await guild.users.get(\"321\");\r\n\r\nconsole.log(guild);\r\nconsole.log(user);\r\n```\r\n\r\nor this:\r\n\r\n```js\r\neco.guilds.get(\"123\").then((guild) => {\r\n  guild.users.get(\"321\").then((user) => {\r\n    console.log(guild);\r\n    console.log(user);\r\n  });\r\n});\r\n```\r\n\r\n## First Steps\r\n\r\nTo use the Mongo version of Economy, we need to require it:\r\n\r\n```js\r\nconst Economy = require(\"discord-economy-super/mongodb\");\r\n// or:\r\nimport Economy from \"discord-economy-super/mongodb\";\r\n```\r\n\r\n## Configuring the Connection\r\n\r\nNow we need to configure the connection to MongoDB. In this version, having a configuration object is required as we need to provide the connection data to our cluster.\r\n\r\nPlease note that `storagePath`, `checkStorage` and `updateCountdown` options were removed as they don't belong to MongoDB.\r\n\r\n```js\r\nconst eco = new Economy({\r\n    connection: {\r\n        connectionURI: '...', // mongodb connection URI\r\n        collectionName: 'collection', // optional\r\n        dbName: 'db' // optional\r\n        mongoClientOptions: { ... } // optional\r\n    }\r\n})\r\n```\r\n\r\n## Important Things\r\n\r\n- `FetchManager`, `DotParser` and everything JSON-related was deleted.\r\n- All the code in MongoDB version is 100% Promise based.\r\n- All the deprecated methods were removed from MongoDB version as they caused a lot of problems.\r\n\r\n## Before you start...\r\n\r\nVersion 1.6.1 has A LOT of changes (including breaking ones), it got a lot of new features and bugfixes, the code you will write will become better and more understandable with the powers of **brand new** `BaseManager`, `UserManager`, `GuildManager`'s and lots of new **Classes**!\r\n\r\nAlso the typings are now way better with the power of **generic** methods and generic types!\r\n\r\nI suggest you to read the [changelog](https://des-docs.js.org/#/docs/main/1.7.5/general/changelog) and the [documentation](https://des-docs.js.org/#/docs/main/1.7.5/general/welcome) to know what's new, what's changed and how to update your code.\r\n\r\nAlso you can check the [summary](https://des-docs.js.org/#/docs/main/1.7.5/general/updating) to see the main changes in this update.\r\n\r\nNow, remove the usage all the deprecated methods (in MongoDB version, all deprecated methods were removed), change your code to async/awaits and you're ready to go!\r\n\r\nHere's a little working MongoDB example:\r\n\r\n```js\r\nconst eco = new Economy({\r\n    connection: {\r\n        connectionURI: '...', // mongodb connection uri\r\n        collectionName: 'collection', // optional\r\n        dbName: 'db' // optional\r\n        mongoClientOptions: { ... } // optional\r\n    }\r\n})\r\n\r\neco.on('ready', async () => {\r\n    console.log('Economy is ready!')\r\n\r\n    const guild = await eco.guilds.get('guildID')\r\n    const user = await guild.users.get('userID')\r\n\r\n    const dailyReward = await user.rewards.getDaily()\r\n\r\n\r\n    console.log(guild.id)\r\n    console.log(user.id)\r\n\r\n    console.log(dailyReward)\r\n})\r\n```\r\n\r\nAll the examples for both JavaScript and TypeScript are available on [GitHub](https://github.com/shadowplay1/discord-economy-super/tree/main/examples).\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Bot Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/migrating-to-mongo.md"},"examples":{"name":"Examples","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## Initialation Example\r\n\r\n```js\r\nconst { Client } = require('discord.js');\r\nconst Economy = require('discord-economy-super');\r\n\r\nconst client = new Client({\r\n  intents: ['GuildMembers', 'GuildMessages'],\r\n});\r\n\r\n\r\n// all options are optional (and values below are default vales if not specified),\r\n// they were made to configure the module.\r\n\r\n// learn more about configuring Economy and see the full options list and full configuring example here:\r\n// https://des-docs.js.org/#/docs/main/1.7.5/general/configuring\r\n\r\nlet eco = new Economy({\r\n    storagePath: './storage.json',\r\n    updateCountdown: 1000,\r\n    checkStorage: true,\r\n})\r\n\r\nclient.on('ready', () => {\r\n  console.log(`${client.user.tag} is ready!`);\r\n})\r\n\r\neco.on('ready', economy => {\r\n  console.log(`Economy is ready!`);\r\n  eco = economy\r\n})\r\n\r\nclient.login('token');\r\n```\r\n\r\n## Balance Command\r\n\r\n```js\r\nif (command == prefix + 'balance') {\r\n  const [userID] = args\r\n  const guild = eco.guilds.get(message.guild.id)\r\n\r\n  const user = guild.users.get(\r\n      message.mentions.users.first()?.id ||\r\n      message.guild.users.get(userID) ||\r\n      message.author.id\r\n)\r\n\r\n  const [balance, bank] = [\r\n      user.balance.get(),\r\n      user.bank.get()\r\n  ]\r\n\r\n  message.channel.send(\r\n      `${message.author}'s balance:\\n` +\r\n      `Coins: **${balance}**.\\n` +\r\n      `Coins in bank: **${bank}**.`\r\n  )\r\n}\r\n```\r\n\r\n## Daily, Work and Weekly Commands\r\n\r\n```js\r\nif (command == prefix + 'daily') {\r\n  const guild = eco.guilds.get(message.guild.id)\r\n  const user = guild.users.get(message.author.id)\r\n\r\n  const dailyResult = user.rewards.getDaily<false>()\r\n\r\n  if (dailyResult.cooldown) {\r\n      return message.channel.send(\r\n          `${message.author}, you can claim your daily reward in ${dailyResult.cooldown.pretty}.`\r\n      )\r\n  }\r\n\r\n  message.channel.send(\r\n      `${message.author}, you claimed your **${dailyResult.reward}** daily coins!`\r\n  )\r\n}\r\n\r\n\r\nif (command == prefix + 'work') {\r\n  const guild = eco.guilds.get(message.guild.id)\r\n  const user = guild.users.get(message.author.id)\r\n\r\n  const workResult = user.rewards.getWork<true>()\r\n\r\n  if (workResult.cooldown) {\r\n      return message.channel.send(\r\n          `${message.author}, you can work again in ${workResult.cooldown.pretty}.`\r\n      )\r\n  }\r\n\r\n  message.channel.send(\r\n      `${message.author}, you worked hard and earned **${workResult.reward}** coins!`\r\n  )\r\n}\r\n\r\n\r\nif (command == prefix + 'weekly') {\r\n  const guild = eco.guilds.get(message.guild.id)\r\n  const user = guild.users.get(message.author.id)\r\n\r\n  const weeklyResult = user.rewards.getWeekly<true>()\r\n\r\n  if (weeklyResult.cooldown) {\r\n      return message.channel.send(\r\n          `${message.author}, you can claim your weekly reward in ${weeklyResult.cooldown.pretty}.`\r\n      )\r\n  }\r\n\r\n  message.channel.send(\r\n      `${message.author}, you claimed your **${weeklyResult.reward}** weekly coins!`\r\n  )\r\n}\r\n```\r\n\r\n## Deposit & Withdraw Commands\r\n\r\n```js\r\nif (command == prefix + 'deposit') {\r\n  const guild = eco.guilds.get(message.guild.id)\r\n  const user = guild.users.get(message.author.id)\r\n\r\n  const userBalance = user.balance.get()\r\n  const amount = parseInt(args[0])\r\n\r\n  if (userBalance < amount) {\r\n      return message.channel.send(\r\n          `${message.author}, you don't have enough coins` +\r\n          `to perform this deposit.`\r\n      )\r\n  }\r\n\r\n  user.balance.subtract(amount, `depositted ${amount} coins`)\r\n  user.bank.add(amount, `depositted ${amount} coins`)\r\n\r\n  message.channel.send(\r\n      `${message.author}, you deposited **${amount}** coins to your bank.`\r\n  )\r\n}\r\n\r\n\r\nif (command == prefix + 'withdraw') {\r\n  const guild = eco.guilds.get(message.guild.id)\r\n  const user = guild.users.get(message.author.id)\r\n\r\n  const userBankBalance = user.bank.get()\r\n  const amount = parseInt(args[0])\r\n\r\n  if (userBankBalance < amount) {\r\n      return message.channel.send(\r\n          `${message.author}, you don't have enough coins` +\r\n          `in your bank to perform this withdraw.`\r\n      )\r\n  }\r\n\r\n  user.bank.subtract(amount, `withdrew ${amount} coins`)\r\n  user.balance.add(amount, `withdrew ${amount} coins`)\r\n\r\n  message.channel.send(\r\n      `${message.author}, you withdrew **${amount}** coins from your bank.`\r\n  )\r\n}\r\n```\r\n\r\n# Shop Add & Display, Item Buy & Item Use\r\n\r\n```js\r\n// Display the guild shop\r\nif (command == prefix + 'shop') {\r\n    const guildShop = eco.shop.all()\r\n\r\n    if (!guildShop.length) {\r\n        return message.channel.send(`${message.author}, there are no items in the shop.`)\r\n    }\r\n\r\n    message.channel.send(\r\n        `**${message.guild.name}** - Guild Shop **[${guildShop.length} items]**:\\n\\n` +\r\n\r\n        `${guildShop\r\n            .map((item, index) => `${index + 1} - **${item.name}** (ID: **${item.id}**) - **${item.price}** coins`)\r\n            .join('\\n')}`\r\n    )\r\n}\r\n\r\n// Add the item to the shop\r\nif (command == prefix + 'shop_add') {\r\n    const guild = eco.guilds.get(message.guild.id)\r\n    const user = guild.users.get(message.author.id)\r\n\r\n    const [name, emoji, priceString] = args\r\n\r\n    const price = parseInt(priceString)\r\n    const messageOnUse = args.slice(3).join(' ') \r\n    \r\n    // message on use is optional and defaults to `You have used this item!`\r\n\r\n    // supports choosing a random string from a specified strings list with following syntax:\r\n    // [random=\"str\", \"str1\", \"str2\"]\r\n\r\n    // for example, if specifying `What a [random=\"wonderful\", \"great\", \"sunny\"] day!` as message on use\r\n    // then in returned message, `[random=\"wonderful\", \"great\", \"sunny\"]` will be replaced with either\r\n    // \"wonderful\", \"great\" or \"sunny\".\r\n\r\n    if (!name) {\r\n        return message.channel.send(`${message.author}, please provide a name for the item.`)\r\n    }\r\n\r\n    if (!price) {\r\n        return message.channel.send(`${message.author}, please provide a price for the item.`)\r\n    }\r\n\r\n    // see all the available item options here:\r\n    // https://des-docs.js.org/#/docs/main/1.7.5/typedef/AddItemOptions\r\n\r\n    // learn more about custom item data:\r\n    // https://des-docs.js.org/#/docs/main/1.7.5/general/custom-data\r\n\r\n    const newItem = guild.shop.addItem({\r\n        name,\r\n        price,\r\n        message: messageOnUse || ''\r\n    })\r\n\r\n    message.channel.send(\r\n        `${message.author}, you added **${newItem.name}** for **${newItem.price}** coins to the shop.`\r\n    )\r\n}\r\n\r\n// Buy an item from the shop\r\n// (adds the item to user's inventory and \r\n// subtracts its price from the user's balance if `subtractOnBuy` option is `true`)\r\n\r\n// Learn more about configuring Economy:\r\n// https://des-docs.js.org/#/docs/main/1.7.5/general/configuring\r\nif (command == prefix + 'shop_buy') {\r\n    const guild = eco.guilds.get(message.guild.id)\r\n    const user = guild.users.get(message.author.id)\r\n\r\n    const [itemID, quantityString] = args\r\n    const quantity = parseInt(quantityString) || 1\r\n\r\n    const item = shop.find(item => item.id == parseInt(itemID) || item.name == itemID)\r\n\r\n    if (!itemID) {\r\n        return message.channel.send(`${message.author}, please specify an item.`)\r\n    }\r\n\r\n    if (!item) {\r\n        return message.channel.send(`${message.author}, item not found.`)\r\n    }\r\n\r\n    if (!item.isEnoughMoneyFor(message.author.id, quantity)) {\r\n        return message.channel.send(\r\n            `${message.author}, you don't have enough coins to buy ` +\r\n            `**x${quantity} ${item.custom.emoji} ${item.name}**.`\r\n        )\r\n    }\r\n\r\n    const buyingResult = user.items.buy(item.id, quantity)\r\n\r\n    if (!buyingResult.status) {\r\n        return message.channel.send(`${message.author}, failed to buy the item: ${buyingResult.message}`)\r\n    }\r\n\r\n    message.channel.send(\r\n         `${message.author}, you bought **x${buyingResult.quantity} ` +\r\n        `${item.custom.emoji} ${item.name}** for **${buyingResult.totalPrice}** coins.`\r\n    )\r\n}\r\n\r\n// Use the item from user inventory\r\nif (command == prefix + 'shop_use') {\r\n    const [itemID] = args\r\n    const item = inventory.find(item => item.id == parseInt(itemID) || item.name == itemID)\r\n\r\n    if (!itemID) {\r\n        return message.channel.send(`${message.author}, please specify an item in your inventory.`)\r\n    }\r\n\r\n    if (!item) {\r\n        return message.channel.send(`${message.author}, item not found in your inventory.`)\r\n    }\r\n\r\n    // client is an optional parameter in `use` methods for items\r\n    \r\n    // the module does not depend on discord.js so it cannot do anything from your bot\r\n    // specifying your bot client here allows automatically add the role whose ID was specified when creating the item\r\n\r\n    // `use` method returns a message to be sent on using the item\r\n\r\n    const resultMessage = item.use(client)\r\n    message.channel.send(resultMessage)\r\n}\r\n```\r\n\r\n# Custom Currencies\r\n\r\n```js\r\n// Create a currency for the guild\r\nif (command == prefix + 'createCurrency') {\r\n    const [name, symbol] = args\r\n    \r\n    eco.currencies.create(name, symbol, message.guild.id)\r\n    message.channel.send(`Successfully created a new **${name} (${symbol})** currency!`)\r\n}\r\n\r\n// Check the currency balance on the guild\r\nif (command == prefix + 'currencyBalance') {\r\n    // (currency ID, currency name or currency symbol) means that\r\n    // either currency ID (currency's unique ID), currency name or currency symbol\r\n    // could be provided in `currency` methods.\r\n\r\n    // currency names and symbols are NOT case sensetive!\r\n\r\n    const [userID] = args\r\n    const guild = eco.guilds.get(message.guild.id)\r\n\r\n    const guildUser = guild.users.get(\r\n        message.mentions.users.first()?.id ||\r\n        message.guild.users.get(userID) ||\r\n        message.author.id\r\n    )\r\n\r\n    const user = guild.users.get(guildUser.id)\r\n\r\n    // here, the `get()` method fetches the user balance for specified currency and\r\n    // `getCurrency()` method fetches the info object about specified currency\r\n\r\n    const [currencyBalance, currency] = [\r\n        user.balance.currency('(currency ID, currency name or currency symbol)').get(),\r\n        user.balance.currency('(currency ID, currency name or currency symbol)').getCurrency()\r\n    ]\r\n\r\n    message.channel.send(\r\n        `${message.author}'s balance: **${currencyBalance}** ${currency.symbol}`\r\n    )\r\n}\r\n\r\n// Add the money on currency balance on the guild\r\nif (command == prefix + 'currencyAdd') {\r\n    const [userID, amount] = args\r\n    const guild = eco.guilds.get(message.guild.id)\r\n\r\n    const guildUser = guild.users.get(\r\n        message.mentions.users.first()?.id ||\r\n        message.guild.users.get(userID) ||\r\n        message.author.id\r\n    )\r\n\r\n    const user = guild.users.get(guildUser.id)\r\n\r\n    user.balance.currency('(currency ID, currency name or currency symbol)').add(amount)\r\n    message.channel.send('Adding successful!')\r\n}\r\n\r\n// Subtract the money from currency balance on the guild\r\nif (command == prefix + 'currencySubtract') {\r\n    const [userID, amount] = args\r\n    const guild = eco.guilds.get(message.guild.id)\r\n\r\n    const guildUser = guild.users.get(\r\n        message.mentions.users.first()?.id ||\r\n        message.guild.users.get(userID) ||\r\n        message.author.id\r\n    )\r\n\r\n    const user = guild.users.get(guildUser.id)\r\n\r\n    user.balance.currency('(currency ID, currency name or currency symbol)').subtract(amount)\r\n    message.channel.send('Subtracting successful!')\r\n}\r\n```\r\nSee the full bot examples for both MongoDB and JSON databases in both JavaScript and TypeScript [here](https://github.com/shadowplay1/discord-economy-super/tree/main/examples)!\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = 'https://www.npmjs.com/package/discord-economy-super'>NPM</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super'>GitHub</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super/tree/main/examples'>Bot Examples</a></b></li>\r\n<li><b><a href = 'https://discord.gg/4pWKq8vUnb'>Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = 'https://discord.gg/4pWKq8vUnb'>Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/examples.md"},"configuring":{"name":"Configuring Economy","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## Introduction\r\nYou know that the module has a lot of different settings and you can set them up like you want. In this article, we will go through everything about configuring the Economy system and how to set it up for different guilds!\r\n\r\n## Available Options\r\nFull list of available Economy options is available [here](https://des-docs.js.org/#/docs/main/1.7.5/typedef/EconomyConfiguration).\r\n\r\nPlease note: \r\n1. For JSON version, all the options for are **optional** \r\n2. For MongoDB version, `connection` object is required to be specified in the configuration for MongoDB version. [Learn more about connecting MongoDB to Economy](https://des-docs.js.org/#/docs/main/1.7.5/general/migrating-to-mongo)\r\n\r\n## Passing Configuration to the Module\r\nThere are 2 ways of passing the configuration object to the module:\r\n- Specifying the config in the constructor:\r\n\r\n```js\r\nnew Economy({\r\n    // configuration goes here...\r\n})\r\n```\r\n- Or making the `economy.config.js` or `economy.config.ts` file **(depends on which language your project is using - JavaScript or TypeScript)** in root of your project directory *(that's why specifying the config in constructor in MongoDB version is optional even though the `connection` property is required)*:\r\n\r\n```js\r\n/* ./economy.config.js */\r\n\r\n/**\r\n * put `discord-economy-super/mongodb/EconomyItems.d.ts` if using MongoDB version of Economy\r\n * @type {import('discord-economy-super/EconomyItems.d.ts').EconomyConfiguration} \r\n */\r\nconst economyConfig = {\r\n    // configuration goes here...\r\n}\r\n\r\nmodule.exports = economyConfig\r\n```\r\n\r\n```ts\r\n/* ./economy.config.ts */\r\n\r\n// put `discord-economy-super/mongodb/EconomyItems` if using MongoDB version of Economy\r\nimport { EconomyConfiguration } from 'discord-economy-super/EconomyItems' \r\n\r\nconst economyConfig: EconomyConfiguration {\r\n    // configuration goes here...\r\n}\r\n\r\nexport default economyConfig\r\n```\r\nIf using the config file, the module will use them **first**. \r\n\r\n**Don't specify the options in the constructor if using the file to avoid confusion!**\r\n\r\n## Daily, Work & Weekly Rewards Configuration\r\n`dailyAmount`, `workAmount` and `weeklyAmount` setting are accepting the **number** or an **array** of 2 numbers - `[min, max]`.\r\n\r\nPassing the `[min, max]` array allows to pick the random number in range between `min` and `max` to add on the user's balance when claiming rewards!\r\n\r\nUse a *single number* for static reward amount values.\r\n\r\n```js\r\ndailyAmount: [100, 500] // when claiming the daily reward, a random number between 100 and 500 will be picked and added to the user' balance\r\nworkAmount: [10, 50] // the same as `dailyAmount` but the range is between 10 and 50\r\nweeklyAmount: 1000 // static value - 1000 will be added to the user's balance on claiming weekly reward, passing the [min, max] array is still allowed.\r\n```\r\n\r\n## Configuring Economy for Different Guilds\r\nTo edit the configuration keys for a specific guild, you may use the [SettingsManager](https://des-docs.js.org/#/docs/main/1.7.5/class/SettingsManager) for this:\r\n```js\r\neco.settings.set('key', value, 'guildID')\r\n```\r\nOnce the key is edited, **the value from settings** will be used on specified server for the key.\r\nFor example, let's change the `dailyAmount` setting to `500` (default is `100`) for guild with ID `'123'`:\r\n```js\r\neco.settings.set('dailyAmount', 500, '123')\r\n```\r\nFrom now, everyone on guild with ID `'123'` will receive **500** coins on dailies instead of **100**. This change will affect only our guild with ID `'123'`.\r\n\r\n## Full Configuration Example\r\nHere's the **full** example of Economy configuration object and how everything should look like.\r\n\r\nThis example will contain default values for each setting. \r\n\r\nNote that all settings (except `connection` for MongoDB version) are **optional** and you won't have to specify them all!\r\n\r\n```js\r\nconst economyConfigExample = {\r\n    storagePath: './storage.json', // specify if using JSON version (optional)\r\n    updateCountdown: 1000, // specify if using JSON version (optional)\r\n    checkStorage: true, // specify if using JSON version (optional)\r\n\r\n    connection: { // specify if using MongoDB version (required)\r\n        connectionURI: '...', // mongodb connection URI\r\n        collectionName: 'database', // specify if using MongoDB version (optional)\r\n        dbName: 'db', // specify if using MongoDB version (optional)\r\n        mongoClientProperties: {} // specify if using MongoDB version (optional)\r\n    },\r\n\r\n    dailyAmount: 100, // [min, max] array allowed\r\n    workAmount: [10, 50], // [min, max] array allowed\r\n    weeklyAmount: 1000, // [min, max] array allowed\r\n    dailyCooldown: 86400000,\r\n    workCooldown: 3600000,\r\n    weeklyCooldown: 604800000,\r\n    sellingItemPercent: 75,\r\n    savePurchasesHistory: true,\r\n    deprecationWarnings: true,\r\n    dateLocale: 'en',\r\n    subtractOnBuy: true,\r\n\r\n    updater: {\r\n        checkUpdates: true,\r\n        upToDateMessage: false\r\n    },\r\n\r\n    errorHandler: {\r\n        handleErrors: true,\r\n        attempts: 5,\r\n        time: 5000\r\n    },\r\n\r\n    optionsChecker: {\r\n        ignoreInvalidTypes: false,\r\n        ignoreUnspecifiedOptions: true,\r\n        ignoreInvalidOptions: false,\r\n        showProblems: true,\r\n        sendLog: true,\r\n        sendSuccessLog: false\r\n    },\r\n\r\n    debug: false\r\n}\r\n```\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = 'https://www.npmjs.com/package/discord-economy-super'>NPM</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super'>GitHub</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super/tree/main/examples'>Bot Examples</a></b></li>\r\n<li><b><a href = 'https://discord.gg/4pWKq8vUnb'>Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = 'https://discord.gg/4pWKq8vUnb'>Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/configuring.md"},"custom-data":{"name":"Custom Item Data","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## Introduction\r\n*Shop Items*, *Inventory Items*, *History Items* and *Currencies* have got the `custom` property in their objects. In this article, the magic `custom` property and its usage will be explained!\r\n\r\n## Custom Property Explained\r\nThe `custom` property is a normal JavaScript object and is made to store any custom information inside the object. Literally anything!\r\n\r\nBy default, this property is an empty object (`{}`) but you may change its value anytime!\r\n\r\nHere's the list of `classes` / `managers` that have support of Custom Item Data (the `custom` property):\r\n\r\n- `ShopItem` / `ShopManager`\r\n- `InventoryItem` / `InventoryManager`\r\n- `HistoryItem` / `HistoryManager`\r\n- `Currency` / `CurrencyManager`\r\n\r\n## Taking A Look\r\nLet's say we want a shop item that can be hidden, locked and will have its own emoji to display.\r\n\r\nLet's add the item in the shop:\r\n\r\n```js\r\nguild.shop.addItem({\r\n    name: 'Testing Item 123',\r\n    price: 500,\r\n    message: 'Hello World!',\r\n\r\n    custom: { // defaulting all the custom object values that we want to have\r\n        emoji: 'üëç',\r\n        hidden: false,\r\n        locked: false\r\n    }\r\n})\r\n```\r\nFor TypeScript, we can add an interface for our custom item data object and use **generics** for better experience:\r\n```ts\r\nguild.shop.addItem<ICustomItemData>({\r\n    name: 'Testing Item 123',\r\n    price: 500,\r\n    message: 'Hello World!',\r\n\r\n    custom: { // `custom` property and all properties inside will refer to `ICustomItemData` interface\r\n        emoji: 'üëç',\r\n        hidden: false,\r\n        locked: false\r\n    }\r\n})\r\n\r\ninterface ICustomItemData {\r\n    emoji: string\r\n    hidden: boolean\r\n    locked: boolean\r\n}\r\n```\r\nSo, now we have the item in our database, let's try getting it. There are a few ways to do it, any of this ways is correct and will work fine (continuing in TypeScript):\r\n```ts\r\nimport { ShopItem } from 'discord-economy-super/EconomyItems' // put `discord-economy-super/mongodb/EconomyItems` if using MongoDB version - this is important!\r\n// ^ this is not required if using JavaScript\r\n\r\n// 1.\r\nconst item = eco.shop.findItem<ICustomItemData>(itemID, 'guildID')\r\n\r\n// 2.\r\nconst economyGuild = eco.guilds.get('guildID')\r\nconst item = economyGuild.shop.findItem<ICustomItemData>(itemID)\r\n\r\n// 3.\r\nconst economyGuild = eco.guilds.get('guildID')\r\nconst item = economyGuild.shop.find<ShopItem<CustomItemData>>(item => item.id == itemID) // or any other condition to find the item with\r\n\r\n// 4. (for MongoDB)\r\nconst shop = eco.cache.shop.get<ShopItem<ICustomItemData>>({\r\n    guildID: 'guildID'\r\n})\r\n\r\nconst item = shop.find(item => item.id == itemID) // or any other condition to find the item with\r\n\r\n\r\nitem.custom // { emoji: 'üëç', hidden: false, locked: false } \r\n//   ^ will refer to `ICustomItemData` interface\r\n```\r\n\r\nNow let's try changing our object: let's hide and lock it. But there are also a few different ways do edit out item! Feel free to use any of them:\r\n```ts\r\n// 1. (custom object only)\r\nitem.setCustom<ICustomItemData>({\r\n    emoji: 'üëç',\r\n    hidden: true,\r\n    locked: true\r\n})\r\n\r\n// 2.\r\nitem.edit('custom', {\r\n    emoji: 'üëç',\r\n    hidden: true,\r\n    locked: true\r\n})\r\n\r\n// 3.\r\nitem.custom = {\r\n    emoji: 'üëç',\r\n    hidden: true,\r\n    locked: true\r\n}\r\n\r\nitem.save()\r\n```\r\n\r\nNow let's get its `custom` property again:\r\n```ts\r\nitem.custom // { emoji: 'üëç', hidden: true, locked: true }\r\n```\r\nAnd here it is! The object inside that property was successfully changed!\r\n\r\n## Command Examples\r\nSo we have a shop that can be received in 3 different ways:\r\n```ts\r\nimport { ShopItem } from 'discord-economy-super/EconomyItems' // put `discord-economy-super/mongodb/EconomyItems` if using MongoDB version - this is important!\r\n// ^ this is not required if using JavaScript\r\n\r\n// 1.\r\nconst item = eco.shop.all<ICustomItemData>(itemID, 'guildID')\r\n\r\n// 2.\r\nconst economyGuild = eco.guilds.get('guildID')\r\nconst item = economyGuild.shop.all<ICustomItemData>(itemID)\r\n\r\n// 3. (for MongoDB)\r\nconst shop = eco.cache.shop.get<ShopItem<ICustomItemData>>({\r\n    guildID: 'guildID'\r\n})\r\n```\r\n\r\nNow let's say we have a shop with hidden and locked items - we need to display the shop correctly: display the emoji we put earlier, don't show the hidden items and tell if the item is locked and not buyable:\r\n\r\n```ts\r\nif (command == prefix + 'shop') {\r\n    const shop = eco.\r\n    const guildShop = shop.filter(item => !item.custom.hidden) // filtering out the hidden items\r\n\r\n    if (!guildShop.length) { // checking if there's anything in the shop\r\n        return message.channel.send(`${message.author}, there are no items in the shop.`)\r\n    }\r\n\r\n    message.channel.send(\r\n        `**${message.guild.name}** - Guild Shop **[${guildShop.length} items]**:\\n\\n` +\r\n\r\n        `${guildShop\r\n            .map((item, index) =>\r\n                `${index + 1} - ${item.custom.locked ? ' üîí | ' : ' '}${item.custom.emoji} ` + // if the item is locked and not buyable, it will have the üîí icon next to th item's emoji\r\n                `**${item.name}** (ID: **${item.id}**) - **${item.price}** coins`)\r\n            .join('\\n')}`\r\n    )\r\n}\r\n```\r\n\r\nAnd let's make the `shop_buy` command that won't allow us to buy an item if it's locked or hidden:\r\n\r\n```ts\r\nif (command == prefix + 'shop_buy') {\r\n    const [itemID, quantityString] = args\r\n    const quantity = parseInt(quantityString) || 1\r\n\r\n    const item = shop.find(item => item.id == parseInt(itemID) || item.name == itemID)\r\n\r\n    if (!itemID) { // checking if item ID or its name is specified\r\n        return message.channel.send(`${message.author}, please specify an item.`)\r\n    }\r\n\r\n    if (!item || item?.custom?.hidden) { // checking if the item exists and is it hidden\r\n        return message.channel.send(`${message.author}, item not found.`)\r\n    }\r\n\r\n    if (item.custom.locked) { // checking is the item locked\r\n        return message.channel.send(`${message.author}, this item is locked - you cannot buy it.`)\r\n    }\r\n\r\n    if (!await item.isEnoughMoneyFor(message.author.id, quantity)) { // checking if the user has enough money to buy the item\r\n        return message.channel.send(\r\n            `${message.author}, you don't have enough coins to buy ` +\r\n            `**x${quantity} ${item.custom.emoji} ${item.name}**.`\r\n        )\r\n    }\r\n\r\n    const buyingResult = await user.items.buy<CustomItemData>(item.id, quantity)\r\n\r\n    if (!buyingResult.status) { // checking if failed to buy the item\r\n        return message.channel.send(`${message.author}, failed to buy the item: ${buyingResult.message}`) as any\r\n    }\r\n\r\n    message.channel.send(\r\n        `${message.author}, you bought **x${buyingResult.quantity} ` +\r\n        `${item.custom.emoji} ${item.name}** for **${buyingResult.totalPrice}** coins.`\r\n    )\r\n}\r\n```\r\nAnd that's it! This is how you may use the magical `custom` property that you may never heard about before!\r\n\r\n## Full Bot Examples\r\nSee the **full** example in a **full bot** on how to use the Custom Item Data of the items by following one of the links below (language + database):\r\n- **[JavaScript + JSON](https://github.com/shadowplay1/discord-economy-super/blob/main/examples/json/example.js#L472)**\r\n- **[JavaScript + MongoDB](https://github.com/shadowplay1/discord-economy-super/blob/main/examples/mongodb/example.ts#L515)**\r\n- **[TypeScript + JSON](https://github.com/shadowplay1/discord-economy-super/blob/main/examples/json/example.ts#L473)**\r\n- **[TypeScript + MongoDB](https://github.com/shadowplay1/discord-economy-super/blob/main/examples/mongodb/example.ts#L516)**\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = 'https://www.npmjs.com/package/discord-economy-super'>NPM</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super'>GitHub</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super/tree/main/examples'>Bot Examples</a></b></li>\r\n<li><b><a href = 'https://discord.gg/4pWKq8vUnb'>Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = 'https://discord.gg/4pWKq8vUnb'>Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/custom-data.md"},"global":{"name":"Global Economy","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## Introduction\r\nSo, `discord-economy-super` is built with multi-guild support, but many of the users were asking how to create a __global__ economy, where all the data is cross-guild, where all the data is available on all the guilds.\r\n\r\nThere is a way, and it's very simple!\r\n\r\n## Using the module globally\r\nTo make the data in your economy cross-guild, just use a static value (such as `'global'`, `'123'`, etc.) as **guild ID** in all methods, and the module will work like with only one guild.\r\n\r\nFor example: `eco.users.get(message.author.id, 'global')`, where `'global'` is a static value for the guild ID.\r\n\r\n`UserManager.get()` accepts a **member ID** and **guiid ID** as the arguments. If you need to store the data globally, you need to use any static value everywhere.\r\nIt means, the module will work with `'global'` guild, where all the data will be stored. \r\n\r\nAll the operations will be performed only to this \"guild\", so the data won't be lost on any other server!\r\nSee the [FAQ page](https://des-docs.js.org/#/docs/main/1.7.5/general/faq) to see the full example of global economy usage.\r\n\r\n## How do I move the data from the guilds to the Global one?\r\nUse the loop, where you iterate all the database entries, getting the object of every guild, then getting all the guild users and pushing them into the Global guild.\r\n\r\nYou can delete the guilds, if it's needed.\r\n\r\n```js\r\nconst STATIC_GLOBAL_GUILD_ID = 'global'\r\n\r\nconst database = eco.database.all()\r\nconst databaseEntries = Object.entries(database)\r\n\r\nfor (const [guildID, guildObject] of databaseEntries) {\r\n    const guildUserEntries = Object.entries(guildObject)\r\n\r\n    eco.database.delete(guildID)\r\n\r\n    for (const [userID, userObject] of guildUserEntries) {\r\n        eco.database.set(`${STATIC_GLOBAL_GUILD_ID}.${userID}`, userObject)\r\n    }\r\n}\r\n```\r\n\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = 'https://www.npmjs.com/package/discord-economy-super'>NPM</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super'>GitHub</a></b></li>\r\n<li><b><a href = 'https://github.com/shadowplay1/discord-economy-super/tree/main/examples'>Bot Examples</a></b></li>\r\n<li><b><a href = 'https://discord.gg/4pWKq8vUnb'>Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = 'https://discord.gg/4pWKq8vUnb'>Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/global.md"},"updating":{"name":"Updating your code","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## ‚úç | Updating your code\r\n\r\n## Version 1.6.1\r\n\r\nThis version takes much approach on object-orience. The most important changes are:\r\n\r\n- new `User-` and `Guild-` managers which are used to get user and guild data from MongoDB.\r\n- separated classes for every Economy entity (`ShopItem`, `InventoryItem`, `EconomyGuild`, `EconomyUser`, etc)\r\n- separated classes for every Economy action on users and guilds (`Shop`, `Inventory`, `Rewards`, etc)\r\n- some of the methods' names and/or return values were changed to make them sound better and more natural. (for example: `BalanceManager.pay(...)` ‚Üí `BalanceManager.transfer(...)`)\r\n- some of the getter methods and their aliases' names were changed.\r\n- powerful database caching system for MongoDB\r\n- ... and many more! You can see the full [changelog](https://des-docs.js.org/#/docs/main/1.7.5/general/changelog) to see all the changes: it will help you on migrating to v1.6.1.\r\n\r\nThese changes does not mean you will have to stop using the managers directly. You can use them as you normally would. Classes were provided as another way to use the Economy and make the code cleaner and more readable and understandable. Usage of managers is not deprecated or removed in this update. So, it means, you don't have to do much changes to make your code working again. \r\n\r\nFor example, this code will work as before:\r\n```js\r\nconst balance = eco.balance.get('123', '123')\r\nconst inventory = eco.inventory.get('123', '123')\r\n\r\nconsole.log(balance)\r\nconsole.log(inventory)\r\n```\r\n\r\nIf you're looking for MongoDB migration guide, see the [MongoDB Migration Guide](https://des-docs.js.org/#/docs/main/1.7.5/general/migrating-to-mongo).\r\n\r\n## Version 1.5.0\r\n\r\nIn version 1.5.0, all history related methods in ShopManager are deprecated.\r\nIt's highly recommended to switch to the new HistoryManager:\r\n\r\n- `ShopManager.history()` ==> `HistoryManager.fetch()`\r\n- `ShopManager.clearHistory()` ==> `HistoryManager.clear()`\r\n\r\nSee the [changelog](https://des-docs.js.org/#/docs/main/1.5.2general/changelog) for the full list of changes.\r\n\r\n## Version 1.4.7\r\n\r\nSince version 1.4.7, all deprecated methods/properties will not be deleted, but not be recommended to use.<br>\r\nIf you want to receive all the new features and bugfixes, please consider switching from using the deprecated methods/properties.<br>\r\n[!!!] No support will be provided for any deprecated method or property.\r\n\r\nIn this version, all inventory related methods in ShopManager are deprecated.\r\nIt's highly recommended to switch to the new InventoryManager:\r\n\r\n- `ShopManager.inventory()` ==> `InventoryManager.fetch()`\r\n- `ShopManager.clearInventory()` ==> `InventoryManager.clear()`\r\n- `ShopManager.useItem()` ==> `InventoryManager.useItem()`\r\n- `ShopManager.searchInventoryItem()` ==> `InventoryManager.searchItem()`\r\n\r\nSee the [changelog](https://des-docs.js.org/#/docs/main/1.4.7/general/changelog) for the full list of changes.\r\n\r\n## Version 1.3.2\r\n\r\nVersion 1.3.2 takes a much more object-oriented approach than previous versions. It also contains many bug fixes, optimizations and support for new Database Manager.\r\n\r\nHere's some examples of methods that were changed in this version:\r\n\r\n- `Economy.daily()` ==> `RewardManager.daily()`\r\n- `Economy.getDailyCooldown()` ==> `CooldownManager.daily()`\r\n- `Economy.all()` ==> `UtilsManager.all()`\r\n  <br>\r\n\r\nSo you have to change your code like this:\r\n\r\n- `eco.daily()` ==> `eco.rewards.daily()`\r\n- `eco.getDailyCooldown()` ==> `eco.cooldowns.daily()`\r\n- `eco.all()` ==> `eco.utils.all()`\r\n\r\nSee the [changelog](https://des-docs.js.org/#/docs/main/1.3.2/general/changelog) for the full list of changes.\r\n\r\n## Version 1.2.5\r\n\r\nIn version 1.2.5 everything was optimized and all balance and bank balance methods were moved to objects:\r\n\r\n```diff\r\n- eco.fetch('memberID', 'guildID')\r\n- eco.set(amount, 'memberID', 'guildID')\r\n- eco.add(amount, 'memberID', 'guildID')\r\n- eco.subtract(amount, 'memberID', 'guildID')\r\n- eco.leaderboard('guildID')\r\n\r\n+ eco.balance.fetch('memberID', 'guildID')\r\n+ eco.balance.set(amount, 'memberID', 'guildID')\r\n+ eco.balance.add(amount, 'memberID', 'guildID')\r\n+ eco.balance.subtract(amount, 'memberID', 'guildID')\r\n+ eco.balance.leaderboard('guildID')\r\n\r\n- eco.bankFetch('memberID', 'guildID')\r\n- eco.bankSet(amount, 'memberID', 'guildID')\r\n- eco.bankAdd(amount, 'memberID', 'guildID')\r\n- eco.bankSubtract(amount, 'memberID', 'guildID')\r\n- eco.bankLeaderboard('guildID')\r\n\r\n+ eco.bank.fetch('memberID', 'guildID')\r\n+ eco.bank.set(amount, 'memberID', 'guildID')\r\n+ eco.bank.add(amount, 'memberID', 'guildID')\r\n+ eco.bank.subtract(amount, 'memberID', 'guildID')\r\n+ eco.bank.leaderboard('guildID')\r\n```\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/updating.md"},"changelog":{"name":"Changelog","type":"md","content":"# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy module for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## ‚è∞ | Changelog\r\n\r\n\r\n<div>\r\n\r\n<b>v1.7.5</b>\r\n\r\n- Fixed JSDoc typos/mismatches.\r\n- Fixed the hard crash in **JSON** version when trying to claim `daily`, `work` or `weekly` rewards.\r\n- Fixed the INVALID_TYPE error when getting the currencies by ID.\r\n- **Updated the documentation** - updated the [FAQ](https://des-docs.js.org/#/docs/main/1.7.5/general/faq), added **shop** examples and more explanations of the code on [Examples](https://des-docs.js.org/#/docs/main/1.7.5/general/examples) page in the documentation + added the [Configuring Economy](https://des-docs.js.org/#/docs/main/1.7.5/general/configuring) page that explains everything about configuring the module and [Custom Item Data](https://des-docs.js.org/#/docs/main/1.7.5/general/custom-data) page explaining the `custom` property  - check them out!\r\n- Minor bug fixes.\r\n- Added an option for `package.json` to disable the post-install greeting logs. To disable them, you need to add this in your `package.json`:\r\n```json\r\n\"discord-economy-super\": {\r\n    \"postinstall\": false\r\n}\r\n```\r\nTo enable them back, you need to set the `\"postinstall\"` property of `\"discord-economy-super\"` object to `true`:\r\n```json\r\n\"discord-economy-super\": {\r\n    \"postinstall\": true\r\n}\r\n```\r\n(or simply remove this object from your `package.json`)\r\n\r\n<b>v1.7.4</b>\r\n\r\n- Fixed typings.\r\n- JSDoc changes.\r\n- Fixed the missing configuration bug and hard crash on startup.\r\n- Removed unnecessary things.\r\n- Updated `EconomyItems` files.\r\n- Added a `stacked()` method in `InventoryManager` to get the array of stacked items in the inventory.\r\n- `InventoryItem.stack()` is no longer async! You can run it inside `Array.map()` safely now!\r\n- `UtilsManager.checkOptions()` method was renamed to `UtilsManager.checkConfiguration()` so it could make sense.\r\n\r\n<b>v1.7.2</b>\r\n\r\n- Code refactoring.\r\n- Major bug fixes.\r\n- Fixed a hard crash on startup in JSON version.\r\n- Fixed JSDocs.\r\n- Fixed typings in some managers.\r\n- Improved debugging.\r\n\r\n<b>v1.7.1</b>\r\n\r\n- Major bug fixes!\r\n- Major typings fixes!\r\n- Major JSDoc fixes!\r\n- Improved error handling and debugging.\r\n- Update checker fixes.\r\n- Fixed broken inventory cache issue on startup in MongoDB version!\r\n\r\n<br>\r\n\r\n- **Custom currencies system! üî•**\r\n- Added a new `customCurrencySet`, `customCurrencyAdd` and `customCurrencySubtract` events so the changes in any custom currencies could be tracked!\r\n- Added a new optional `currency` argument in **all item buying methods** that takes eaither *currency ID*, *name* or its *symbol* so the currency balance will be subtracted instead of core balance. Requires the `subtractOnBuy` option to be enabled.\r\n```ts\r\neco.shop.buy(itemID, 'memberID', 'guildID', quantity, currency, 'reason')\r\n```\r\n\r\n\r\n<br>\r\n\r\n- Added a `stack()` method for **_inventory items_** that returns the **number of specific item (quantity)** and the **total price** of it in the inventory!\r\n- Added a new `clearDaily`, `clearWork` and `clearWeekly` methods in `CooldownItem` and `Cooldowns` classes to clear the specific cooldowns.\r\n\r\n<br>\r\n\r\n- Added a `save()` method for `Shop-`, `Inventory-` and `History-` **items** that allows you to edit the item's object properties save the edited objext in database!\r\n- Added a `.toString()` method for some classes.\r\n\r\n- `Shop-`, `Inventory-` and `History-` **items'** `itemObject` property was renamed to `rawObject` so it could make sense in the code.\r\n- Now a warning will be displayed in console if using a dev version in both MongoDB and JSON versions (see the screenshot below).\r\n\r\n![Development Version Usage Warning](https://cdn.discordapp.com/attachments/837068831725846568/1058154982748213359/Screenshot_27.jpg)\r\n\r\n- Added the missing `buy()` method in `ShopItem` class.\r\n- Added the missing `clear()` method in `Items` class.\r\n- Fixed return values in database operations methods.\r\n\r\n<b>v1.7.0</b>\r\n\r\n- Major bugs/typings/JSDoc fixes!\r\n- Fixed all the caching issues in MongoDB version! \r\n- Added a `create()` methods in `EconomyUser` and `EconomyGuild` classes to match the `User-` and `Guild-` managers.\r\n- Added a new `deposit()` method in `Balance-` and `Bank-` managers and in `Balance` and `Bank` user classes.\r\n- Added a `clearMany()` alias for `clearSpecified()` method in `CacheManager`.\r\n\r\n<b>v1.6.9</b>\r\n\r\n- Fixed bugs.\r\n- Fixed typings bugs.\r\n- Added missing JSDocs for `CacheManager` and all the `CachedItem`s!\r\n- Added a configuration example in *Initialation Example* on the [Examples](https://des-docs.js.org/#/docs/main/1.7.5/general/examples) page of the module. \r\n\r\n<b>v1.6.8</b>\r\n\r\n- Fixed bugs.\r\n- Fixed typings bugs.\r\n- Bank balance caching!\r\n- Fixed the hard crash in MongoDB version when trying to obtain a balance data for the user from the cache.\r\n- Added an `updateMany` alias for `updateSpecified` method in `CacheManager`.\r\n\r\n<b>v1.6.7</b>\r\n\r\n- Fixed leaderboard bugs.\r\n\r\n<b>v1.6.6</b>\r\n\r\n- Fixed the bug where `guildID` was `undefined` in `EmptyEconomyUser`, resulting hard crashes on lots of methods (if the user was not found).\r\n- Removed unnecessary things.\r\n\r\n<b>v1.6.5</b>\r\n\r\n- Fixed the balance not caching correctly\r\n- Fixed the `INVALID_CACHE_ITEM_NAME` error in MongoDB version that caused a hard crash on any `RewardManager` method.\r\n\r\n<b>v1.6.4</b>\r\n\r\n- Bug fixes\r\n- Typings fixes\r\n\r\n<b>v1.6.3</b>\r\n\r\n- Major bug fixes\r\n- Typings fixes\r\n- Examples bug fixes\r\n- Linting improvements\r\n\r\n<b>v1.6.2</b>\r\n\r\n- New `Empty-` classes for `EconomyUser` and `EconomyGuild` that will be returned if the user or guild does not exists\r\n- Added a new `exists` property for `EconomyUser` and `EconomyGuild` classes to check if the user/guild exists in database\r\n- Balance caching!\r\n- Fixed bugs\r\n- Major typings fixes\r\n- Minor changes in documentation, JSDoc and in main README file\r\n\r\n<b>v1.6.1</b>\r\n\r\n<ul>\r\n<li><b>Added a MongoDB support!</b></li>\r\n<li><b>Fixed lots of bugs.</b></li>\r\n<li><b>Improved typings and now they use generics!</b></li>\r\n<li><b>Improved JSDocs.</b></li>\r\n\r\n<li><b>\r\n\r\nRemoved the `./tests` directory from the module as nobody uses it\r\n\r\n</b></li>\r\n<br>\r\n<li><b>\r\n\r\nAdded a new `BaseManager` that allows you to interact with economy items like with arrays!\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\nAdded a new `User`- and `Guild`- managers to directly interact with economy users and guilds.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\nAdded classes for each economy subject (`ShopItem`, `InventoryItem`, etc).\r\n\r\n</b></li>\r\n<br>\r\n\r\n<li><b>\r\n\r\nAdded a new `deleteAll()` method for `DatabaseManager` to wipe all the database.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\nAdded a new `DatabaseManager.pull()` and `pop` methods.`\r\n\r\n</b></li>\r\n<br>\r\n\r\n<li><b>\r\n\r\n`DatabaseManager.keyList()` was renamed to `DatabaseManager.keysList()`.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\n`UtilsManager.clearStorage()` was renamed to `UtilsManager.clearDatabase()`.\r\n\r\n</b></li>\r\n<br>\r\n\r\n<li><b>\r\n\r\n`UtilsManager.reset()` method that resets the all the data from specified user in database, was renamed to `UtilsManager.resetUser()`.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\n`BalanceManager.pay()` was renamed to `BalanceManager.transfer()`.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\n`ShopManager.buy()` method's returning value is changed from weird `Boolean | 'max'` type to:\r\n\r\n</b></li>\r\n\r\n```ts\r\n{\r\n    status: boolean,\r\n    message: string,\r\n    item: ShopItem,\r\n    quantity: number,\r\n    totalPrice: number,\r\n}\r\n```\r\n\r\n<li><b>\r\n\r\nAdded a new `debug` option that enables the Economy debug logs in a console.\r\n\r\n</b></li><br>\r\n\r\n<li><b>\r\n\r\n`ready` event is now returning a fully woring Economy instance that was successfully initialized and could be used without any problems.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\n`shopItemUse` and `shopItemBuy` events are now returning an information object with guild ID, the person who performed the action, and the item the action was performed on.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\nAll reward methods' returning values in `RewardManager` were changed from this:\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\n`BalanceManager.transfer(...)` now returns a transfering result object instead of amount of money that was sent.\r\n\r\n</b></li>\r\n\r\n```ts\r\n{\r\n    status: boolean,\r\n    value: number | TimeObject // money that the user received OR object with the time until the cooldown ends\r\n    pretty: string | number // formatted cooldown time OR money that the user received\r\n    reward: number | number[] // depends on what type of reward was specified in a config\r\n}\r\n```\r\n\r\nto this:\r\n\r\n```ts\r\n{\r\n    type: 'daily' | 'work' | 'weekly'\r\n    status: boolean\r\n    cooldown: {\r\n        time: TimeObject // object with the time until the cooldown ends\r\n        pretty: string // formatted cooldown time\r\n   }\r\n    reward: number // money that the user received\r\n    defaultReward: number | number[] // depends on what type of reward was specified in a config\r\n}\r\n```\r\n\r\n<li><b>\r\n\r\nAll reward methods' names in `RewardManager` and getting cooldowns methods in `CooldownManager` are now prefixed with `get`.<br>\r\n\r\nFor example, getting a daily reward will look like `eco.rewards.getDaily(...)` instead of `eco.rewards.daily(...)`<br>\r\n\r\nGetting the cooldown for daily reward will look like `eco.cooldowns.getDaily(...)` instead of `eco.cooldowns.daily(...)`.</b></li>\r\n\r\n<li><b>The message in console if the module s up to date now disabled by default.</b></li>\r\n\r\n\r\n<br>\r\n\r\n\r\n<li><b>\r\n\r\nIn `ShopData`, `InventoryData` and `HistoryData`, the `itemName` property was renamed to `name`.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\n`ShopManager.addItem(guildID, options)` method's options object now accepts the `name` property instead of `itemName`.\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\nAdded a new `custom` property to the economy items anda a new `setCustom()` method for `ShopManager` and `ShopItem` to edit a custom properties object for specified item!\r\n\r\n</b></li>\r\n\r\n<li><b>\r\n\r\nAdded a support for a separated configuration file! Creating a new file `economy.config.js` (or `economy.config.ts` if your project is in TypeScript) in the root directory of your project will set the config in file to the Economy constructor.\r\n\r\n</b></li>\r\n\r\n<br>\r\n\r\n<li><b>Now you can specify a quantity of items to buy, sell or add to the inventory!<br>\r\nNote that quantity and reason are always optional.</b></li>\r\n\r\n```ts\r\neco.shop.buy(itemID, 'memberID', 'guildID', quantity, 'reason')\r\n```\r\n\r\n<br>\r\n\r\n<li><b>\r\n\r\nAdded a new **caching** system for MongoDB! The module will cache the data in memory *on startup* and *on database updates* and will be used when you call the method. In these methods you don't have to use Promises and it will be way faster than getting data straightly from database.\r\n\r\n```js\r\nconst databaseUser = await eco.users.get('memberID', 'guildID')\r\n// gets the user from database - requires to invoke the Promise \r\n// with 'await' or '.then()'.\r\n\r\nconst cachedUser = eco.cache.users.get({\r\n    memberID: 'memberID',\r\n    guildID: 'guildID'\r\n})\r\n// gets the user from cache - doesn't require to invoke the Promise!\r\n\r\n// it means that getting data will be many times faster\r\n// than getting it from database directly!\r\n```\r\n\r\n</b></li>\r\n\r\n</ul>\r\n\r\n<b>v1.5.2</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Added a 'ShopManager.add()' method as alias for 'InventoryManager.addItem()' method.</b></li>\r\n</ul>\r\n\r\n<b>v1.5.1</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed issues with InventoryManager.</b></li>\r\n</ul>\r\n\r\n<b>v1.5.0</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed issues with 'ShopManager.editItem()' method.</b></li>\r\n<li><b>Added a new 'changeElement' for the Database manager that will change the element's value in the array.</b></li>\r\n<li><b>Added a 'InventoryManager.use()' method as alias for 'InventoryManager.useItem()' method.</b></li>\r\n<li><b>Added a 'ShopManager.edit()' method as alias for 'ShopManager.editItem()' method.</b></li>\r\n\r\n<li><b>Important:<br>\r\nHistory related methods in ShopManager are now deprecated, but they won't be deleted.<br>\r\nIf you want to use the newest history features and get all the bugfixes,<br>\r\nplease switch to the new HistoryManager.<br>\r\n[!!!] No help and support will be provided for deprecated methods.</b></li>\r\n<br>\r\n\r\n```diff\r\n- ShopManager:\r\n\r\n- ShopManager.history(memberID, guildID) [deprecated]\r\n- ShopManager.clearHistory(memberID, guildID) [deprecated]\r\n\r\n\r\n+ HistoryManager:\r\n\r\n+ HistoryManager.fetch(memberID, guildID)\r\n+ HistoryManager.clear(memberID, guildID)\r\n+ HistoryManager.add(itemID, memberID, guildID)  // the 'itemID' parameter is item ID from the shop \\\\\r\n+ HistoryManager.remove(memberID, guildID)\r\n+ HistoryManager.find(id, memberID, guildID)  // the 'id' parameter is the ID of the history object \\\\\r\n+ HistoryManager.search(id, memberID, guildID)  // an alias for the method above ^ \\\\\r\n```\r\n\r\n</ul>\r\n<li><b>Now you can use the random strings in a item message!</b></li>\r\n\r\nSyntax: `[random=\"item1\", \"item2\", \"etc...\"]`\r\n\r\nExample usage:\r\n\r\n```js\r\neco.shop.addItem(\"guildID\", {\r\n  name: \"good-day\",\r\n  price: 100,\r\n  message: 'What a [random=\"wonderful\", \"great\", \"sunny\"] day!',\r\n});\r\n\r\neco.shop.buy(1, \"memberID\", \"guildID\");\r\neco.shop.buy(1, \"memberID\", \"guildID\");\r\neco.shop.buy(1, \"memberID\", \"guildID\"); // buying the item 3 times\r\n\r\neco.inventory.useItem(1, \"memberID\", \"guildID\"); // What a wonderful day!\r\neco.inventory.useItem(1, \"memberID\", \"guildID\"); // What a great day!\r\neco.inventory.useItem(1, \"memberID\", \"guildID\"); // What a sunny day!\r\n\r\n// In a returning string, [random=\"wonderful\", \"great\", \"sunny\"]\r\n// will be replaced with the any of\r\n// the words \"wonderful\", \"great\" or \"sunny\".\r\n```\r\n\r\n<b>v1.4.9</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Added a 'savePurchasesHistory' constructor option that will indicate will the module save the purchases history or not.</b></li>\r\n<li><b>The module will now send a message in console on startup if there's a problem with user's economy configuration.</b></li>\r\n</ul>\r\n\r\n<b>v1.4.8</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Added a 'ShopManager.findItem()' method as alias for 'ShopManager.searchItem()' method.</b></li>\r\n<li><b>Added a 'ShopManager.buyItem()' method as alias for 'ShopManager.buy()' method.</b></li>\r\n<li><b>Added a 'ShopManager.fetch()' method as alias for 'ShopManager.list()' method.</b></li>\r\n<li><b>Added a 'InventoryManager.list()' method as alias for 'InventoryManager.fetch()' method.</b></li>\r\n<li><b>Added a 'InventoryManager.findItem()' method as alias for 'InventoryManager.searchItem()' method.</b></li>\r\n<li><b>Added an 'InventoryManager.addItem()' method that adds the specified item to the user's inventory from the shop.</b></li>\r\n</ul>\r\n\r\n<b>v1.4.7</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed startup issues.</b></li>\r\n<li><b>Fixed TypeScript examples.</b></li>\r\n<li><b>Default date locale was changed to 'en' instead of 'ru'.</b></li>\r\n<li><b>Now you can import all the managers directly from the module. Example:</b></li>\r\n\r\n```js\r\nconst { BalanceManager, ShopManager } = require(\"discord-economy-super\");\r\n// or\r\nimport { BalanceManager, ShopManager } from \"discord-economy-super\";\r\n```\r\n\r\n<li><b>Added a new InventoryManager that includes all inventory related methods.</b></li>\r\n<li><b>Added a 'removeItem' and 'sellItem' methods to the InventoryManager.</b></li>\r\n<li><b>Added a new 'sellingItemPercent' option that configures the price that<br>\r\nthe item will be sold for. (It was made for InventoryManager.sellItem method)</b></li>\r\n\r\n<li><b>Important:<br>\r\nInventory related methods in ShopManager are now deprecated, but they won't be deleted.<br>\r\nIf you want to use the newest inventory features and get all the bugfixes,<br>\r\nplease switch to the new InventoryManager.<br>\r\n[!!!] No help and support will be provided for deprecated methods.</b></li>\r\n<br>\r\n\r\n```diff\r\n- ShopManager:\r\n\r\n- ShopManager.inventory(memberID, guildID) [deprecated]\r\n- ShopManager.clearInventory(memberID, guildID) [deprecated]\r\n- ShopManager.useItem(itemID, memberID, guildID, client?) [deprecated]\r\n- ShopManager.searchInventoryItem(itemID, memberID, guildID) [deprecated]\r\n\r\n\r\n+ InventoryManager:\r\n\r\n+ InventoryManager.fetch(memberID, guildID)\r\n+ InventoryManager.clear(memberID, guildID)\r\n+ InventoryManager.searchItem(itemID, memberID, guildID)\r\n+ InventoryManager.useItem(itemID, memberID, guildID, client?)\r\n+ InventoryManager.removeItem(itemID, memberID, guildID)\r\n+ InventoryManager.sellItem(itemID, memberID, guildID, reason?)\r\n```\r\n\r\n<li><b>Usage of the deprecated methods will now send a deprecation warning in the console.<br>\r\nYou can disable it by setting the `deprecationWarnings` constructor option to `false`.</b></li>\r\n</ul>\r\n\r\n<b>v1.4.6</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Removed \"discord.js\" module from dependencies that was accidentally added.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n</ul>\r\n\r\n<b>v1.4.5</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typos in a README.md.</b></li>\r\n<li><b>Improved the FAQ.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Improved the quality of the code.</b></li>\r\n<li><b>Added a new 'Economy.shop.searchInventoryItem()' method that searches for the item in user's inventory.</b></li>\r\n<li><b>Improved the typings: fixed wrong types and typos and replaced the \"any\" types with method's generic type parameters.</b></li>\r\n<li><b>TypeScript Examples!</b></li>\r\n</ul>\r\n\r\n<b>v1.4.4</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n</ul>\r\n\r\n<b>v1.4.3</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n</ul>\r\n\r\n<b>v1.4.2</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n\r\n</ul>\r\n\r\n<b>v1.4.1</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n</ul>\r\n\r\n<b>v1.4.0</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Now you can put an array with 2 numbers in 'dailyAmount' and 'weeklyAmount' options.</b></li>\r\n<li><b>Now you can setup the module on different guilds using the brand new Settings Manager.</b></li>\r\n<li><b>Removed 'lodash' from the dependencies.</b></li>\r\n<li><b>Made a function that checks the Node.js version on the start.</b></li>\r\n</ul>\r\n\r\n<b>v1.3.9</b>\r\n\r\n<ul>\r\n<li><b>Fixed typings.</b></li>\r\n</ul>\r\n\r\n<b>v1.3.8</b>\r\n\r\n<ul>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Fixed a hard crash with 'Economy.rewards.work()' method.</b></li>\r\n</ul>\r\n\r\n<b>v1.3.7</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed the hard crash if economy configuration is not specified.</b></li>\r\n</ul>\r\n\r\n<b>v1.3.6</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Fixed the economy options resetting to default.</b></li>\r\n</ul>\r\n\r\n<b>v1.3.5</b>\r\n\r\n<ul>\r\n<li><b>Fixed the 'Cannot find module `structures/Errors`' error.</b></li>\r\n<li><b>Fixed bugs in typings.</b></li>\r\n</ul>\r\n\r\n<b>v1.3.4</b>\r\n\r\n<ul>\r\n<li><b>Full code rewrite.</b></li>\r\n<li><b>Lots of bugfixes.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Added a new Fetch Manager that allows you to fetch data from database.</b></li>\r\n<li><b>Added an 'add()', 'subtract()', 'push()' and 'removeElement()' methods in Database Manager.</b></li>\r\n<li><b>Added a 'checkOptions()' and 'reset()' methods in Utils Manager.</b></li>\r\n<li><b>Added an 'optionsChecker' object property in constructor options.</b></li>\r\n<li><b>Added a 'subtractOnBuy' property in constructor options.</b></li>\r\n<li><b>All typings were separated into files.</b></li>\r\n<li><b><a href=\"https://des-docs.js.org\">Documentation</a> update: now you can view the docs for a multiple module versions.</b></li>\r\n<li><b><a href=\"https://des-docs.js.org\">Documentation</a> update: now you can view the weekly downloads of the module on it's main page.</b></li>\r\n<li><b>... and more!</b></li>\r\n</ul>\r\n\r\n<b>v1.3.3</b>\r\n\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Fixed bugs with Database Manager.</b></li>\r\n</ul>\r\n\r\n<b>v1.3.2</b>\r\n\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed the expired link to the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Updated documentation.</b></li>\r\n<li><b>Added a bank example in module files.</b></li>\r\n<li><b>Added more examples on <a href=\"https://des-docs.js.org\">documentation website</a>.</b></li>\r\n<li><b>The entire module structure was rewritten on Managers.</b></li>\r\n<li><b>Added a new Database Manager that allows you to interact with module's storage file.</b></li>\r\n\r\n<b>v1.3.0</b>\r\n\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Now this module has a <a href=\"https://des-docs.js.org\">documentation website</a>!</b></li>\r\n<li><b>Added an 'Economy.docs' property that contains a link to the documentation website.</b></li>\r\n</ul>\r\n\r\n<b>v1.2.8</b>\r\n\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Item IDs in shop and inventory are now synced with the last element of array. It fixes the bug with similar item IDs in the shop and inventory.</b></li>\r\n</ul>\r\n\r\n<b>v1.2.6</b>\r\n\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Now 'ready' and 'destroy' events will return nothing (Void) instead of Boolean.</b></li>\r\n</ul>\r\n\r\n<b>v1.2.5</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Updated typings.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n<li><b>discord.js is no longer imported in the module.</b></li>\r\n<li><b>Added a 'ready' and 'destroy' events. <a href = \"https://www.npmjs.com/package/discord-economy-super#module-events\">Learn more</a>.</b></li>\r\n<li><b>All balance and bank methods were moved to objects. <a href = \"https://www.npmjs.com/package/discord-economy-super#balance-methods\">Learn more</a>.</b></li>\r\n<b>Here is the difference between v1.2.4 and v1.2.5.</b>\r\n\r\n```diff\r\n- eco.fetch('123', '123')\r\n- eco.set(10, '123', '123')\r\n- eco.add(10, '123', '123')\r\n- eco.subtract(10, '123', '123')\r\n- eco.leaderboard('123')\r\n\r\n+ eco.balance.fetch('123', '123')\r\n+ eco.balance.set(10, '123', '123')\r\n+ eco.balance.add(10, '123', '123')\r\n+ eco.balance.subtract(10, '123', '123')\r\n+ eco.balance.leaderboard('123')\r\n\r\n- eco.bankFetch('123', '123')\r\n- eco.bankSet(10, '123', '123')\r\n- eco.bankAdd(10, '123', '123')\r\n- eco.bankSubtract(10, '123', '123')\r\n- eco.bankLeaderboard('123')\r\n\r\n+ eco.bank.fetch('123', '123')\r\n+ eco.bank.set(10, '123', '123')\r\n+ eco.bank.add(10, '123', '123')\r\n+ eco.bank.subtract(10, '123', '123')\r\n+ eco.bank.leaderboard('123')\r\n```\r\n\r\n<li><b>'Economy.balance.leaderboard()' and 'Economy.bank.leaderboard()' methods arrays are now have an 'index' property in object.</b></li>\r\n</ul>\r\n\r\n<b>v1.2.4</b>\r\n\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>'Economy.daily()', '.work()' and '.weekly()' methods will return an object** instead of Number | String.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n</ul>\r\n\r\n\\*\\* The object structure will look like this:\r\n\r\n```js\r\n{\r\n    status: Boolean,\r\n    value: { // object returns if reward is already claimed; else - number\r\n        days: Number,\r\n        hours: Number,\r\n        minutes: Number,\r\n        seconds: Number,\r\n        milliseconds: Number\r\n    },\r\n    pretty: String | Number,\r\n    reward: Number | Number[] // array returns if work reward is array\r\n}\r\n```\r\n\r\n<b>v1.2.3</b>\r\n\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>'Economy.leaderboard()' method will return an empty array if the leaderboard is empty.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n<li><b>Fixed typos</b></li>\r\n</ul>\r\n\r\n<b>v1.2.2</b>\r\n\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed another issues with 'Economy.work()' method...</b></li>\r\n</ul>\r\n\r\n<b>v1.2.1</b>\r\n\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now 'Economy.work()' method is not taking a daily cooldown as work reward anymore.</b></li>\r\n<li><b>Added an 'Economy.removeGuild()' method to fully remove the guild from database.</b></li>\r\n<li><b>Added an 'Economy.removeUser()' method to to remove the user from database.</b></li>\r\n</ul>\r\n\r\n<b>v1.2.0</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>'Economy.shop.clearInventory()' method is working fine now.</b></li>\r\n</ul>\r\n\r\n<b>v1.1.9</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed type defenitions.</b></li>\r\n</ul>\r\n\r\n<b>v1.1.8</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now you can disable checking a storage file using the 'options.checkStorage' option.</b></li>\r\n<li><b>Now you can kill the Economy instance using the 'Economy.kill()' method.</b></li>\r\n<li><b>'Economy.init()' method is not private anymore due to 'Economy.kill()' method.</b></li>\r\n<li><b>Added an 'interval' property that displays the database checking interval.</b></li>\r\n<li><b>Now you can clear the entire database using the 'Economy.clearStorage()' method.</b></li>\r\n<li><b>Now this module is using errors that in 'Economy.errors' property and in './src/errors.js' file.</b></li>\r\n<li><b>Now you can clear any cooldown using the 'Economy.clearDailyCooldown', 'Economy.clearWorkCooldown' and ''Economy.clearWeeklyCooldown' methods.</b></li>\r\n<li><b>Added a test for basic Economy methods. You can run it by using these commands:\r\n\r\n```console\r\ncd node_modules/discord-economy-super\r\nnpm test\r\n```\r\n\r\nThe test will look like this:\r\n\r\n![Test](https://cdn.discordapp.com/attachments/764192017542283325/838226957166313472/Screenshot_4.png)\r\n</b></li>\r\n\r\n</ul>\r\n\r\n<b>v1.1.7</b>\r\n\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>TypeScript support is finally here! Created a type defenitions for this module.</b></li>\r\n</ul>\r\n\r\n<b>v1.1.6</b>\r\n\r\n<ul>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed bug with \"The module is not ready to work\" error on startup.</b></li>\r\n<li><b>Removed an accidentaly added \"discord.js\" module from dependencies.</b></li>\r\n</ul>\r\n\r\n<b>v1.1.5</b>\r\n\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Updated the examples.</b></li>\r\n<li><b>Fixed the types.</b></li>\r\n<li><b>Added a Table of Contents in README.md</b></li>\r\n<li><b>If you have an earlier Node.js version than v14, you will receive an error.</b></li>\r\n<li><b>Now you can configure the update checking system settings using 'options.updater' properties in constructor options. The 'options.checkUpdates' property was removed in favor of 'options.updater' configuration object. Use 'options.updater.checkUpdates' instead.</b></li>\r\n<li><b>Added an error handler that will work on startup. You can configure it using 'options.errorHandler' properties in constructor options.</b></li>\r\n<li><b>Option properties 'description, 'mesasge' and 'maxAmount', in 'Economy.shop.addItem' method are optional now.</b></li>\r\n<li><b>Now everyone will have a Bank Balance. This is another type of money, you can use it whatever you want. :) | The methods are almost the same: 'Economy.bankFetch()', 'Economy.bankSet()', 'Economy.bankAdd()', 'Economy.bankSubtract()' and 'Economy.bankLeaderboard()'.</b></li>\r\n<li><b>Added a new events for Bank Balance: 'bankSet', 'bankAdd' and 'bankSubtract'.</b></li>\r\n<li><b>Now every balance and bank-balance event object is including 'type' and 'balance' properties. The first property is type of the operation ('set', 'add', 'subtract', 'bankSet', 'bankAdd', 'bankSubtract') and the second is user's new balance after the operation was completed successfully.</b></li>\r\n<li><b>Now you can manually check the module updates using the new 'Economy.checkUpdates()' method.</b></li>\r\n<li><b>Added an additional 'Economy.ready' and 'Economy.errored' properties to check the module state.</b></li>\r\n<li><b>Now you can add a role to users on your Discord server. Click <a href=\"https://des-docs.js.org/#/docs/main/1.4.1/class/ShopManager\">here</a> for more info.</b></li>\r\n<li><b>Added a new 'shopItemBuy' and 'shopItemUse' events.</b></li>\r\n<li><b>Now if user try to buy an item when he reached the max amount of item in their inventory, the method will return a 'max' string.</b></li>\r\n<li><b>Now this module has a Support Server. Click <b><a href = \"https://discord.gg/4pWKq8vUnb\">here</a></b> to join!</b></li>\r\n</ul>\r\n\r\n<b>v1.1.4</b>\r\n\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Added an update checking system for this module.</b></li>\r\n<li><b>Added a 'checkUpdates' property for economy configuration.</b></li>\r\n</ul>\r\n\r\n<b>v1.0.8</b>\r\n\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now this module is including Events. They are listed above.</b></li>\r\n</ul>\r\n\r\n<b>v1.0.7</b>\r\n\r\n<ul>\r\n  <li><b>Fixed bugs</b></li>\r\n</ul>\r\n\r\n<b>v1.0.6</b>\r\n\r\n<ul>\r\n  <li><b>Edited README.md</b></li>\r\n  <li><b>Fixed bugs.</b></li>\r\n  <li><b>Code optimization</b></li>\r\n  <li><b>Now you can create a shop on your Discord server using Economy.shop methods. They are listed above.</b></li>\r\n  <li><b>Added an 'EconomyError' class property.</b></li>\r\n  <li><b>Added a 'dateLocale' property for economy configuration.</b></li>\r\n</ul>\r\n\r\n<b>v1.0.5</b>\r\n\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n\r\n<b>v1.0.4</b>\r\n\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n\r\n<b>v1.0.3</b>\r\n\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n\r\n<b>v1.0.2</b>\r\n\r\n<ul>\r\n  <li><b>Edited README.md</b></li>\r\n</ul>\r\n\r\n<b>v1.0.1</b>\r\n\r\n<ul>\r\n  <li><b>The first version of the module: added a basic methods: 'Economy.fetch()', 'Economy.set()', 'Economy.add()', 'Economy.subtract()', 'Economy.daily()', 'Economy.work()', 'Economy.getDailyCooldown()', 'Economy.getWorkCooldown()', 'Economy.all()' and 'Economy.leaderboard()'. Also added an EconomyError class, but you couldn't use it yourself.</b></li>\r\n</ul>\r\n\r\n</div>\r\n\r\n## ‚ùó | Useful Links\r\n\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n\r\n<br>\r\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for choosing Discord Economy Super ‚ù§Ô∏è\r\n","path":"docs/general/changelog.md"}}}},"classes":[{"name":"Economy","description":"The main Economy class.","extends":[[["Emitter"]]],"construct":{"name":"Economy","description":"The Economy class.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]}]},"props":[{"name":"ready","description":"Module ready status.","nullable":true,"type":[[["boolean"]]],"meta":{"line":51,"file":"index.js","path":"src"}},{"name":"errored","description":"Economy errored status.","nullable":true,"type":[[["boolean"]]],"meta":{"line":57,"file":"index.js","path":"src"}},{"name":"version","description":"Module version.","type":[[["string"]]],"meta":{"line":63,"file":"index.js","path":"src"}},{"name":"_logger","description":"The Logger class.","access":"private","type":[[["Logger"]]],"meta":{"line":70,"file":"index.js","path":"src"}},{"name":"docs","description":"Link to the module's documentation website.","type":[[["string"]]],"meta":{"line":81,"file":"index.js","path":"src"}},{"name":"utils","description":"Utils manager.","type":[[["UtilsManager"]]],"meta":{"line":87,"file":"index.js","path":"src"}},{"name":"options","description":"Economy configuration.","nullable":true,"type":[[["EconomyConfiguration"]]],"meta":{"line":93,"file":"index.js","path":"src"}},{"name":"managers","description":"Econoomy managers list. Made for optimization purposes.","type":[[["Array","<"],["Manager",">"]]],"meta":{"line":99,"file":"index.js","path":"src"}},{"name":"colors","description":"Colors object.","type":[[["LoggerColors"]]],"meta":{"line":105,"file":"index.js","path":"src"}},{"name":"interval","description":"Database checking interval.","nullable":true,"type":[[["NodeJS","."],["Timeout"]]],"meta":{"line":111,"file":"index.js","path":"src"}},{"name":"EconomyError","description":"Economy error class.","type":[[["EconomyError"]]],"meta":{"line":117,"file":"index.js","path":"src"}},{"name":"Emitter","description":"Emitter class.","type":[[["Emitter"]]],"meta":{"line":123,"file":"index.js","path":"src"}},{"name":"balance","description":"Balance manager.","type":[[["BalanceManager"]]],"meta":{"line":129,"file":"index.js","path":"src"}},{"name":"bank","description":"Bank balance manager.","type":[[["BankManager"]]],"meta":{"line":135,"file":"index.js","path":"src"}},{"name":"currencies","description":"Currency Manager.","type":[[["CurrencyManager"]]],"meta":{"line":141,"file":"index.js","path":"src"}},{"name":"fetcher","description":"Fetch manager.","type":[[["FetchManager"]]],"meta":{"line":147,"file":"index.js","path":"src"}},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]],"meta":{"line":153,"file":"index.js","path":"src"}},{"name":"shop","description":"Shop manager.","type":[[["ShopManager"]]],"meta":{"line":159,"file":"index.js","path":"src"}},{"name":"inventory","description":"Inventory manager.","type":[[["InventoryManager"]]],"meta":{"line":165,"file":"index.js","path":"src"}},{"name":"history","description":"History manager.","type":[[["HistoryManager"]]],"meta":{"line":171,"file":"index.js","path":"src"}},{"name":"cooldowns","description":"Cooldowns manager.","type":[[["CooldownManager"]]],"meta":{"line":177,"file":"index.js","path":"src"}},{"name":"rewards","description":"Rewards manager.","type":[[["RewardManager"]]],"meta":{"line":183,"file":"index.js","path":"src"}},{"name":"users","description":"Economy users manager.","type":[[["UserManager"]]],"meta":{"line":189,"file":"index.js","path":"src"}},{"name":"guilds","description":"Economy guilds manager.","type":[[["GuildManager"]]],"meta":{"line":195,"file":"index.js","path":"src"}},{"name":"settings","description":"Settings manager.","type":[[["SettingsManager"]]],"meta":{"line":201,"file":"index.js","path":"src"}},{"name":"economy","description":"Economy instance.","type":[[["Economy"]]],"meta":{"line":207,"file":"index.js","path":"src"}}],"methods":[{"name":"kill","description":"Kills the Economy instance.","returns":{"types":[[["Economy"]]],"description":"Economy instance."},"meta":{"line":225,"file":"index.js","path":"src"}},{"name":"init","description":"Starts the module.","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"If started successfully: true."},"meta":{"line":247,"file":"index.js","path":"src"}},{"name":"_init","description":"Initializes the module.","access":"private","returns":{"types":[[["Promise","<"],["boolean",">"]]],"description":"If started successfully: true."},"meta":{"line":330,"file":"index.js","path":"src"}},{"name":"start","description":"Starts all the managers.","access":"private","returns":{"types":[[["boolean"]]],"description":"If successfully started: true."},"meta":{"line":506,"file":"index.js","path":"src"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"events":[{"name":"balanceSet","description":"Emits when someone's set the money on the balance.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":636,"file":"index.js","path":"src"}},{"name":"balanceAdd","description":"Emits when someone's added the money on the balance.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":648,"file":"index.js","path":"src"}},{"name":"balanceSubtract","description":"Emits when someone's subtracts the money from user's balance.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":660,"file":"index.js","path":"src"}},{"name":"bankSet","description":"Emits when someone's set the money on the bank balance.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":672,"file":"index.js","path":"src"}},{"name":"bankAdd","description":"Emits when someone's added the money on the bank balance.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":684,"file":"index.js","path":"src"}},{"name":"bankSubtract","description":"Emits when someone's subtracts the money from user's bank balance.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":696,"file":"index.js","path":"src"}},{"name":"customCurrencySet","description":"Emits when someone's custom currency was set.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.currency","description":"Currency that was changed.","type":[[["Currency"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":708,"file":"index.js","path":"src"}},{"name":"customCurrencyAdd","description":"Emits when someone's custom currency was added.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.currency","description":"Currency that was changed.","type":[[["Currency"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":721,"file":"index.js","path":"src"}},{"name":"customCurrencySubtract","description":"Emits when someone's custom currency was subtracted.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.type","description":"The type of operation.","type":[[["string"]]]},{"name":"data.currency","description":"Currency that was changed.","type":[[["Currency"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.memberID","description":"Member ID.","type":[[["string"]]]},{"name":"data.amount","description":"Amount of money in completed operation.","type":[[["number"]]]},{"name":"data.balance","description":"User's balance after the operation was completed successfully.","type":[[["number"]]]},{"name":"data.reason","description":"The reason why the operation was completed.","type":[[["string"]]]}],"meta":{"line":734,"file":"index.js","path":"src"}},{"name":"shopItemAdd","description":"Emits when someone's added an item in the shop.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.id","description":"Item ID.","type":[[["number"]]]},{"name":"data.name","description":"Item name.","type":[[["string"]]]},{"name":"data.price","description":"Item price.","type":[[["number"]]]},{"name":"data.message","description":"Item message that will be returned on item use.","type":[[["string"]]]},{"name":"data.description","description":"Item description.","type":[[["string"]]]},{"name":"data.maxAmount","description":"Max amount of the item that user can hold in their inventory.","type":[[["number"]]]},{"name":"data.role","description":"Role **ID** from your Discord server.","type":[[["string"]]]},{"name":"data.date","description":"Formatted date when the item was added to the shop.","type":[[["string"]]]}],"meta":{"line":747,"file":"index.js","path":"src"}},{"name":"shopItemRemove","description":"Emits when someone's removed an item in the shop.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.id","description":"Item ID.","type":[[["number"]]]},{"name":"data.name","description":"Item name.","type":[[["string"]]]},{"name":"data.price","description":"Item price.","type":[[["number"]]]},{"name":"data.message","description":"Item message that will be returned on item use.","type":[[["string"]]]},{"name":"data.description","description":"Item description.","type":[[["string"]]]},{"name":"data.maxAmount","description":"Max amount of the item that user can hold in their inventory.","type":[[["number"]]]},{"name":"data.role","description":"Role **ID** from your Discord server.","type":[[["string"]]]},{"name":"data.date","description":"Formatted date when the item was added to the shop.","type":[[["string"]]]}],"meta":{"line":761,"file":"index.js","path":"src"}},{"name":"shopItemBuy","description":"Emits when someone's added an item in the shop.","params":[{"name":"item","description":"Shop item that was bought.","type":[[["ShopItem"]]]}],"meta":{"line":775,"file":"index.js","path":"src"}},{"name":"shopItemUse","description":"Emits when someone's used an item from their inventory.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.id","description":"Item ID.","type":[[["number"]]]},{"name":"data.name","description":"Item name.","type":[[["string"]]]},{"name":"data.price","description":"Item price.","type":[[["number"]]]},{"name":"data.message","description":"Item message that will be returned on item use.","type":[[["string"]]]},{"name":"data.description","description":"Item description.","type":[[["string"]]]},{"name":"data.maxAmount","description":"Max amount of the item that user can hold in their inventory.","type":[[["number"]]]},{"name":"data.role","description":"Role **ID** from your Discord server.","type":[[["string"]]]},{"name":"data.date","description":"Formatted date when the item was added to the shop.","type":[[["string"]]]}],"meta":{"line":781,"file":"index.js","path":"src"}},{"name":"shopItemEdit","description":"Emits when someone's edited an item in the shop.","params":[{"name":"data","description":"Data object.","type":[[["object"]]]},{"name":"data.id","description":"Item ID.","type":[[["number"]]]},{"name":"data.guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"data.changedProperty","description":"The item property that was changed.","type":[[["string"]]]},{"name":"data.oldValue","description":"Value before edit.","type":[[["string"]]]},{"name":"data.newValue","description":"Value after edit.","type":[[["string"]]]}],"meta":{"line":795,"file":"index.js","path":"src"}},{"name":"ready","description":"Emits when the module is ready.","params":[{"name":"eco","description":"Economy instance that was initialized and could be used.","type":[[["Economy"]]]}],"meta":{"line":806,"file":"index.js","path":"src"}},{"name":"destroy","description":"Emits when the module is destroyed.","params":[{"name":"data","description":"Void event.","type":[[["void"]]]}],"meta":{"line":812,"file":"index.js","path":"src"}}],"meta":{"line":38,"file":"index.js","path":"src"}},{"name":"Currency","description":"Currency class.","extends":[[["Emitter"]]],"construct":{"name":"Currency","params":[{"name":"currencyID","description":"Currency ID.","type":[[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuration object.","type":[[["EconomyConfiguration"]]]},{"name":"currencyObject","description":"Currency object.","type":[[["CurrencyObject"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":31,"file":"Currency.js","path":"src/classes"}},{"name":"database","description":"Database manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":38,"file":"Currency.js","path":"src/classes"}},{"name":"rawObject","description":"Raw currency object.","type":[[["CurrencyObject"]]],"meta":{"line":44,"file":"Currency.js","path":"src/classes"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":50,"file":"Currency.js","path":"src/classes"}},{"name":"id","description":"Currency ID.","type":[[["number"]]],"meta":{"line":56,"file":"Currency.js","path":"src/classes"}},{"name":"name","description":"Currency name.","type":[[["string"]]],"meta":{"line":62,"file":"Currency.js","path":"src/classes"}},{"name":"symbol","description":"Currency symbol.","nullable":true,"type":[[["string"]]],"meta":{"line":68,"file":"Currency.js","path":"src/classes"}},{"name":"balances","description":"Currency balances object.","type":[[["object"]]],"meta":{"line":74,"file":"Currency.js","path":"src/classes"}},{"name":"custom","description":"Custom currency data object.","type":[[["object"]]],"meta":{"line":80,"file":"Currency.js","path":"src/classes"}}],"methods":[{"name":"create","description":"Creates a currency object in guild database.","returns":{"types":[[["Currency"]]],"description":"Currency object."},"meta":{"line":91,"file":"Currency.js","path":"src/classes"}},{"name":"_all","description":"Gets the array of available currencies.","access":"private","returns":{"types":[[["Array","<"],["CurrencyObject",">"]]],"description":"Currencies array."},"meta":{"line":110,"file":"Currency.js","path":"src/classes"}},{"name":"delete","description":"Deletes the currency object from guild database.","returns":{"types":[[["Currency"]]],"description":"Deleted currency object."},"meta":{"line":119,"file":"Currency.js","path":"src/classes"}},{"name":"edit","description":"Edits the currency object.","params":[{"name":"property","description":"Currency property to edit.","type":[[["'name","'"]],[["'symbol","'"]],[["'custom","'"]]]},{"name":"value","description":"Any value to set.","type":[[["any"]]]}],"returns":{"types":[[["Currency"]]],"description":"Edited currency object."},"meta":{"line":136,"file":"Currency.js","path":"src/classes"}},{"name":"setCustom","description":"Edits the currency's custom data object.","params":[{"name":"customObject","description":"Custom data object to set.","type":[[["object"]]]}],"returns":{"types":[[["Currency"]]],"description":"Currency object with its updated custom property."},"meta":{"line":166,"file":"Currency.js","path":"src/classes"}},{"name":"getBalance","description":"Sets the currency for specified member.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Member's balance."},"meta":{"line":176,"file":"Currency.js","path":"src/classes"}},{"name":"setBalance","description":"Sets the currency for specified member.","params":[{"name":"amount","description":"Amount of money to set.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the balance was set.","optional":true,"type":[[["string"]]]},{"name":"emitSet","description":"If true, `customCurrencySet` event will be emitted on set. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":{"types":[[["number"]]],"description":"Amount of money that was set."},"meta":{"line":189,"file":"Currency.js","path":"src/classes"}},{"name":"addBalance","description":"Adds the currency for specified member.","params":[{"name":"amount","description":"Amount of money to add.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the balance was added.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Amount of money that was added."},"meta":{"line":236,"file":"Currency.js","path":"src/classes"}},{"name":"subtractBalance","description":"Subtracts the currency for specified member.","params":[{"name":"amount","description":"Amount of money to subtract.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the balance was subtracted.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Amount of money that was subtracted."},"meta":{"line":260,"file":"Currency.js","path":"src/classes"}},{"name":"transfer","description":"Transfers the currency to specified user","params":[{"name":"Currency","description":"transfering options.","type":[[["TransferingOptions"]]]}],"returns":{"types":[[["TransferingResult"]]],"description":"Currency transfering result."},"meta":{"line":282,"file":"Currency.js","path":"src/classes"}},{"name":"save","description":"Saves the currency object in database.","returns":{"types":[[["Currency"]]],"description":"Currency instance."},"meta":{"line":325,"file":"Currency.js","path":"src/classes"}},{"name":"toString","description":"Converts the currency object to string.","returns":{"types":[[["string"]]],"description":"String representation of currency object."},"meta":{"line":343,"file":"Currency.js","path":"src/classes"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":13,"file":"Currency.js","path":"src/classes"}},{"name":"EconomyGuild","description":"Economy guild class.","construct":{"name":"EconomyGuild","description":"Economy guild class.","params":[{"name":"id","description":"Guild ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"guildObject","description":"Economy guild object.","type":[[["any"]]]}]},"props":[{"name":"users","description":"Guild User Manager.","type":[[["UserManager"]]],"meta":{"line":28,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"id","description":"Guild ID.","type":[[["string"]]],"meta":{"line":34,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":41,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"utils","description":"Utils Manager.","access":"private","type":[[["UtilsManager"]]],"meta":{"line":48,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"shop","description":"Guild Shop.","type":[[["Shop"]]],"meta":{"line":54,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"leaderboards","description":"Guild Leaderboards.","type":[[["Leaderboards"]]],"meta":{"line":60,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"settings","description":"Guild Settings.","type":[[["Settings"]]],"meta":{"line":66,"file":"EconomyGuild.js","path":"src/classes"}}],"methods":[{"name":"create","description":"Creates an economy guild object in database.","returns":{"types":[[["boolean"]]],"description":"If created successfully: true; else: false."},"meta":{"line":81,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"delete","description":"Deletes the guild from database.","returns":{"types":[[["EconomyGuild"]]],"description":"Deleted guild object."},"meta":{"line":93,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"reset","description":"Sets the default guild object for a specified member.","returns":{"types":[[["boolean"]]],"description":"If reset successfully: true; else: false."},"meta":{"line":102,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"toString","description":"Converts the economy guild to string.","returns":{"types":[[["string"]]],"description":"String representation of economy guild."},"meta":{"line":113,"file":"EconomyGuild.js","path":"src/classes"}}],"meta":{"line":14,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"EconomyUser","description":"Economy user class.","construct":{"name":"EconomyUser","description":"Economy user class.","params":[{"name":"id","description":"User ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"userObject","description":"Economy user object.","type":[[["RawEconomyUser"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"id","description":"User ID.","type":[[["string"]]],"meta":{"line":38,"file":"EconomyUser.js","path":"src/classes"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":44,"file":"EconomyUser.js","path":"src/classes"}},{"name":"money","description":"User's balance.","type":[[["number"]]],"meta":{"line":50,"file":"EconomyUser.js","path":"src/classes"}},{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":58,"file":"EconomyUser.js","path":"src/classes"}},{"name":"_shop","description":"Shop Manager.","access":"private","type":[[["ShopManager"]]],"meta":{"line":65,"file":"EconomyUser.js","path":"src/classes"}},{"name":"cooldowns","description":"User cooldowns.","type":[[["Cooldowns"]]],"meta":{"line":71,"file":"EconomyUser.js","path":"src/classes"}},{"name":"history","description":"User history.","type":[[["History"]]],"meta":{"line":77,"file":"EconomyUser.js","path":"src/classes"}},{"name":"inventory","description":"User inventory.","type":[[["Inventory"]]],"meta":{"line":83,"file":"EconomyUser.js","path":"src/classes"}},{"name":"balance","description":"User balance.","type":[[["Balance"]]],"meta":{"line":89,"file":"EconomyUser.js","path":"src/classes"}},{"name":"bank","description":"User bank balance.","type":[[["Bank"]]],"meta":{"line":97,"file":"EconomyUser.js","path":"src/classes"}},{"name":"rewards","description":"User rewards.","type":[[["Rewards"]]],"meta":{"line":103,"file":"EconomyUser.js","path":"src/classes"}},{"name":"items","description":"User items.","type":[[["Items"]]],"meta":{"line":109,"file":"EconomyUser.js","path":"src/classes"}}],"methods":[{"name":"create","description":"Creates an economy user object in database.","returns":{"types":[[["boolean"]]],"description":"If created successfully: true, else: false."},"meta":{"line":123,"file":"EconomyUser.js","path":"src/classes"}},{"name":"delete","description":"Deletes the user from database.","returns":{"types":[[["EconomyUser"]]],"description":"Deleted user object."},"meta":{"line":135,"file":"EconomyUser.js","path":"src/classes"}},{"name":"reset","description":"Sets the default user object for a specified member.","returns":{"types":[[["boolean"]]],"description":"If reset successfully: true; else: false."},"meta":{"line":144,"file":"EconomyUser.js","path":"src/classes"}},{"name":"toString","description":"Converts the economy user to string.","returns":{"types":[[["string"]]],"description":"String representation of economy user."},"meta":{"line":158,"file":"EconomyUser.js","path":"src/classes"}}],"meta":{"line":20,"file":"EconomyUser.js","path":"src/classes"}},{"name":"EmptyEconomyGuild","description":"Empty economy guild class.","extends":[[["EconomyGuild"]]],"construct":{"name":"EmptyEconomyGuild","description":"Economy guild class.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"exists","description":"Determine if the guild exists in the database.","type":[[["boolean"]]],"meta":{"line":22,"file":"EmptyEconomyGuild.js","path":"src/classes"}},{"name":"users","description":"Guild User Manager.","type":[[["UserManager"]]],"meta":{"line":28,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"id","description":"Guild ID.","type":[[["string"]]],"meta":{"line":34,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":41,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"utils","description":"Utils Manager.","access":"private","type":[[["UtilsManager"]]],"meta":{"line":48,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"shop","description":"Guild Shop.","type":[[["Shop"]]],"meta":{"line":54,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"leaderboards","description":"Guild Leaderboards.","type":[[["Leaderboards"]]],"meta":{"line":60,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"settings","description":"Guild Settings.","type":[[["Settings"]]],"meta":{"line":66,"file":"EconomyGuild.js","path":"src/classes"}}],"methods":[{"name":"create","description":"Creates an economy guild object in database.","inherits":"EconomyGuild#create","inherited":true,"returns":{"types":[[["boolean"]]],"description":"If created successfully: true; else: false."},"meta":{"line":81,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"delete","description":"Deletes the guild from database.","inherits":"EconomyGuild#delete","inherited":true,"returns":{"types":[[["EconomyGuild"]]],"description":"Deleted guild object."},"meta":{"line":93,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"reset","description":"Sets the default guild object for a specified member.","inherits":"EconomyGuild#reset","inherited":true,"returns":{"types":[[["boolean"]]],"description":"If reset successfully: true; else: false."},"meta":{"line":102,"file":"EconomyGuild.js","path":"src/classes"}},{"name":"toString","description":"Converts the economy guild to string.","inherits":"EconomyGuild#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"String representation of economy guild."},"meta":{"line":113,"file":"EconomyGuild.js","path":"src/classes"}}],"meta":{"line":7,"file":"EmptyEconomyGuild.js","path":"src/classes"}},{"name":"EmptyEconomyUser","description":"Empty economy user class.","extends":[[["EconomyUser"]]],"construct":{"name":"EmptyEconomyUser","description":"Economy user class.","params":[{"name":"userID","description":"User ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"exists","description":"Determine if the user exists in the database.","type":[[["boolean"]]],"meta":{"line":24,"file":"EmptyEconomyUser.js","path":"src/classes"}},{"name":"id","description":"User ID.","type":[[["string"]]],"meta":{"line":38,"file":"EconomyUser.js","path":"src/classes"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":44,"file":"EconomyUser.js","path":"src/classes"}},{"name":"money","description":"User's balance.","type":[[["number"]]],"meta":{"line":50,"file":"EconomyUser.js","path":"src/classes"}},{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":58,"file":"EconomyUser.js","path":"src/classes"}},{"name":"_shop","description":"Shop Manager.","access":"private","type":[[["ShopManager"]]],"meta":{"line":65,"file":"EconomyUser.js","path":"src/classes"}},{"name":"cooldowns","description":"User cooldowns.","type":[[["Cooldowns"]]],"meta":{"line":71,"file":"EconomyUser.js","path":"src/classes"}},{"name":"history","description":"User history.","type":[[["History"]]],"meta":{"line":77,"file":"EconomyUser.js","path":"src/classes"}},{"name":"inventory","description":"User inventory.","type":[[["Inventory"]]],"meta":{"line":83,"file":"EconomyUser.js","path":"src/classes"}},{"name":"balance","description":"User balance.","type":[[["Balance"]]],"meta":{"line":89,"file":"EconomyUser.js","path":"src/classes"}},{"name":"bank","description":"User bank balance.","type":[[["Bank"]]],"meta":{"line":97,"file":"EconomyUser.js","path":"src/classes"}},{"name":"rewards","description":"User rewards.","type":[[["Rewards"]]],"meta":{"line":103,"file":"EconomyUser.js","path":"src/classes"}},{"name":"items","description":"User items.","type":[[["Items"]]],"meta":{"line":109,"file":"EconomyUser.js","path":"src/classes"}}],"methods":[{"name":"create","description":"Creates an economy user object in database.","inherits":"EconomyUser#create","inherited":true,"returns":{"types":[[["boolean"]]],"description":"If created successfully: true, else: false."},"meta":{"line":123,"file":"EconomyUser.js","path":"src/classes"}},{"name":"delete","description":"Deletes the user from database.","inherits":"EconomyUser#delete","inherited":true,"returns":{"types":[[["EconomyUser"]]],"description":"Deleted user object."},"meta":{"line":135,"file":"EconomyUser.js","path":"src/classes"}},{"name":"reset","description":"Sets the default user object for a specified member.","inherits":"EconomyUser#reset","inherited":true,"returns":{"types":[[["boolean"]]],"description":"If reset successfully: true; else: false."},"meta":{"line":144,"file":"EconomyUser.js","path":"src/classes"}},{"name":"toString","description":"Converts the economy user to string.","inherits":"EconomyUser#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"String representation of economy user."},"meta":{"line":158,"file":"EconomyUser.js","path":"src/classes"}}],"meta":{"line":8,"file":"EmptyEconomyUser.js","path":"src/classes"}},{"name":"Leaderboards","description":"Guild leaderboards.","construct":{"name":"Leaderboards","description":"Guild leaderboards class.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]}]},"props":[{"name":"guildID","description":"Guild ID.","access":"private","type":[[["string"]]],"meta":{"line":22,"file":"Leaderboards.js","path":"src/classes/guild"}},{"name":"_balance","description":"Balance Manager.","access":"private","type":[[["BalanceManager"]]],"meta":{"line":29,"file":"Leaderboards.js","path":"src/classes/guild"}},{"name":"_bank","description":"Bank Manager.","access":"private","type":[[["BankManager"]]],"meta":{"line":36,"file":"Leaderboards.js","path":"src/classes/guild"}}],"methods":[{"name":"money","description":"Gets a money leaderboard for the guild.","returns":{"types":[[["Array","<"],["BalanceLeaderboard",">"]]],"description":"Balance leaderboard array."},"meta":{"line":43,"file":"Leaderboards.js","path":"src/classes/guild"}},{"name":"bank","description":"Gets a bank balance leaderboard for the guild.","returns":{"types":[[["Array","<"],["BankLeaderboard",">"]]],"description":"Bank balance leaderboard array."},"meta":{"line":51,"file":"Leaderboards.js","path":"src/classes/guild"}}],"meta":{"line":8,"file":"Leaderboards.js","path":"src/classes/guild"}},{"name":"Settings","description":"Guild Settings.","construct":{"name":"Settings","description":"Guild settings class.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]}]},"props":[{"name":"guildID","description":"Guild ID.","access":"private","type":[[["string"]]],"meta":{"line":21,"file":"Settings.js","path":"src/classes/guild"}},{"name":"_settings","description":"Settings Manager.","access":"private","type":[[["SettingsManager"]]],"meta":{"line":28,"file":"Settings.js","path":"src/classes/guild"}}],"methods":[{"name":"all","description":"Fetches the server's settings object.","returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":35,"file":"Settings.js","path":"src/classes/guild"}},{"name":"get","description":"Gets the specified setting from the database.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\rconfiguration or default configuration.","params":[{"name":"key","description":"The setting to fetch.","type":[[["Settings"]]]}],"returns":{"types":[[["any"]]],"description":"The setting from the database."},"meta":{"line":49,"file":"Settings.js","path":"src/classes/guild"}},{"name":"set","description":"Changes the specified setting.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\rspecified configuration or default configuration.","params":[{"name":"key","description":"The setting to change.","type":[[["Settings"]]]},{"name":"value","description":"The value to set.","type":[[["any"]]]}],"returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":64,"file":"Settings.js","path":"src/classes/guild"}},{"name":"remove","description":"Removes the specified setting.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\rspecified configuration or default configuration.","params":[{"name":"key","description":"The setting to remove.","type":[[["Settings"]]]}],"returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":78,"file":"Settings.js","path":"src/classes/guild"}},{"name":"reset","description":"Resets all the settings to setting that are in configuration.","returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":86,"file":"Settings.js","path":"src/classes/guild"}}],"meta":{"line":7,"file":"Settings.js","path":"src/classes/guild"}},{"name":"Shop","description":"Guild shop class.","extends":[[["BaseManager"]]],"construct":{"name":"Shop","description":"Guild shop constructor.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]}]},"props":[{"name":"guildID","description":"Guild ID.","access":"private","type":[[["string"]]],"meta":{"line":28,"file":"Shop.js","path":"src/classes/guild"}},{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":56,"file":"BaseManager.js","path":"src/managers"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":63,"file":"BaseManager.js","path":"src/managers"}},{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":69,"file":"BaseManager.js","path":"src/managers"}},{"name":"baseConstructor","description":"A constructor (EconomyUser, ShopItem, etc.) to work with.","access":"private","type":[[["any"]]],"meta":{"line":82,"file":"BaseManager.js","path":"src/managers"}},{"name":"emptyBaseConstructor","description":"An empty constructor (EmptyEconomyUser, EmptyEconomyGuild, etc.) to replace the `undefined` value with.","access":"private","type":[[["any"]]],"meta":{"line":89,"file":"BaseManager.js","path":"src/managers"}},{"name":"length","description":"Amount of elements in database.","type":[[["number"]]],"meta":{"line":95,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"findItem","description":"Gets the item in the shop.","params":[{"name":"itemID","description":"Item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["ShopItem"]]],"description":"Shop item."},"meta":{"line":36,"file":"Shop.js","path":"src/classes/guild"}},{"name":"all","description":"Gets all the items in the shop.","returns":{"types":[[["Array","<"],["ShopItem",">"]]],"description":"Guild shop array."},"meta":{"line":52,"file":"Shop.js","path":"src/classes/guild"}},{"name":"get","description":"Gets all items in the shop.\r\rThis method is an alias for the `Shop.findItem()` method.","params":[{"name":"itemID","description":"Item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["ShopItem"]]],"description":"Shop item."},"meta":{"line":64,"file":"Shop.js","path":"src/classes/guild"}},{"name":"addItem","description":"Creates an item in shop.","params":[{"name":"options","description":"Configuration with item info.","type":[[["AddItemOptions"]]]}],"returns":{"types":[[["ItemData"]]],"description":"Item info."},"meta":{"line":73,"file":"Shop.js","path":"src/classes/guild"}},{"name":"add","description":"Creates an item in shop.\r\rThis method is an alias for the `Shop.addItem()` method.","params":[{"name":"options","description":"Configuration with item info.","type":[[["AddItemOptions"]]]}],"returns":{"types":[[["ItemData"]]],"description":"Item info."},"meta":{"line":160,"file":"Shop.js","path":"src/classes/guild"}},{"name":"editItem","description":"Edits the item in the shop.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"itemProperty","description":"This argument means what thing in item you want to edit (item property).\rAvailable item properties are 'description', 'price', 'name', 'message', 'amount', 'role', 'custom'.","type":[[["'description","'"]],[["'price","'"]],[["'name","'"]],[["'message","'"]],[["'maxAmount","'"]],[["'role","'"]]]},{"name":"value","description":"Any value to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If edited successfully: true, else: false."},"meta":{"line":174,"file":"Shop.js","path":"src/classes/guild"}},{"name":"edit","description":"Edits the item in the shop.\r\rThis method is an alias for the `Shop.editItem()` method.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"itemProperty","description":"This argument means what thing in item you want to edit (item property).\rAvailable item properties are 'description', 'price', 'name', 'message', 'amount', 'role', 'custom'.","type":[[["'description","'"]],[["'price","'"]],[["'name","'"]],[["'message","'"]],[["'maxAmount","'"]],[["'role","'"]]]},{"name":"value","description":"Any value to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If edited successfully: true, else: false."},"meta":{"line":252,"file":"Shop.js","path":"src/classes/guild"}},{"name":"setCustom","description":"Sets a custom object for the item.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"customObject","description":"Custom item data object.","type":[[["object"]]]}],"returns":{"types":[[["boolean"]]],"description":"If set successfully: true, else: false."},"meta":{"line":262,"file":"Shop.js","path":"src/classes/guild"}},{"name":"clear","description":"Clears the shop.","returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":270,"file":"Shop.js","path":"src/classes/guild"}},{"name":"first","description":"Gets the first element in specified guild.","inherits":"BaseManager#first","inherited":true,"returns":{"types":[[["any"]]],"description":"First database object."},"meta":{"line":102,"file":"BaseManager.js","path":"src/managers"}},{"name":"last","description":"Gets the last element in specified guild.","inherits":"BaseManager#last","inherited":true,"returns":{"types":[[["any"]]],"description":"Last database object."},"meta":{"line":151,"file":"BaseManager.js","path":"src/managers"}},{"name":"toArray","description":"Returns an array of elements in specified guild.","inherits":"BaseManager#toArray","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Array of elements in specified guild."},"meta":{"line":197,"file":"BaseManager.js","path":"src/managers"}},{"name":"find","description":"This method is the same as `Array.find()`.\r\rFinds the element in array and returns it.","inherits":"BaseManager#find","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["any"]]],"description":"Database object."},"meta":{"line":236,"file":"BaseManager.js","path":"src/managers"}},{"name":"at","description":"Gets the element at the specified index in the elements array.","inherits":"BaseManager#at","inherited":true,"params":[{"name":"index","description":"Index of the user.","type":[[["number"]]]}],"returns":{"types":[[["any"]]],"description":"Object at the specified index."},"meta":{"line":261,"file":"BaseManager.js","path":"src/managers"}},{"name":"findIndex","description":"This method is the same as `Array.findIndex()`.\r\rFinds the element's index in array and returns it.","inherits":"BaseManager#findIndex","inherited":true,"params":[{"name":"predicate","description":"Find calls predicate once for each element of the array, in ascending order,\runtil it finds one where predicate returns true.\rIf such an element is found, findIndex immediately returns that element index.\rOtherwise, findIndex returns -1.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["number"]]],"description":"Element index."},"meta":{"line":319,"file":"BaseManager.js","path":"src/managers"}},{"name":"includes","description":"This method is the same as `Array.includes()`.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#includes","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The position in this array at which to begin searching for searchElement.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":331,"file":"BaseManager.js","path":"src/managers"}},{"name":"has","description":"This method is the same as `Array.includes()`.\r\rThis method is an alias for `UserManager.includes()` method.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#has","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":347,"file":"BaseManager.js","path":"src/managers"}},{"name":"indexOf","description":"This method is the same as `Array.indexOf()`.","inherits":"BaseManager#indexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":360,"file":"BaseManager.js","path":"src/managers"}},{"name":"lastIndexOf","description":"This method is the same as `Array.lastIndexOf()`.","inherits":"BaseManager#lastIndexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin searching backward.\rIf fromIndex is omitted, the search starts at the last index in the array.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":373,"file":"BaseManager.js","path":"src/managers"}},{"name":"reverse","description":"This method is the same as `Array.reverse()`.\r\rReverses the array of all elements and returns it.","inherits":"BaseManager#reverse","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Reversed elements array."},"meta":{"line":383,"file":"BaseManager.js","path":"src/managers"}},{"name":"sort","description":"This method is the same as `Array.sort()`.\r\rSorts an array in place. This method mutates the array and returns a reference to the same array.","inherits":"BaseManager#sort","inherited":true,"params":[{"name":"compareFn","description":"Function used to determine the order of the elements.\rIt is expected to return a negative value if first argument is less than second argument,\rzero if they're equal and a positive value otherwise.\rIf omitted, the elements are sorted in ascending, ASCII character order.","optional":true,"type":[[["CompareFunction"]]]}],"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Sorted elements array."},"meta":{"line":398,"file":"BaseManager.js","path":"src/managers"}},{"name":"filter","description":"This method is the same as `Array.filter()`.\r\rFilters the array by specified condition and returns the array.","inherits":"BaseManager#filter","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["Array","<"],["any",">"]]],"meta":{"line":414,"file":"BaseManager.js","path":"src/managers"}},{"name":"map","description":"This method is the same as `Array.map()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#map","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":431,"file":"BaseManager.js","path":"src/managers"}},{"name":"forEach","description":"This method is the same as `Array.forEach()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#forEach","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":448,"file":"BaseManager.js","path":"src/managers"}},{"name":"some","description":"This method is the same as `Array.some()`.\r\rDetermines whether the specified callback function returns true for any element of an array.","inherits":"BaseManager#some","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe some method calls the predicate function for each element in the array\runtil the predicate returns a value which is coercible to the Boolean value true,\ror until the end of the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is any of the elements meets the specified condition."},"meta":{"line":466,"file":"BaseManager.js","path":"src/managers"}},{"name":"values","description":"Returns an iterable of values in the array.","inherits":"BaseManager#values","inherited":true,"returns":{"types":[[["IterableIterator","<"],["any",">"]]],"description":"An iterable of values in the array."},"meta":{"line":474,"file":"BaseManager.js","path":"src/managers"}},{"name":"toString","description":"Returns a string representation of an array.","inherits":"BaseManager#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"String representation of an array."},"meta":{"line":482,"file":"BaseManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":13,"file":"Shop.js","path":"src/classes/guild"}},{"name":"HistoryItem","description":"History item class.","construct":{"name":"HistoryItem","description":"History item class.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"itemObject","description":"User purchases history item object.","type":[[["HistoryData"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":23,"file":"HistoryItem.js","path":"src/classes"}},{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":29,"file":"HistoryItem.js","path":"src/classes"}},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]],"meta":{"line":35,"file":"HistoryItem.js","path":"src/classes"}},{"name":"rawObject","description":"Raw item object.","type":[[["HistoryData"]]],"meta":{"line":41,"file":"HistoryItem.js","path":"src/classes"}},{"name":"id","description":"Item ID in history.","type":[[["number"]]],"meta":{"line":47,"file":"HistoryItem.js","path":"src/classes"}},{"name":"name","description":"Item name.","type":[[["string"]]],"meta":{"line":53,"file":"HistoryItem.js","path":"src/classes"}},{"name":"price","description":"Item price.","type":[[["number"]]],"meta":{"line":59,"file":"HistoryItem.js","path":"src/classes"}},{"name":"message","description":"The message that will be returned on item use.","type":[[["string"]]],"meta":{"line":65,"file":"HistoryItem.js","path":"src/classes"}},{"name":"date","description":"Date when the item was bought by a user.","type":[[["string"]]],"meta":{"line":71,"file":"HistoryItem.js","path":"src/classes"}},{"name":"role","description":"ID of Discord Role that will be given to the user on item use.","type":[[["string"]]],"meta":{"line":77,"file":"HistoryItem.js","path":"src/classes"}},{"name":"quantity","description":"Quantity of the item.","type":[[["number"]]],"meta":{"line":83,"file":"HistoryItem.js","path":"src/classes"}},{"name":"_database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":90,"file":"HistoryItem.js","path":"src/classes"}}],"methods":[{"name":"delete","description":"Removes the item from the history.\r\rThis method is an alias for 'HistoryItem.remove()' method.","returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":103,"file":"HistoryItem.js","path":"src/classes"}},{"name":"remove","description":"Removes the item from the history.","returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":111,"file":"HistoryItem.js","path":"src/classes"}},{"name":"save","description":"Saves the history item object in database.","returns":{"types":[[["HistoryItem"]]],"description":"History item instance."},"meta":{"line":139,"file":"HistoryItem.js","path":"src/classes"}},{"name":"toString","description":"Converts the history item to string.","returns":{"types":[[["string"]]],"description":"String representation of history item."},"meta":{"line":157,"file":"HistoryItem.js","path":"src/classes"}}],"meta":{"line":7,"file":"HistoryItem.js","path":"src/classes"}},{"name":"InventoryItem","description":"Inventory item class.","extends":[[["Emitter"]]],"construct":{"name":"InventoryItem","description":"Inventory item class.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"itemObject","description":"Economy guild object.","type":[[["InventoryData"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]],"meta":{"line":29,"file":"InventoryItem.js","path":"src/classes"}},{"name":"rawObject","description":"Raw item object.","type":[[["InventoryData"]]],"meta":{"line":35,"file":"InventoryItem.js","path":"src/classes"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":41,"file":"InventoryItem.js","path":"src/classes"}},{"name":"memberID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":47,"file":"InventoryItem.js","path":"src/classes"}},{"name":"id","description":"Inventory item ID.","type":[[["number"]]],"meta":{"line":53,"file":"InventoryItem.js","path":"src/classes"}},{"name":"name","description":"Item name.","type":[[["string"]]],"meta":{"line":59,"file":"InventoryItem.js","path":"src/classes"}},{"name":"price","description":"Item price.","type":[[["number"]]],"meta":{"line":65,"file":"InventoryItem.js","path":"src/classes"}},{"name":"message","description":"The message that will be returned on item use.","type":[[["string"]]],"meta":{"line":71,"file":"InventoryItem.js","path":"src/classes"}},{"name":"role","description":"ID of Discord Role that will be given to the user on item use.","type":[[["string"]]],"meta":{"line":77,"file":"InventoryItem.js","path":"src/classes"}},{"name":"maxAmount","description":"Max amount of the item that user can hold in their inventory.","type":[[["number"]]],"meta":{"line":83,"file":"InventoryItem.js","path":"src/classes"}},{"name":"date","description":"Date when the item was added in the shop.","type":[[["string"]]],"meta":{"line":89,"file":"InventoryItem.js","path":"src/classes"}},{"name":"settings","description":"Settings manager methods class.","access":"private","type":[[["SettingsManager"]]],"meta":{"line":96,"file":"InventoryItem.js","path":"src/classes"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":103,"file":"InventoryItem.js","path":"src/classes"}}],"methods":[{"name":"delete","description":"Removes an item from the shop.","params":[{"name":"quantity","description":"Quantity of items to delete.\r\rThis method is an alias for 'InventoryItem.remove()' method.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":117,"file":"InventoryItem.js","path":"src/classes"}},{"name":"stack","description":"Returns the stacked item in user inventory: it will have the quantity and total price of the item.","returns":{"types":[[["StackedInventoryItemObject"]]],"description":"Stacked item object."},"meta":{"line":125,"file":"InventoryItem.js","path":"src/classes"}},{"name":"remove","description":"Removes an item from the shop.","params":[{"name":"quantity","description":"Quantity of items to delete.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":150,"file":"InventoryItem.js","path":"src/classes"}},{"name":"use","description":"Uses the item: returns the item usage message and removes the item from user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"client","description":"Discord Client. [Specify if the role will be given on a Discord server]","optional":true,"type":[[["Client"]]]}],"returns":{"types":[[["string"]]],"description":"Item message."},"meta":{"line":181,"file":"InventoryItem.js","path":"src/classes"}},{"name":"sell","description":"Removes the item from user's inventory\rand adds its price to the user's balance.\rThis is the same as selling something.","params":[{"name":"quantity","description":"Quantity of items to sell.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["SellingOperationInfo"]]],"description":"Selling operation info."},"meta":{"line":264,"file":"InventoryItem.js","path":"src/classes"}},{"name":"save","description":"Saves the inventory item object in database.","returns":{"types":[[["InventoryItem"]]],"description":"Inventory item instance."},"meta":{"line":310,"file":"InventoryItem.js","path":"src/classes"}},{"name":"toString","description":"Converts the inventory item to string.","returns":{"types":[[["string"]]],"description":"String representation of inventory item."},"meta":{"line":328,"file":"InventoryItem.js","path":"src/classes"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":12,"file":"InventoryItem.js","path":"src/classes"}},{"name":"ShopItem","description":"Shop item class.","extends":[[["Emitter"]]],"construct":{"name":"ShopItem","description":"Shop item class.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"itemObject","description":"Shop item object.","type":[[["ItemData"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":28,"file":"ShopItem.js","path":"src/classes"}},{"name":"rawObject","description":"Raw item object.","type":[[["ItemData"]]],"meta":{"line":34,"file":"ShopItem.js","path":"src/classes"}},{"name":"id","description":"Shop item ID.","type":[[["number"]]],"meta":{"line":40,"file":"ShopItem.js","path":"src/classes"}},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]],"meta":{"line":46,"file":"ShopItem.js","path":"src/classes"}},{"name":"currencies","description":"Currency Manager.","type":[[["CurrencyManager"]]],"meta":{"line":52,"file":"ShopItem.js","path":"src/classes"}},{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":59,"file":"ShopItem.js","path":"src/classes"}},{"name":"name","description":"Item name.","type":[[["string"]]],"meta":{"line":65,"file":"ShopItem.js","path":"src/classes"}},{"name":"price","description":"Item price.","type":[[["number"]]],"meta":{"line":71,"file":"ShopItem.js","path":"src/classes"}},{"name":"message","description":"The message that will be returned on item use.","type":[[["string"]]],"meta":{"line":77,"file":"ShopItem.js","path":"src/classes"}},{"name":"description","description":"Item description.","type":[[["string"]]],"meta":{"line":83,"file":"ShopItem.js","path":"src/classes"}},{"name":"role","description":"ID of Discord Role that will be given to the user on item use.","type":[[["string"]]],"meta":{"line":89,"file":"ShopItem.js","path":"src/classes"}},{"name":"maxAmount","description":"Max amount of the item that user can hold in their inventory.","type":[[["number"]]],"meta":{"line":95,"file":"ShopItem.js","path":"src/classes"}},{"name":"date","description":"Date when the item was added in the shop.","type":[[["string"]]],"meta":{"line":101,"file":"ShopItem.js","path":"src/classes"}},{"name":"custom","description":"Custom item data object.","type":[[["object"]]],"meta":{"line":107,"file":"ShopItem.js","path":"src/classes"}}],"methods":[{"name":"isEnoughMoneyFor","description":"Checks for is the specified user has enough money to buy the item.","params":[{"name":"userID","description":"User ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of the items to buy.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the user has enough money to buy the item."},"meta":{"line":121,"file":"ShopItem.js","path":"src/classes"}},{"name":"isInInventory","description":"Checks for is the specified user has the item in their inventory.","params":[{"name":"userID","description":"User ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the user has the item in their inventory."},"meta":{"line":140,"file":"ShopItem.js","path":"src/classes"}},{"name":"edit","description":"Edits the item in the shop.","params":[{"name":"itemProperty","description":"This argument means what thing in item you want to edit (item property).\rAvailable item properties are 'description', 'price', 'name', 'message', 'amount', 'role', 'custom'.","type":[[["\"description","\""]],[["\"price","\""]],[["\"name","\""]],[["\"message","\""]],[["\"maxAmount","\""]],[["\"role","\""]],[["'custom","'"]]]},{"name":"value","description":"Any value to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If edited successfully: true, else: false."},"meta":{"line":155,"file":"ShopItem.js","path":"src/classes"}},{"name":"buy","description":"Buys the item from the shop.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of items to buy. Default: 1.","optional":true,"default":1,"type":[[["number"]]]},{"name":"currency","description":"The currency to subtract the money from.\rCan be omitted by specifying 'null' or ignoring this parameter.\rRequires the `subtractOnBuy` option to be enabled. Default: null.","optional":true,"default":null,"type":[[["string"]],[["number"]]]},{"name":"reason","description":"The reason why the money was subtracted. Default: 'received the item from the shop'.","optional":true,"default":"'received the item from the shop'","type":[[["string"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Operation information object."},"meta":{"line":237,"file":"ShopItem.js","path":"src/classes"}},{"name":"setCustom","description":"Sets a custom object for the item.","params":[{"name":"custom","description":"Custom item data object.","type":[[["object"]]]}],"returns":{"types":[[["boolean"]]],"description":"If set successfully: true, else: false."},"meta":{"line":375,"file":"ShopItem.js","path":"src/classes"}},{"name":"delete","description":"Removes an item from the shop.\r\rThis method is an alias for 'ShopItem.remove()' method.","returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":385,"file":"ShopItem.js","path":"src/classes"}},{"name":"remove","description":"Removes an item from the shop.","returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":393,"file":"ShopItem.js","path":"src/classes"}},{"name":"save","description":"Saves the shop item object in database.","returns":{"types":[[["ShopItem"]]],"description":"Shop item instance."},"meta":{"line":419,"file":"ShopItem.js","path":"src/classes"}},{"name":"toString","description":"Converts the shop item to string.","returns":{"types":[[["string"]]],"description":"String representation of shop item."},"meta":{"line":437,"file":"ShopItem.js","path":"src/classes"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":13,"file":"ShopItem.js","path":"src/classes"}},{"name":"Balance","description":"User balance class.","construct":{"name":"Balance","description":"User balance class.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":25,"file":"Balance.js","path":"src/classes/user"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":31,"file":"Balance.js","path":"src/classes/user"}},{"name":"_balance","description":"Balance Manager.","access":"private","type":[[["BalanceManager"]]],"meta":{"line":38,"file":"Balance.js","path":"src/classes/user"}},{"name":"_currencies","description":"Currency Manager.","access":"private","type":[[["CurrencyManager"]]],"meta":{"line":45,"file":"Balance.js","path":"src/classes/user"}}],"methods":[{"name":"currency","description":"Returns a factory with `get`, `getCurrency` (to get a currency info object), \r`set`, `add` and `subtract` methods to work with custom currencies.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["CurrencyFactory"]]],"description":"Currency management factory object."},"meta":{"line":55,"file":"Balance.js","path":"src/classes/user"}},{"name":"set","description":"Sets the money amount on user's balance.","params":[{"name":"amount","description":"Money amount","type":[[["number"]]]},{"name":"reason","description":"The reason why you set the money.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount"},"meta":{"line":100,"file":"Balance.js","path":"src/classes/user"}},{"name":"add","description":"Adds the money amount on user's balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"reason","description":"The reason why you add the money.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":110,"file":"Balance.js","path":"src/classes/user"}},{"name":"subtract","description":"Subtracts the money amount on user's balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"reason","description":"The reason why you subtract the money.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":120,"file":"Balance.js","path":"src/classes/user"}},{"name":"get","description":"Fetches the user's balance.","returns":{"types":[[["number"]]],"description":"User's balance."},"meta":{"line":128,"file":"Balance.js","path":"src/classes/user"}},{"name":"fetch","description":"Fetches the user's balance.\r\rThis method is an alias for 'Balance.get()' method","returns":{"types":[[["number"]]],"description":"User's balance."},"meta":{"line":138,"file":"Balance.js","path":"src/classes/user"}},{"name":"deposit","description":"Deposits the specified amount of money.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"reason","description":"The reason of the operation.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":148,"file":"Balance.js","path":"src/classes/user"}},{"name":"transfer","description":"Transfers the money to a specified user.","params":[{"name":"options","description":"Transfering options.","type":[[["UserTransferingOptions"]]]}],"returns":{"types":[[["TransferingResult"]]],"description":"Transfering result object."},"meta":{"line":157,"file":"Balance.js","path":"src/classes/user"}}],"meta":{"line":10,"file":"Balance.js","path":"src/classes/user"}},{"name":"Bank","description":"User bank balance class.","construct":{"name":"Bank","description":"User balance class.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":21,"file":"Bank.js","path":"src/classes/user"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":27,"file":"Bank.js","path":"src/classes/user"}},{"name":"_bank","description":"Balance Manager.","access":"private","type":[[["BankManager"]]],"meta":{"line":34,"file":"Bank.js","path":"src/classes/user"}}],"methods":[{"name":"set","description":"Sets the money amount on user's balance.","params":[{"name":"amount","description":"Money amount","type":[[["number"]]]},{"name":"reason","description":"The reason why you set the money.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount"},"meta":{"line":43,"file":"Bank.js","path":"src/classes/user"}},{"name":"add","description":"Adds the money amount on user's balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"reason","description":"The reason why you add the money.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":53,"file":"Bank.js","path":"src/classes/user"}},{"name":"subtract","description":"Subtracts the money amount on user's balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"reason","description":"The reason why you subtract the money.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":63,"file":"Bank.js","path":"src/classes/user"}},{"name":"get","description":"Fetches the user's balance.","returns":{"types":[[["number"]]],"description":"User's balance."},"meta":{"line":71,"file":"Bank.js","path":"src/classes/user"}},{"name":"withdraw","description":"Withdraws the specified amount of money.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"reason","description":"The reason of the operation.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":81,"file":"Bank.js","path":"src/classes/user"}},{"name":"fetch","description":"Fetches the user's balance.\r\rThis method is an alias for 'Balance.get()' method","returns":{"types":[[["number"]]],"description":"User's balance."},"meta":{"line":91,"file":"Bank.js","path":"src/classes/user"}}],"meta":{"line":6,"file":"Bank.js","path":"src/classes/user"}},{"name":"Cooldowns","construct":{"name":"Cooldowns","description":"Cooldowns class.","params":[{"name":"userObject","description":"User object from database.","type":[[["RawEconomyUser"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"guildID","description":"Guild ID.","access":"private","type":[[["string"]]],"meta":{"line":20,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"memberID","description":"Member ID.","access":"private","type":[[["string"]]],"meta":{"line":27,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]],"meta":{"line":33,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"_cooldowns","description":"Cooldowns object.","access":"private","type":[[["CooldownsObject"]]],"meta":{"line":40,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"_rewardCooldowns","description":"Cooldowns configuration object.","type":[[["RewardCooldowns"]]],"meta":{"line":52,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"_database","description":"Database Manager.","type":[[["DatabaseManager"]]],"meta":{"line":64,"file":"Cooldowns.js","path":"src/classes/user"}}],"methods":[{"name":"getCooldown","description":"Returns the cooldown of the specified type.","params":[{"name":"type","description":"Cooldown type.","type":[[["'daily","'"]],[["'work","'"]],[["'weekly","'"]],[["'monthly","'"]],[["'hourly","'"]]]}],"returns":{"types":[[["CooldownData"]]],"description":"Cooldown object."},"meta":{"line":72,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"getDaily","description":"Gets user's daily cooldown.","returns":{"types":[[["CooldownData"]]],"description":"User's daily cooldown."},"meta":{"line":81,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"getWork","description":"Gets user's work cooldown.","returns":{"types":[[["CooldownData"]]],"description":"User's work cooldown."},"meta":{"line":90,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"getWeekly","description":"Gets user's weekly cooldown.","returns":{"types":[[["CooldownData"]]],"description":"User's weekly cooldown."},"meta":{"line":99,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"getAll","description":"Gets all the user's cooldowns.","returns":{"types":[[["CooldownsObject"]]],"description":"User's cooldowns object."},"meta":{"line":108,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"clearAll","description":"Clears all the user's cooldowns.","returns":{"types":[[["boolean"]]],"description":"If all cooldowns were cleared successfully: true, else: false."},"meta":{"line":132,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"clearDaily","description":"Clears user's daily cooldown.","returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":151,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"clearWork","description":"Clears user's work cooldown.","returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":160,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"clearWeekly","description":"Clears user's weekly cooldown.","returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":169,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"clearMonthly","description":"Clears user's monthly cooldown.","returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":178,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"clearHourly","description":"Clears user's hourly cooldown.","returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":187,"file":"Cooldowns.js","path":"src/classes/user"}}],"meta":{"line":12,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"History","description":"User purchases history class.","extends":[[["BaseManager"]]],"construct":{"name":"History","description":"History constructor.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]}]},"props":[{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":31,"file":"History.js","path":"src/classes/user"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":37,"file":"History.js","path":"src/classes/user"}},{"name":"_fetcher","description":"Fetch Manager.","access":"private","type":[[["FetchManager"]]],"meta":{"line":44,"file":"History.js","path":"src/classes/user"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":51,"file":"History.js","path":"src/classes/user"}},{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":56,"file":"BaseManager.js","path":"src/managers"}},{"name":"baseConstructor","description":"A constructor (EconomyUser, ShopItem, etc.) to work with.","access":"private","type":[[["any"]]],"meta":{"line":82,"file":"BaseManager.js","path":"src/managers"}},{"name":"emptyBaseConstructor","description":"An empty constructor (EmptyEconomyUser, EmptyEconomyGuild, etc.) to replace the `undefined` value with.","access":"private","type":[[["any"]]],"meta":{"line":89,"file":"BaseManager.js","path":"src/managers"}},{"name":"length","description":"Amount of elements in database.","type":[[["number"]]],"meta":{"line":95,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Gets all the items in user's purchases history.\r\rThis method is an alias for `History.all()` method.","returns":{"types":[[["Array","<"],["HistoryItem",">"]]],"description":"User's history item."},"meta":{"line":60,"file":"History.js","path":"src/classes/user"}},{"name":"all","description":"Gets all the items in user's purchases history.","returns":{"types":[[["Array","<"],["HistoryItem",">"]]],"description":"User's purchases history."},"meta":{"line":68,"file":"History.js","path":"src/classes/user"}},{"name":"add","description":"Adds the item from the shop to the purchases history.","params":[{"name":"itemID","description":"Shop item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If added: true, else: false."},"meta":{"line":78,"file":"History.js","path":"src/classes/user"}},{"name":"remove","description":"Removes the specified item from purchases history.","params":[{"name":"id","description":"History item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":108,"file":"History.js","path":"src/classes/user"}},{"name":"delete","description":"Removes the specified item from purchases history.\r\rThis method is an alias for `History.remove()` method.","params":[{"name":"id","description":"History item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":137,"file":"History.js","path":"src/classes/user"}},{"name":"clear","description":"Clears the user's purchases history.","returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":145,"file":"History.js","path":"src/classes/user"}},{"name":"getItem","description":"Gets the item from user's purchases history.","params":[{"name":"id","description":"History item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["HistoryItem"]]],"description":"User's history item."},"meta":{"line":157,"file":"History.js","path":"src/classes/user"}},{"name":"findItem","description":"Gets the specified item from history.\r\rThis method is an alias for `History.getItem()` method.","params":[{"name":"id","description":"History item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["HistoryItem"]]],"description":"Purchases history item."},"meta":{"line":169,"file":"History.js","path":"src/classes/user"}},{"name":"first","description":"Gets the first element in specified guild.","inherits":"BaseManager#first","inherited":true,"returns":{"types":[[["any"]]],"description":"First database object."},"meta":{"line":102,"file":"BaseManager.js","path":"src/managers"}},{"name":"last","description":"Gets the last element in specified guild.","inherits":"BaseManager#last","inherited":true,"returns":{"types":[[["any"]]],"description":"Last database object."},"meta":{"line":151,"file":"BaseManager.js","path":"src/managers"}},{"name":"toArray","description":"Returns an array of elements in specified guild.","inherits":"BaseManager#toArray","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Array of elements in specified guild."},"meta":{"line":197,"file":"BaseManager.js","path":"src/managers"}},{"name":"find","description":"This method is the same as `Array.find()`.\r\rFinds the element in array and returns it.","inherits":"BaseManager#find","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["any"]]],"description":"Database object."},"meta":{"line":236,"file":"BaseManager.js","path":"src/managers"}},{"name":"at","description":"Gets the element at the specified index in the elements array.","inherits":"BaseManager#at","inherited":true,"params":[{"name":"index","description":"Index of the user.","type":[[["number"]]]}],"returns":{"types":[[["any"]]],"description":"Object at the specified index."},"meta":{"line":261,"file":"BaseManager.js","path":"src/managers"}},{"name":"findIndex","description":"This method is the same as `Array.findIndex()`.\r\rFinds the element's index in array and returns it.","inherits":"BaseManager#findIndex","inherited":true,"params":[{"name":"predicate","description":"Find calls predicate once for each element of the array, in ascending order,\runtil it finds one where predicate returns true.\rIf such an element is found, findIndex immediately returns that element index.\rOtherwise, findIndex returns -1.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["number"]]],"description":"Element index."},"meta":{"line":319,"file":"BaseManager.js","path":"src/managers"}},{"name":"includes","description":"This method is the same as `Array.includes()`.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#includes","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The position in this array at which to begin searching for searchElement.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":331,"file":"BaseManager.js","path":"src/managers"}},{"name":"has","description":"This method is the same as `Array.includes()`.\r\rThis method is an alias for `UserManager.includes()` method.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#has","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":347,"file":"BaseManager.js","path":"src/managers"}},{"name":"indexOf","description":"This method is the same as `Array.indexOf()`.","inherits":"BaseManager#indexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":360,"file":"BaseManager.js","path":"src/managers"}},{"name":"lastIndexOf","description":"This method is the same as `Array.lastIndexOf()`.","inherits":"BaseManager#lastIndexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin searching backward.\rIf fromIndex is omitted, the search starts at the last index in the array.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":373,"file":"BaseManager.js","path":"src/managers"}},{"name":"reverse","description":"This method is the same as `Array.reverse()`.\r\rReverses the array of all elements and returns it.","inherits":"BaseManager#reverse","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Reversed elements array."},"meta":{"line":383,"file":"BaseManager.js","path":"src/managers"}},{"name":"sort","description":"This method is the same as `Array.sort()`.\r\rSorts an array in place. This method mutates the array and returns a reference to the same array.","inherits":"BaseManager#sort","inherited":true,"params":[{"name":"compareFn","description":"Function used to determine the order of the elements.\rIt is expected to return a negative value if first argument is less than second argument,\rzero if they're equal and a positive value otherwise.\rIf omitted, the elements are sorted in ascending, ASCII character order.","optional":true,"type":[[["CompareFunction"]]]}],"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Sorted elements array."},"meta":{"line":398,"file":"BaseManager.js","path":"src/managers"}},{"name":"filter","description":"This method is the same as `Array.filter()`.\r\rFilters the array by specified condition and returns the array.","inherits":"BaseManager#filter","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["Array","<"],["any",">"]]],"meta":{"line":414,"file":"BaseManager.js","path":"src/managers"}},{"name":"map","description":"This method is the same as `Array.map()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#map","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":431,"file":"BaseManager.js","path":"src/managers"}},{"name":"forEach","description":"This method is the same as `Array.forEach()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#forEach","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":448,"file":"BaseManager.js","path":"src/managers"}},{"name":"some","description":"This method is the same as `Array.some()`.\r\rDetermines whether the specified callback function returns true for any element of an array.","inherits":"BaseManager#some","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe some method calls the predicate function for each element in the array\runtil the predicate returns a value which is coercible to the Boolean value true,\ror until the end of the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is any of the elements meets the specified condition."},"meta":{"line":466,"file":"BaseManager.js","path":"src/managers"}},{"name":"values","description":"Returns an iterable of values in the array.","inherits":"BaseManager#values","inherited":true,"returns":{"types":[[["IterableIterator","<"],["any",">"]]],"description":"An iterable of values in the array."},"meta":{"line":474,"file":"BaseManager.js","path":"src/managers"}},{"name":"toString","description":"Returns a string representation of an array.","inherits":"BaseManager#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"String representation of an array."},"meta":{"line":482,"file":"BaseManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":16,"file":"History.js","path":"src/classes/user"}},{"name":"Inventory","description":"User inventory class.","extends":[[["BaseManager"]]],"construct":{"name":"Inventory","description":"Inventory constructor.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":28,"file":"Inventory.js","path":"src/classes/user"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":34,"file":"Inventory.js","path":"src/classes/user"}},{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":41,"file":"Inventory.js","path":"src/classes/user"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":48,"file":"Inventory.js","path":"src/classes/user"}},{"name":"baseConstructor","description":"A constructor (EconomyUser, ShopItem, etc.) to work with.","access":"private","type":[[["any"]]],"meta":{"line":82,"file":"BaseManager.js","path":"src/managers"}},{"name":"emptyBaseConstructor","description":"An empty constructor (EmptyEconomyUser, EmptyEconomyGuild, etc.) to replace the `undefined` value with.","access":"private","type":[[["any"]]],"meta":{"line":89,"file":"BaseManager.js","path":"src/managers"}},{"name":"length","description":"Amount of elements in database.","type":[[["number"]]],"meta":{"line":95,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Gets the item from user's inventory.","params":[{"name":"itemID","description":"Item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["InventoryItem"]]],"description":"User's inventory item."},"meta":{"line":56,"file":"Inventory.js","path":"src/classes/user"}},{"name":"all","description":"Gets all the items in user's inventory.\r\rThis method is an alias for 'EconomyUser.inventory.fetch' nethod.","returns":{"types":[[["Array","<"],["InventoryItem",">"]]],"description":"User's inventory array."},"meta":{"line":66,"file":"Inventory.js","path":"src/classes/user"}},{"name":"use","description":"Uses the item: returns the item usage message and removes the item from user's inventory.","params":[{"name":"itemID","description":"Item ID.","type":[[["string"]],[["number"]]]},{"name":"client","description":"Discord Client. [Specify if the role will be given on a Discord server]","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["string"]]],"description":"Item message or null if item not found."},"meta":{"line":76,"file":"Inventory.js","path":"src/classes/user"}},{"name":"add","description":"Adds the item from the shop to user's inventory.","params":[{"name":"itemID","description":"Item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If added successfully: true, else: false."},"meta":{"line":162,"file":"Inventory.js","path":"src/classes/user"}},{"name":"removeItem","description":"Removes the item from user's inventory.","params":[{"name":"itemID","description":"Item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed successfully: true, else: false."},"meta":{"line":202,"file":"Inventory.js","path":"src/classes/user"}},{"name":"clear","description":"Clears the user's inventory.","returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":220,"file":"Inventory.js","path":"src/classes/user"}},{"name":"fetch","description":"Fetches the user's inventory.","returns":{"types":[[["Array","<"],["InventoryItem",">"]]],"description":"User's inventory array."},"meta":{"line":231,"file":"Inventory.js","path":"src/classes/user"}},{"name":"findItem","description":"Gets the item from user's inventory.\r\rThis method is an alias for 'EconomyUser.inventory.get()' method.","params":[{"name":"itemID","description":"Item ID.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["InventoryItem"]]],"description":"User's inventory item."},"meta":{"line":250,"file":"Inventory.js","path":"src/classes/user"}},{"name":"first","description":"Gets the first element in specified guild.","inherits":"BaseManager#first","inherited":true,"returns":{"types":[[["any"]]],"description":"First database object."},"meta":{"line":102,"file":"BaseManager.js","path":"src/managers"}},{"name":"last","description":"Gets the last element in specified guild.","inherits":"BaseManager#last","inherited":true,"returns":{"types":[[["any"]]],"description":"Last database object."},"meta":{"line":151,"file":"BaseManager.js","path":"src/managers"}},{"name":"toArray","description":"Returns an array of elements in specified guild.","inherits":"BaseManager#toArray","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Array of elements in specified guild."},"meta":{"line":197,"file":"BaseManager.js","path":"src/managers"}},{"name":"find","description":"This method is the same as `Array.find()`.\r\rFinds the element in array and returns it.","inherits":"BaseManager#find","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["any"]]],"description":"Database object."},"meta":{"line":236,"file":"BaseManager.js","path":"src/managers"}},{"name":"at","description":"Gets the element at the specified index in the elements array.","inherits":"BaseManager#at","inherited":true,"params":[{"name":"index","description":"Index of the user.","type":[[["number"]]]}],"returns":{"types":[[["any"]]],"description":"Object at the specified index."},"meta":{"line":261,"file":"BaseManager.js","path":"src/managers"}},{"name":"findIndex","description":"This method is the same as `Array.findIndex()`.\r\rFinds the element's index in array and returns it.","inherits":"BaseManager#findIndex","inherited":true,"params":[{"name":"predicate","description":"Find calls predicate once for each element of the array, in ascending order,\runtil it finds one where predicate returns true.\rIf such an element is found, findIndex immediately returns that element index.\rOtherwise, findIndex returns -1.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["number"]]],"description":"Element index."},"meta":{"line":319,"file":"BaseManager.js","path":"src/managers"}},{"name":"includes","description":"This method is the same as `Array.includes()`.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#includes","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The position in this array at which to begin searching for searchElement.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":331,"file":"BaseManager.js","path":"src/managers"}},{"name":"has","description":"This method is the same as `Array.includes()`.\r\rThis method is an alias for `UserManager.includes()` method.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#has","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":347,"file":"BaseManager.js","path":"src/managers"}},{"name":"indexOf","description":"This method is the same as `Array.indexOf()`.","inherits":"BaseManager#indexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":360,"file":"BaseManager.js","path":"src/managers"}},{"name":"lastIndexOf","description":"This method is the same as `Array.lastIndexOf()`.","inherits":"BaseManager#lastIndexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin searching backward.\rIf fromIndex is omitted, the search starts at the last index in the array.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":373,"file":"BaseManager.js","path":"src/managers"}},{"name":"reverse","description":"This method is the same as `Array.reverse()`.\r\rReverses the array of all elements and returns it.","inherits":"BaseManager#reverse","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Reversed elements array."},"meta":{"line":383,"file":"BaseManager.js","path":"src/managers"}},{"name":"sort","description":"This method is the same as `Array.sort()`.\r\rSorts an array in place. This method mutates the array and returns a reference to the same array.","inherits":"BaseManager#sort","inherited":true,"params":[{"name":"compareFn","description":"Function used to determine the order of the elements.\rIt is expected to return a negative value if first argument is less than second argument,\rzero if they're equal and a positive value otherwise.\rIf omitted, the elements are sorted in ascending, ASCII character order.","optional":true,"type":[[["CompareFunction"]]]}],"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Sorted elements array."},"meta":{"line":398,"file":"BaseManager.js","path":"src/managers"}},{"name":"filter","description":"This method is the same as `Array.filter()`.\r\rFilters the array by specified condition and returns the array.","inherits":"BaseManager#filter","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["Array","<"],["any",">"]]],"meta":{"line":414,"file":"BaseManager.js","path":"src/managers"}},{"name":"map","description":"This method is the same as `Array.map()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#map","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":431,"file":"BaseManager.js","path":"src/managers"}},{"name":"forEach","description":"This method is the same as `Array.forEach()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#forEach","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":448,"file":"BaseManager.js","path":"src/managers"}},{"name":"some","description":"This method is the same as `Array.some()`.\r\rDetermines whether the specified callback function returns true for any element of an array.","inherits":"BaseManager#some","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe some method calls the predicate function for each element in the array\runtil the predicate returns a value which is coercible to the Boolean value true,\ror until the end of the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is any of the elements meets the specified condition."},"meta":{"line":466,"file":"BaseManager.js","path":"src/managers"}},{"name":"values","description":"Returns an iterable of values in the array.","inherits":"BaseManager#values","inherited":true,"returns":{"types":[[["IterableIterator","<"],["any",">"]]],"description":"An iterable of values in the array."},"meta":{"line":474,"file":"BaseManager.js","path":"src/managers"}},{"name":"toString","description":"Returns a string representation of an array.","inherits":"BaseManager#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"String representation of an array."},"meta":{"line":482,"file":"BaseManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":12,"file":"Inventory.js","path":"src/classes/user"}},{"name":"Items","description":"User Items.","construct":{"name":"Items","description":"User Items.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"ecoOptions","description":"Economy configuratuion.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"memberID","description":"Member ID.","access":"private","type":[[["string"]]],"meta":{"line":23,"file":"Items.js","path":"src/classes/user"}},{"name":"guildID","description":"Guild ID.","access":"private","type":[[["string"]]],"meta":{"line":30,"file":"Items.js","path":"src/classes/user"}},{"name":"_shop","description":"Shop Manager.","access":"private","type":[[["ShopManager"]]],"meta":{"line":37,"file":"Items.js","path":"src/classes/user"}},{"name":"_inventory","description":"Inventory Manager.","access":"private","type":[[["InventoryManager"]]],"meta":{"line":44,"file":"Items.js","path":"src/classes/user"}}],"methods":[{"name":"buy","description":"Buys the item from the shop.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"quantity","description":"Quantity of items to buy. Default: 1.","optional":true,"default":1,"type":[[["number"]]]},{"name":"currency","description":"The currency to subtract the money from.\rCan be omitted by specifying 'null' or ignoring this parameter.\rRequires the `subtractOnBuy` option to be enabled. Default: null.","optional":true,"default":null,"type":[[["string"]],[["number"]]]},{"name":"reason","description":"The reason why the money was subtracted. Default: 'received the item from the shop'.","optional":true,"default":"'received the item from the shop'","type":[[["string"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Operation information object."},"meta":{"line":62,"file":"Items.js","path":"src/classes/user"}},{"name":"stack","description":"Returns the stacked item in user inventory: it will have the quantity and total price of the item.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["StackedInventoryItemObject"]]],"description":"Stacked item object."},"meta":{"line":71,"file":"Items.js","path":"src/classes/user"}},{"name":"add","description":"Adds the item from the shop to user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"quantity","description":"Quantity of items to add. Default: 1.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Operation information object."},"meta":{"line":81,"file":"Items.js","path":"src/classes/user"}},{"name":"get","description":"Gets the specified item from the user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["Array","<"],["InventoryData",">"]]],"description":"User's inventory array."},"meta":{"line":90,"file":"Items.js","path":"src/classes/user"}},{"name":"sell","description":"Sells the item from the user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"quantity","description":"Quantity of items to sell. Default: 1.","optional":true,"default":1,"type":[[["number"]]]},{"name":"reason","description":"The reason why the money was added. Default: 'sold the item to the shop'.","optional":true,"default":"'sold the item to the shop'","type":[[["string"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Selling operation info."},"meta":{"line":104,"file":"Items.js","path":"src/classes/user"}},{"name":"use","description":"Uses the item: returns the item usage message and removes the item from user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"client","description":"Discord Client. [Specify if the role will be given on a Discord server]","optional":true,"type":[[["Client"]]]}],"returns":{"types":[[["string"]]],"description":"Item message."},"meta":{"line":114,"file":"Items.js","path":"src/classes/user"}},{"name":"all","description":"Fetches the user's inventory.","returns":{"types":[[["Array","<"],["InventoryItem",">"]]],"description":"User's inventory array."},"meta":{"line":122,"file":"Items.js","path":"src/classes/user"}},{"name":"remove","description":"Removes the item from user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed successfully: true, else: false."},"meta":{"line":131,"file":"Items.js","path":"src/classes/user"}},{"name":"clear","description":"Clears the inventory.","returns":{"types":[[["boolean"]]],"description":"If cleared successfully: true, else: false."},"meta":{"line":139,"file":"Items.js","path":"src/classes/user"}},{"name":"delete","description":"Removes the item from user's inventory.\r\rThis method is an alias for 'Items.remove' method","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed successfully: true, else: false."},"meta":{"line":150,"file":"Items.js","path":"src/classes/user"}}],"meta":{"line":7,"file":"Items.js","path":"src/classes/user"}},{"name":"Rewards","description":"User rewards.","construct":{"name":"Rewards","description":"Rewards constructor.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":33,"file":"Rewards.js","path":"src/classes/user"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":39,"file":"Rewards.js","path":"src/classes/user"}},{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]],"meta":{"line":45,"file":"Rewards.js","path":"src/classes/user"}},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]],"meta":{"line":51,"file":"Rewards.js","path":"src/classes/user"}},{"name":"_rewards","description":"Rewards Manager.","access":"private","type":[[["RewardManager"]]],"meta":{"line":58,"file":"Rewards.js","path":"src/classes/user"}}],"methods":[{"name":"receive","description":"Adds a reward on user's balance.","params":[{"name":"reward","description":"Reward to give.","type":[[["RewardType"]]]},{"name":"reason","description":"The reason why the money was added.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Daily reward object."},"meta":{"line":67,"file":"Rewards.js","path":"src/classes/user"}},{"name":"getDaily","description":"Adds a daily reward on user's balance.","params":[{"name":"reason","description":"The reason why the money was added. Default: 'claimed the daily reward'","optional":true,"default":"'claimed the daily reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Reward object."},"meta":{"line":110,"file":"Rewards.js","path":"src/classes/user"}},{"name":"getWork","description":"Adds a work reward on user's balance.","params":[{"name":"reason","description":"The reason why the money was added. Default: 'claimed the work reward'","optional":true,"default":"'claimed the work reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Reward object."},"meta":{"line":122,"file":"Rewards.js","path":"src/classes/user"}},{"name":"getWeekly","description":"Adds a weekly reward on user's balance.","params":[{"name":"reason","description":"The reason why the money was added. Default: 'claimed the weekly reward'","optional":true,"default":"'claimed the weekly reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Reward object."},"meta":{"line":134,"file":"Rewards.js","path":"src/classes/user"}},{"name":"getMonthly","description":"Adds a monthly reward on user's balance.","params":[{"name":"reason","description":"The reason why the money was added. Default: 'claimed the monthly reward'","optional":true,"default":"'claimed the monthly reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Reward object."},"meta":{"line":146,"file":"Rewards.js","path":"src/classes/user"}},{"name":"getHourly","description":"Adds a hourly reward on user's balance.","params":[{"name":"reason","description":"The reason why the money was added. Default: 'claimed the hourly reward'","optional":true,"default":"'claimed the hourly reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Reward object."},"meta":{"line":158,"file":"Rewards.js","path":"src/classes/user"}}],"meta":{"line":18,"file":"Rewards.js","path":"src/classes/user"}},{"name":"DotParser","description":"Dot parser class.","access":"private","construct":{"name":"DotParser","description":"Economy configuration.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":25,"file":"DotParser.js","path":"src/classes/util"}},{"name":"fetcher","description":"Fetch manager methods class.","access":"private","type":[[["FetchManager"]]],"meta":{"line":32,"file":"DotParser.js","path":"src/classes/util"}}],"methods":[{"name":"parse","description":"Parses the key and fetches the value from database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["any"]],[["boolean"]]],"description":"The data from database or 'false' if failed to parse or 'null' if nothing found."},"meta":{"line":42,"file":"DotParser.js","path":"src/classes/util"}},{"name":"set","description":"Parses the key and sets the data in database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"value","description":"Any data to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If set successfully: true; else: false"},"meta":{"line":68,"file":"DotParser.js","path":"src/classes/util"}},{"name":"remove","description":"Parses the key and removes the data from database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed successfully: true; else: false"},"meta":{"line":104,"file":"DotParser.js","path":"src/classes/util"}},{"name":"isObject","description":"Checks for is the item object and returns it.","params":[{"name":"item","description":"The item to check.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the item object or not."},"meta":{"line":138,"file":"DotParser.js","path":"src/classes/util"}}],"meta":{"line":11,"file":"DotParser.js","path":"src/classes/util"}},{"name":"EconomyError","description":"EconomyError class.","extends":[[["Error"]]],"construct":{"name":"EconomyError","description":"Creates an 'EconomyError' instance.","params":[{"name":"errorMessage","description":"Error message.","type":[[["string"]],[["Error"]]]},{"name":"code","description":"Error code.","type":[[["'INVALID_TYPE","'"]],[["'UNKNOWN_ERROR","'"]],[["'PARAMETER_NOT_SPECIFIED","'"]],[["'OLD_NODE_VERSION","'"]],[["'ITEM_PROPERTY_INVALID","'"]],[["'INVALID_INPUT","'"]],[["'NO_DISCORD_CLIENT","'"]],[["'ROLE_NOT_FOUND","'"]],[["'PURCHASES_HISTORY_DISABLED","'"]],[["'SETTINGS_KEY_INVALID","'"]],[["'READONLY_PROPERTY","'"]],[["'INVALID_PROPERTY","'"]],[["'CURRENCY_NOT_FOUND","'"]],[["'INVALID_ERROR_CODE","'"]],[["'MODULE_NOT_READY","'"]],[["'STORAGE_FILE_ERROR","'"]]]}]},"props":[{"name":"code","description":"Error code.","type":[[["'INVALID_TYPE","'"]],[["'UNKNOWN_ERROR","'"]],[["'PARAMETER_NOT_SPECIFIED","'"]],[["'OLD_NODE_VERSION","'"]],[["'ITEM_PROPERTY_INVALID","'"]],[["'INVALID_INPUT","'"]],[["'NO_DISCORD_CLIENT","'"]],[["'ROLE_NOT_FOUND","'"]],[["'PURCHASES_HISTORY_DISABLED","'"]],[["'SETTINGS_KEY_INVALID","'"]],[["'READONLY_PROPERTY","'"]],[["'INVALID_PROPERTY","'"]],[["'CURRENCY_NOT_FOUND","'"]],[["'INVALID_ERROR_CODE","'"]],[["'MODULE_NOT_READY","'"]],[["'STORAGE_FILE_ERROR","'"]]],"meta":{"line":90,"file":"EconomyError.js","path":"src/classes/util"}},{"name":"name","description":"Error name.","type":[[["string"]]],"meta":{"line":96,"file":"EconomyError.js","path":"src/classes/util"}}],"meta":{"line":26,"file":"EconomyError.js","path":"src/classes/util"}},{"name":"Emitter","description":"Economy event emitter with only important emitter methods.","access":"private","construct":{"name":"Emitter","description":"Economy event emitter with only important emitter methods."},"methods":[{"name":"on","description":"Listens to the event.","params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":12,"file":"Emitter.js","path":"src/classes/util"}},{"name":"Logger","description":"Economy logger.","access":"private","construct":{"name":"Logger","description":"Logger constructor.","params":[{"name":"options","description":"Logger configuration.","type":[[["LoggerOptions"]]]}]},"props":[{"name":"options","description":"Logger configuration.","type":[[["LoggerOptions"]]],"meta":{"line":17,"file":"Logger.js","path":"src/classes/util"}},{"name":"colors","description":"Logger colors object.","type":[[["LoggerColors"]]],"meta":{"line":23,"file":"Logger.js","path":"src/classes/util"}}],"methods":[{"name":"info","description":"Sends an info message to the console.","params":[{"name":"message","description":"A message to send.","type":[[["string"]]]},{"name":"color","description":"Message color to use.","optional":true,"default":"'red'","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":51,"file":"Logger.js","path":"src/classes/util"}},{"name":"error","description":"Sends an error message to the console.","params":[{"name":"message","description":"A message to send.","type":[[["string"]]]},{"name":"color","description":"Message color to use.","optional":true,"default":"'red'","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":61,"file":"Logger.js","path":"src/classes/util"}},{"name":"debug","description":"Sends a debug message to the console.","params":[{"name":"message","description":"A message to send.","type":[[["string"]]]},{"name":"color","description":"Message color to use.","optional":true,"default":"'yellow'","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":71,"file":"Logger.js","path":"src/classes/util"}},{"name":"warn","description":"Sends a warning message to the console.","params":[{"name":"message","description":"A message to send.","type":[[["string"]]]},{"name":"color","description":"Message color to use.","optional":true,"default":"'lightyellow'","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":82,"file":"Logger.js","path":"src/classes/util"}},{"name":"optionalParamNotSpecified","description":"Sends a debug log for the optional parameter in method not specified.","params":[{"name":"method","description":"The method (e.g. \"ShopItem.use\") to set.","type":[[["string"]]]},{"name":"parameterName","description":"Parameter name to set.","type":[[["string"]]]},{"name":"defaultValue","description":"Default value to set.","type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":93,"file":"Logger.js","path":"src/classes/util"}}],"meta":{"line":5,"file":"Logger.js","path":"src/classes/util"}},{"name":"BalanceManager","description":"Balance manager methods class.","extends":[[["Emitter"]]],"construct":{"name":"BalanceManager","description":"Balance Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":35,"file":"BalanceManager.js","path":"src/managers"}},{"name":"fetcher","description":"Fetch manager.","access":"private","type":[[["FetchManager"]]],"meta":{"line":42,"file":"BalanceManager.js","path":"src/managers"}},{"name":"database","description":"Database manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":49,"file":"BalanceManager.js","path":"src/managers"}},{"name":"_currencies","description":"Currency Manager.","access":"private","type":[[["CurrencyManager"]]],"meta":{"line":56,"file":"BalanceManager.js","path":"src/managers"}}],"methods":[{"name":"currency","description":"Returns a factory with `get`, `getCurrency` (to get a currency info object), \r`set`, `add` and `subtract` methods to work with custom currencies.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["CurrencyFactory"]]],"description":"Currency management factory object."},"meta":{"line":68,"file":"BalanceManager.js","path":"src/managers"}},{"name":"fetch","description":"Fetches the user's balance.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"User's balance"},"meta":{"line":104,"file":"BalanceManager.js","path":"src/managers"}},{"name":"get","description":"Gets the user's balance.\r\rThis method is an alias of `BalanceManager.fetch()` method.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"User's balance"},"meta":{"line":124,"file":"BalanceManager.js","path":"src/managers"}},{"name":"set","description":"Sets the money amount on user's balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why you set the money.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":136,"file":"BalanceManager.js","path":"src/managers"}},{"name":"add","description":"Adds the money amount on user's balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why you add the money.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":173,"file":"BalanceManager.js","path":"src/managers"}},{"name":"subtract","description":"Subtracts the money amount on user's balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why you subreact the money.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":210,"file":"BalanceManager.js","path":"src/managers"}},{"name":"deposit","description":"Deposits the specified amount of money.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason of the operation.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":247,"file":"BalanceManager.js","path":"src/managers"}},{"name":"leaderboard","description":"Gets a balance leaderboard for specified guild.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["BalanceLeaderboard",">"]]],"description":"Sorted leaderboard array."},"meta":{"line":296,"file":"BalanceManager.js","path":"src/managers"}},{"name":"transfer","description":"Transfers the money to a specified user.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Transfering options.","type":[[["TransferingOptions"]]]}],"returns":{"types":[[["TransferingResult"]]],"description":"Transfering result object."},"meta":{"line":326,"file":"BalanceManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":18,"file":"BalanceManager.js","path":"src/managers"}},{"name":"BankManager","description":"Bank manager methods class.","extends":[[["Emitter"]]],"construct":{"name":"BankManager","description":"Bank Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":31,"file":"BankManager.js","path":"src/managers"}},{"name":"fetcher","description":"Fetch manager.","access":"private","type":[[["FetchManager"]]],"meta":{"line":38,"file":"BankManager.js","path":"src/managers"}},{"name":"database","description":"Database manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":45,"file":"BankManager.js","path":"src/managers"}}],"methods":[{"name":"fetch","description":"Fetches the user's bank balance.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"User's bank balance"},"meta":{"line":54,"file":"BankManager.js","path":"src/managers"}},{"name":"get","description":"Gets the user's bank balance.\r\rThis method is an alias of `BankManager.fetch()` method.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"User's bank balance"},"meta":{"line":74,"file":"BankManager.js","path":"src/managers"}},{"name":"set","description":"Sets the money amount on user's bank balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why you set the money.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":86,"file":"BankManager.js","path":"src/managers"}},{"name":"add","description":"Adds the money amount on user's bank balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why you add the money.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":123,"file":"BankManager.js","path":"src/managers"}},{"name":"subtract","description":"Subtracts the money amount on user's bank balance.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why you subtract the money.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":160,"file":"BankManager.js","path":"src/managers"}},{"name":"withdraw","description":"Withdraws the specified amount of money.","params":[{"name":"amount","description":"Money amount.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason of the operation.","optional":true,"default":null,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Money amount."},"meta":{"line":197,"file":"BankManager.js","path":"src/managers"}},{"name":"leaderboard","description":"Gets a balance leaderboard for specified server.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["BankLeaderboard",">"]]],"description":"Sorted leaderboard array."},"meta":{"line":246,"file":"BankManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":14,"file":"BankManager.js","path":"src/managers"}},{"name":"BaseManager","description":"The default manager with its default methods.\r\r[!] This manager cannot be used directly.\r\r[!] When extending this manager, make sure to have an `all()` method in your child class.\r\r[!] Make sure to specify your main item class (EconomyUser, ShopItem, etc.)\rin a second argument in super() for a manager to work with.","extends":[[["Emitter"]]],"construct":{"name":"BaseManager","description":"Base Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"constructor","description":"A constructor (EconomyUser, ShopItem, etc.) to work with.","type":[[["any"]]]},{"name":"emptyBaseConstructor","description":"An empty constructor (EmptyEconomyUser, EmptyEconomyGuild, etc.) to replace the `undefined` value with.","optional":true,"type":[[["any"]]]}],"examples":["const BaseManager = require('./BaseManager')\r\rconst DatabaseManager = require('./DatabaseManager')\rconst ShopItem = require('./ShopItem') // must be a class\r\rclass ShopManager extends BaseManager {\r   constructor(options, memberID, guildID) {\r      super(options, memberID, guildID, ShopItem)\r\r      this.guildID = guildID\r      this.database = new DatabaseManager(options)\r  }\r\r all() {\r     const shop = this.database.fetch(`${this.guildID}.shop`) || []\r     return shop.map(item => new ShopItem(this.guildID, item, this.database))\r  }\r}"]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":56,"file":"BaseManager.js","path":"src/managers"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":63,"file":"BaseManager.js","path":"src/managers"}},{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":69,"file":"BaseManager.js","path":"src/managers"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":75,"file":"BaseManager.js","path":"src/managers"}},{"name":"baseConstructor","description":"A constructor (EconomyUser, ShopItem, etc.) to work with.","access":"private","type":[[["any"]]],"meta":{"line":82,"file":"BaseManager.js","path":"src/managers"}},{"name":"emptyBaseConstructor","description":"An empty constructor (EmptyEconomyUser, EmptyEconomyGuild, etc.) to replace the `undefined` value with.","access":"private","type":[[["any"]]],"meta":{"line":89,"file":"BaseManager.js","path":"src/managers"}},{"name":"length","description":"Amount of elements in database.","type":[[["number"]]],"meta":{"line":95,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"first","description":"Gets the first element in specified guild.","returns":{"types":[[["any"]]],"description":"First database object."},"meta":{"line":102,"file":"BaseManager.js","path":"src/managers"}},{"name":"last","description":"Gets the last element in specified guild.","returns":{"types":[[["any"]]],"description":"Last database object."},"meta":{"line":151,"file":"BaseManager.js","path":"src/managers"}},{"name":"toArray","description":"Returns an array of elements in specified guild.","returns":{"types":[[["Array","<"],["any",">"]]],"description":"Array of elements in specified guild."},"meta":{"line":197,"file":"BaseManager.js","path":"src/managers"}},{"name":"find","description":"This method is the same as `Array.find()`.\r\rFinds the element in array and returns it.","params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["any"]]],"description":"Database object."},"meta":{"line":236,"file":"BaseManager.js","path":"src/managers"}},{"name":"at","description":"Gets the element at the specified index in the elements array.","params":[{"name":"index","description":"Index of the user.","type":[[["number"]]]}],"returns":{"types":[[["any"]]],"description":"Object at the specified index."},"meta":{"line":261,"file":"BaseManager.js","path":"src/managers"}},{"name":"findIndex","description":"This method is the same as `Array.findIndex()`.\r\rFinds the element's index in array and returns it.","params":[{"name":"predicate","description":"Find calls predicate once for each element of the array, in ascending order,\runtil it finds one where predicate returns true.\rIf such an element is found, findIndex immediately returns that element index.\rOtherwise, findIndex returns -1.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["number"]]],"description":"Element index."},"meta":{"line":319,"file":"BaseManager.js","path":"src/managers"}},{"name":"includes","description":"This method is the same as `Array.includes()`.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The position in this array at which to begin searching for searchElement.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":331,"file":"BaseManager.js","path":"src/managers"}},{"name":"has","description":"This method is the same as `Array.includes()`.\r\rThis method is an alias for `UserManager.includes()` method.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":347,"file":"BaseManager.js","path":"src/managers"}},{"name":"indexOf","description":"This method is the same as `Array.indexOf()`.","params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":360,"file":"BaseManager.js","path":"src/managers"}},{"name":"lastIndexOf","description":"This method is the same as `Array.lastIndexOf()`.","params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin searching backward.\rIf fromIndex is omitted, the search starts at the last index in the array.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":373,"file":"BaseManager.js","path":"src/managers"}},{"name":"reverse","description":"This method is the same as `Array.reverse()`.\r\rReverses the array of all elements and returns it.","returns":{"types":[[["Array","<"],["any",">"]]],"description":"Reversed elements array."},"meta":{"line":383,"file":"BaseManager.js","path":"src/managers"}},{"name":"sort","description":"This method is the same as `Array.sort()`.\r\rSorts an array in place. This method mutates the array and returns a reference to the same array.","params":[{"name":"compareFn","description":"Function used to determine the order of the elements.\rIt is expected to return a negative value if first argument is less than second argument,\rzero if they're equal and a positive value otherwise.\rIf omitted, the elements are sorted in ascending, ASCII character order.","optional":true,"type":[[["CompareFunction"]]]}],"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Sorted elements array."},"meta":{"line":398,"file":"BaseManager.js","path":"src/managers"}},{"name":"filter","description":"This method is the same as `Array.filter()`.\r\rFilters the array by specified condition and returns the array.","params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["Array","<"],["any",">"]]],"meta":{"line":414,"file":"BaseManager.js","path":"src/managers"}},{"name":"map","description":"This method is the same as `Array.map()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":431,"file":"BaseManager.js","path":"src/managers"}},{"name":"forEach","description":"This method is the same as `Array.forEach()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":448,"file":"BaseManager.js","path":"src/managers"}},{"name":"some","description":"This method is the same as `Array.some()`.\r\rDetermines whether the specified callback function returns true for any element of an array.","params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe some method calls the predicate function for each element in the array\runtil the predicate returns a value which is coercible to the Boolean value true,\ror until the end of the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is any of the elements meets the specified condition."},"meta":{"line":466,"file":"BaseManager.js","path":"src/managers"}},{"name":"values","description":"Returns an iterable of values in the array.","returns":{"types":[[["IterableIterator","<"],["any",">"]]],"description":"An iterable of values in the array."},"meta":{"line":474,"file":"BaseManager.js","path":"src/managers"}},{"name":"toString","description":"Returns a string representation of an array.","returns":{"types":[[["string"]]],"description":"String representation of an array."},"meta":{"line":482,"file":"BaseManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":36,"file":"BaseManager.js","path":"src/managers"}},{"name":"CooldownManager","description":"Cooldown manager methods class.","construct":{"name":"CooldownManager","description":"Cooldown Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]},{"name":"options.dailyCooldown","description":"Cooldown for Daily Reward (in ms). Default: 24 hours (60000 * 60 * 24 ms)","type":[[["number"]]]},{"name":"options.workCooldown","description":"Cooldown for Work Reward (in ms). Default: 1 hour (60000 * 60 ms)","type":[[["number"]]]},{"name":"options.dailyAmount","description":"Amount of money for Daily Reward. Default: 100.","type":[[["number"]]]},{"name":"options.weeklyCooldown","description":"Cooldown for Weekly Reward (in ms). Default: 7 days (60000 * 60 * 24 * 7 ms)","type":[[["number"]]]},{"name":"options.weeklyAmount","description":"Amount of money for Weekly Reward. Default: 1000.","type":[[["number"]]]},{"name":"options.workAmount","description":"Amount of money for Work Reward. Default: [10, 50].","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":34,"file":"CooldownManager.js","path":"src/managers"}},{"name":"database","description":"Database manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":41,"file":"CooldownManager.js","path":"src/managers"}}],"methods":[{"name":"getDaily","description":"Gets user's daily cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Cooldown end timestamp"},"meta":{"line":50,"file":"CooldownManager.js","path":"src/managers"}},{"name":"getWork","description":"Gets user's work cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Cooldown end timestamp"},"meta":{"line":69,"file":"CooldownManager.js","path":"src/managers"}},{"name":"getWeekly","description":"Gets user's daily cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Cooldown end timestamp"},"meta":{"line":88,"file":"CooldownManager.js","path":"src/managers"}},{"name":"getMonthly","description":"Gets user's monthly cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Promise","<"],["number",">"]]],"description":"Cooldown end timestamp"},"meta":{"line":107,"file":"CooldownManager.js","path":"src/managers"}},{"name":"getHourly","description":"Gets user's hourly cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Promise","<"],["number",">"]]],"description":"Cooldown end timestamp"},"meta":{"line":126,"file":"CooldownManager.js","path":"src/managers"}},{"name":"getAll","description":"Gets all the user's cooldowns.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["CooldownsTimeObject"]]],"description":"User's cooldowns object."},"meta":{"line":146,"file":"CooldownManager.js","path":"src/managers"}},{"name":"clearAll","description":"Clears all the user's cooldowns.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If all cooldowns were cleared successfully: true, else: false."},"meta":{"line":198,"file":"CooldownManager.js","path":"src/managers"}},{"name":"clearDaily","description":"Clears user's daily cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false"},"meta":{"line":228,"file":"CooldownManager.js","path":"src/managers"}},{"name":"clearWork","description":"Clears user's work cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false"},"meta":{"line":246,"file":"CooldownManager.js","path":"src/managers"}},{"name":"clearWeekly","description":"Clears user's weekly cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false"},"meta":{"line":264,"file":"CooldownManager.js","path":"src/managers"}},{"name":"clearMonthly","description":"Clears user's monthly cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false"},"meta":{"line":282,"file":"CooldownManager.js","path":"src/managers"}},{"name":"clearHourly","description":"Clears user's hourly cooldown.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false"},"meta":{"line":300,"file":"CooldownManager.js","path":"src/managers"}}],"meta":{"line":11,"file":"CooldownManager.js","path":"src/managers"}},{"name":"CurrencyManager","description":"Currency manager methods class.","extends":[[["Emitter"]]],"construct":{"name":"CurrencyManager","description":"Currency Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":29,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"database","description":"Database manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":36,"file":"CurrencyManager.js","path":"src/managers"}}],"methods":[{"name":"find","description":"Finds the info for the specified currency.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Currency"]]],"description":"Currency object."},"meta":{"line":45,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"get","description":"Finds the info for the specified currency.\r\rThis method is an alias for `CurrencyManager.find()` method.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Currency"]]],"description":"Currency object."},"meta":{"line":90,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"edit","description":"Edits the currency object.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"property","description":"Currency property to edit.","type":[[["'name","'"]],[["'symbol","'"]],[["'custom","'"]]]},{"name":"value","description":"Any value to set.","type":[[["any"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Currency"]]],"description":"Edited currency object."},"meta":{"line":102,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"setCustom","description":"Edits the currency's custom data object.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"customObject","description":"Custom data object to set.","type":[[["object"]]]}],"returns":{"types":[[["Currency"]]],"description":"Currency object with its updated custom property."},"meta":{"line":150,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"getBalance","description":"Gets the specified currency balance for specified member.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Guild ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Currency balance for specified member."},"meta":{"line":162,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"setBalance","description":"Sets the currecy balance for speciied member.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"amount","description":"Amount of money to set.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was set.","optional":true,"type":[[["string"]]]},{"name":"emitSet","description":"If true, `customCurrencySet` event will be emitted on set. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":{"types":[[["number"]]],"description":"Amount of money that was set."},"meta":{"line":183,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"addBalance","description":"Adds the currecy balance for speciied member.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"amount","description":"Amount of money to add.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was added.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Amount of money that was add."},"meta":{"line":243,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"subtractBalance","description":"Subtracts the currecy balance for speciied member.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"amount","description":"Amount of money to subtract.","type":[[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was subtracted.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Amount of money that was subtracted."},"meta":{"line":271,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"create","description":"Creates a currency object in database.","params":[{"name":"name","description":"Currency name to set.","type":[[["string"]]]},{"name":"symbol","description":"Currency symbol to set.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Currency"]]],"description":"Currency object."},"meta":{"line":297,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"delete","description":"Deletes the currency object and all its balances in a specified guild.","params":[{"name":"currencyID","description":"Currency ID, its name or its symbol.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Currency"]]],"description":"Deleted currency object."},"meta":{"line":332,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"clear","description":"Clears the currencies array for specified guild.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":354,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"all","description":"Gets the array of available currencies for specified guild.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["Currency",">"]]],"description":"Currencies array."},"meta":{"line":370,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":14,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"DatabaseManager","description":"Database manager methods class.","construct":{"name":"DatabaseManager","description":"Database Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]}]},"props":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]],"meta":{"line":27,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"logger","description":"Economy Logger.","type":[[["Logger"]]],"meta":{"line":33,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"fetcher","description":"Fetch manager methods class.","access":"private","type":[[["FetchManager"]]],"meta":{"line":40,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"storagePath","description":"Full path to a JSON file.","access":"private","type":[[["string"]]],"meta":{"line":47,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"parser","description":"Dot parser methods class.","access":"private","type":[[["DotParser"]]],"meta":{"line":54,"file":"DatabaseManager.js","path":"src/managers"}}],"methods":[{"name":"keysList","description":"Gets a list of keys in database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["string",">"]]],"description":"An array with all keys in database or 'null' if nothing found."},"meta":{"line":64,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"set","description":"Sets data in a property in database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"value","description":"Any data to set in property.","type":[[["any"]]]},{"name":"debug","description":"If true, debug log will be sent.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":{"types":[[["boolean"]]],"description":"If set successfully: true; else: false"},"meta":{"line":82,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"add","description":"Adds a number to a property data in database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"value","description":"Any number to add.","type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If added successfully: true; else: false"},"meta":{"line":105,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"subtract","description":"Subtracts a number from a property data in database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"value","description":"Any number to subtract.","type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If set successfully: true; else: false"},"meta":{"line":139,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"fetch","description":"Fetches the data from the storage file.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["any"]]],"description":"Value from the specified key or 'false' if failed to read or 'null' if nothing found."},"meta":{"line":172,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"get","description":"Fetches the data from the storage file.\r\rThis method is an alias for 'DatabaseManager.fetch()' method.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["any"]]],"description":"Value from the specified key or 'false' if failed to read or 'null' if nothing found."},"meta":{"line":188,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"find","description":"Fetches the data from the storage file.\r\rThis method is an alias for the `DatabaseManager.fetch()` method.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["any"]]],"description":"Value from the specified key or 'false' if failed to read or 'null' if nothing found."},"meta":{"line":199,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"remove","description":"Removes the property from the existing object in database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":208,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"delete","description":"Removes the property from the existing object in database.\r\rThis method is an alias for `DatabaseManager.remove()` method.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":231,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"push","description":"Pushes a value to a specified array from the database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"value","description":"Any value to push.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":241,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"pop","description":"Removes an element from a specified array in the database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"index","description":"The index in the array.","type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":271,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"clear","description":"Clears the whole database.","returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":298,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"deleteAll","description":"Clears the whole database.\r\rThis method is an alias for `DatabaseManager.clear()` method.","returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":320,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"removeElement","description":"Removes an element from a specified array in the database.\r\rThis method is an alias for `DatabaseManager.pop()` method.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"index","description":"The index in the array.","type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":332,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"pull","description":"Changes the specified element's value in a specified array in the database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"index","description":"The index in the array.","type":[[["number"]]]},{"name":"newValue","description":"The new value to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":343,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"changeElement","description":"Changes the specified element's value in a specified array in the database.\r\rThis method is an alias for `DatabaseManager.pull()` method.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]},{"name":"index","description":"The index in the array.","type":[[["number"]]]},{"name":"newValue","description":"The new value to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true; else: false."},"meta":{"line":386,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"has","description":"Checks if the element is existing in database.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If existing: true; else: false."},"meta":{"line":395,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"includes","description":"Checks if the element is existing in database.\r\rThis method is an alias for `DatabaseManager.has()` method.","params":[{"name":"key","description":"The key in database.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If existing: true; else: false."},"meta":{"line":406,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"all","description":"Fetches the entire database.","returns":{"types":[[["object"]]],"description":"Database contents"},"meta":{"line":414,"file":"DatabaseManager.js","path":"src/managers"}}],"meta":{"line":13,"file":"DatabaseManager.js","path":"src/managers"}},{"name":"FetchManager","description":"Fetch manager methods class.","construct":{"name":"FetchManager","description":"Fetch Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database Manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":28,"file":"FetchManager.js","path":"src/managers"}},{"name":"storagePath","description":"Full path to a JSON file.","access":"private","type":[[["string"]]],"meta":{"line":35,"file":"FetchManager.js","path":"src/managers"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":42,"file":"FetchManager.js","path":"src/managers"}}],"methods":[{"name":"fetchAll","description":"Fetches the entire database.","returns":{"types":[[["object"]]],"description":"Database contents"},"meta":{"line":49,"file":"FetchManager.js","path":"src/managers"}},{"name":"fetchBalance","description":"Fetches the user's balance.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"User's balance."},"meta":{"line":66,"file":"FetchManager.js","path":"src/managers"}},{"name":"fetchBank","description":"Fetches the user's bank balance.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"User's bank balance."},"meta":{"line":90,"file":"FetchManager.js","path":"src/managers"}},{"name":"fetchInventory","description":"Fetches the user's inventory.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["InventoryItem",">"]]],"description":"User's inventory."},"meta":{"line":114,"file":"FetchManager.js","path":"src/managers"}},{"name":"fetchHistory","description":"Fetches the user's purchases history.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["HistoryItem",">"]]],"description":"User's purchases history."},"meta":{"line":138,"file":"FetchManager.js","path":"src/managers"}},{"name":"fetchCooldowns","description":"Fetches the user's cooldowns.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["CooldownData"]]],"description":"User's cooldowns object."},"meta":{"line":162,"file":"FetchManager.js","path":"src/managers"}},{"name":"fetchShop","description":"Shows all items in the shop.","params":[{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["ShopItem",">"]]],"description":"The shop array."},"meta":{"line":196,"file":"FetchManager.js","path":"src/managers"}}],"meta":{"line":14,"file":"FetchManager.js","path":"src/managers"}},{"name":"GuildManager","description":"User manager methods class.","extends":[[["BaseManager"]]],"construct":{"name":"GuildManager","description":"Guild Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":33,"file":"GuildManager.js","path":"src/managers"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":40,"file":"GuildManager.js","path":"src/managers"}},{"name":"_users","description":"User Manager.","access":"private","type":[[["UserManager"]]],"meta":{"line":47,"file":"GuildManager.js","path":"src/managers"}},{"name":"utils","description":"Utils Manager.","access":"private","type":[[["UtilsManager"]]],"meta":{"line":54,"file":"GuildManager.js","path":"src/managers"}},{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":69,"file":"BaseManager.js","path":"src/managers"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":75,"file":"BaseManager.js","path":"src/managers"}},{"name":"baseConstructor","description":"A constructor (EconomyUser, ShopItem, etc.) to work with.","access":"private","type":[[["any"]]],"meta":{"line":82,"file":"BaseManager.js","path":"src/managers"}},{"name":"emptyBaseConstructor","description":"An empty constructor (EmptyEconomyUser, EmptyEconomyGuild, etc.) to replace the `undefined` value with.","access":"private","type":[[["any"]]],"meta":{"line":89,"file":"BaseManager.js","path":"src/managers"}},{"name":"length","description":"Amount of elements in database.","type":[[["number"]]],"meta":{"line":95,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Gets the guild by it's ID.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["EconomyGuild"]]],"description":"Guild object."},"meta":{"line":62,"file":"GuildManager.js","path":"src/managers"}},{"name":"create","description":"Creates an economy guild object in database.","params":[{"name":"guildID","description":"The guild ID to set.","type":[[["string"]]]}],"returns":{"types":[[["EconomyGuild"]]],"description":"New guild instance."},"meta":{"line":74,"file":"GuildManager.js","path":"src/managers"}},{"name":"reset","description":"Resets the guild in database.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["EconomyGuild"]]],"description":"New guild instance."},"meta":{"line":83,"file":"GuildManager.js","path":"src/managers"}},{"name":"all","description":"Gets the array of ALL guilds in database.","returns":[[["Array","<"],["EconomyGuild",">"]]],"meta":{"line":99,"file":"GuildManager.js","path":"src/managers"}},{"name":"first","description":"Gets the first element in specified guild.","inherits":"BaseManager#first","inherited":true,"returns":{"types":[[["any"]]],"description":"First database object."},"meta":{"line":102,"file":"BaseManager.js","path":"src/managers"}},{"name":"last","description":"Gets the last element in specified guild.","inherits":"BaseManager#last","inherited":true,"returns":{"types":[[["any"]]],"description":"Last database object."},"meta":{"line":151,"file":"BaseManager.js","path":"src/managers"}},{"name":"toArray","description":"Returns an array of elements in specified guild.","inherits":"BaseManager#toArray","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Array of elements in specified guild."},"meta":{"line":197,"file":"BaseManager.js","path":"src/managers"}},{"name":"find","description":"This method is the same as `Array.find()`.\r\rFinds the element in array and returns it.","inherits":"BaseManager#find","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["any"]]],"description":"Database object."},"meta":{"line":236,"file":"BaseManager.js","path":"src/managers"}},{"name":"at","description":"Gets the element at the specified index in the elements array.","inherits":"BaseManager#at","inherited":true,"params":[{"name":"index","description":"Index of the user.","type":[[["number"]]]}],"returns":{"types":[[["any"]]],"description":"Object at the specified index."},"meta":{"line":261,"file":"BaseManager.js","path":"src/managers"}},{"name":"findIndex","description":"This method is the same as `Array.findIndex()`.\r\rFinds the element's index in array and returns it.","inherits":"BaseManager#findIndex","inherited":true,"params":[{"name":"predicate","description":"Find calls predicate once for each element of the array, in ascending order,\runtil it finds one where predicate returns true.\rIf such an element is found, findIndex immediately returns that element index.\rOtherwise, findIndex returns -1.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["number"]]],"description":"Element index."},"meta":{"line":319,"file":"BaseManager.js","path":"src/managers"}},{"name":"includes","description":"This method is the same as `Array.includes()`.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#includes","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The position in this array at which to begin searching for searchElement.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":331,"file":"BaseManager.js","path":"src/managers"}},{"name":"has","description":"This method is the same as `Array.includes()`.\r\rThis method is an alias for `UserManager.includes()` method.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#has","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":347,"file":"BaseManager.js","path":"src/managers"}},{"name":"indexOf","description":"This method is the same as `Array.indexOf()`.","inherits":"BaseManager#indexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":360,"file":"BaseManager.js","path":"src/managers"}},{"name":"lastIndexOf","description":"This method is the same as `Array.lastIndexOf()`.","inherits":"BaseManager#lastIndexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin searching backward.\rIf fromIndex is omitted, the search starts at the last index in the array.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":373,"file":"BaseManager.js","path":"src/managers"}},{"name":"reverse","description":"This method is the same as `Array.reverse()`.\r\rReverses the array of all elements and returns it.","inherits":"BaseManager#reverse","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Reversed elements array."},"meta":{"line":383,"file":"BaseManager.js","path":"src/managers"}},{"name":"sort","description":"This method is the same as `Array.sort()`.\r\rSorts an array in place. This method mutates the array and returns a reference to the same array.","inherits":"BaseManager#sort","inherited":true,"params":[{"name":"compareFn","description":"Function used to determine the order of the elements.\rIt is expected to return a negative value if first argument is less than second argument,\rzero if they're equal and a positive value otherwise.\rIf omitted, the elements are sorted in ascending, ASCII character order.","optional":true,"type":[[["CompareFunction"]]]}],"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Sorted elements array."},"meta":{"line":398,"file":"BaseManager.js","path":"src/managers"}},{"name":"filter","description":"This method is the same as `Array.filter()`.\r\rFilters the array by specified condition and returns the array.","inherits":"BaseManager#filter","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["Array","<"],["any",">"]]],"meta":{"line":414,"file":"BaseManager.js","path":"src/managers"}},{"name":"map","description":"This method is the same as `Array.map()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#map","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":431,"file":"BaseManager.js","path":"src/managers"}},{"name":"forEach","description":"This method is the same as `Array.forEach()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#forEach","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":448,"file":"BaseManager.js","path":"src/managers"}},{"name":"some","description":"This method is the same as `Array.some()`.\r\rDetermines whether the specified callback function returns true for any element of an array.","inherits":"BaseManager#some","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe some method calls the predicate function for each element in the array\runtil the predicate returns a value which is coercible to the Boolean value true,\ror until the end of the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is any of the elements meets the specified condition."},"meta":{"line":466,"file":"BaseManager.js","path":"src/managers"}},{"name":"values","description":"Returns an iterable of values in the array.","inherits":"BaseManager#values","inherited":true,"returns":{"types":[[["IterableIterator","<"],["any",">"]]],"description":"An iterable of values in the array."},"meta":{"line":474,"file":"BaseManager.js","path":"src/managers"}},{"name":"toString","description":"Returns a string representation of an array.","inherits":"BaseManager#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"String representation of an array."},"meta":{"line":482,"file":"BaseManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":18,"file":"GuildManager.js","path":"src/managers"}},{"name":"HistoryManager","description":"History manager methods class.","construct":{"name":"HistoryManager","description":"History Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]},{"name":"options.dateLocale","description":"The region (example: 'ru' or 'en') to format date and time. Default: 'en'.","type":[[["string"]]]},{"name":"options.savePurchasesHistory","description":"If true, the module will save all the purchases history.","type":[[["boolean"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":26,"file":"HistoryManager.js","path":"src/managers"}},{"name":"storagePath","description":"Full path to a JSON file.","access":"private","type":[[["string"]]],"meta":{"line":33,"file":"HistoryManager.js","path":"src/managers"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":40,"file":"HistoryManager.js","path":"src/managers"}}],"methods":[{"name":"fetch","description":"Shows the user's purchases history.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["HistoryItem",">"]]],"description":"User's purchases history."},"meta":{"line":49,"file":"HistoryManager.js","path":"src/managers"}},{"name":"get","description":"Shows the user's purchases history.\r\rThis method is an alias for `HistoryManager.fetch()` method.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["HistoryItem",">"]]],"description":"User's purchases history."},"meta":{"line":78,"file":"HistoryManager.js","path":"src/managers"}},{"name":"clear","description":"Clears the user's purchases history.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":88,"file":"HistoryManager.js","path":"src/managers"}},{"name":"add","description":"Adds the item from the shop to the purchases history.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of the item.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If added: true, else: false."},"meta":{"line":111,"file":"HistoryManager.js","path":"src/managers"}},{"name":"remove","description":"Removes the specified item from purchases history.","params":[{"name":"id","description":"History item ID.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":164,"file":"HistoryManager.js","path":"src/managers"}},{"name":"findItem","description":"Gets the specified item from history.","params":[{"name":"id","description":"History item ID.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["HistoryItem"]]],"description":"Purchases history item."},"meta":{"line":201,"file":"HistoryManager.js","path":"src/managers"}},{"name":"getItem","description":"Gets the specified item from history.\r\rThis method is an alias for `HistoryManager.findItem()` method.","params":[{"name":"id","description":"History item ID.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["HistoryItem"]]],"description":"Purchases history item."},"meta":{"line":230,"file":"HistoryManager.js","path":"src/managers"}}],"meta":{"line":9,"file":"HistoryManager.js","path":"src/managers"}},{"name":"InventoryManager","description":"Inventory manager methods class.","extends":[[["Emitter"]]],"construct":{"name":"InventoryManager","description":"Inventory Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.dateLocale","description":"The region (example: 'ru' or 'en') to format date and time. Default: 'en'.","type":[[["string"]]]},{"name":"options.subtractOnBuy","description":"If true, when someone buys the item, their balance will subtract by item price.","type":[[["boolean"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","nullable":true,"type":[[["EconomyConfiguration"]]],"meta":{"line":34,"file":"InventoryManager.js","path":"src/managers"}},{"name":"database","description":"Database manager methods class.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":41,"file":"InventoryManager.js","path":"src/managers"}},{"name":"fetcher","description":"Fetch Manager.","access":"private","type":[[["FetchManager"]]],"meta":{"line":48,"file":"InventoryManager.js","path":"src/managers"}},{"name":"balance","description":"Balance manager methods class.","access":"private","type":[[["BalanceManager"]]],"meta":{"line":55,"file":"InventoryManager.js","path":"src/managers"}}],"methods":[{"name":"clear","description":"Clears the user's inventory.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":64,"file":"InventoryManager.js","path":"src/managers"}},{"name":"getItem","description":"Gets the item in the inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["InventoryItem"]]],"description":"If item not found: null; else: item info object."},"meta":{"line":87,"file":"InventoryManager.js","path":"src/managers"}},{"name":"findItem","description":"Gets the item in the inventory.\r\rThis method is an alias for the `InventoryManager.getItem()` method.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["InventoryItem"]]],"description":"If item not found: null; else: item info object."},"meta":{"line":120,"file":"InventoryManager.js","path":"src/managers"}},{"name":"fetch","description":"Fetches the user's inventory.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["InventoryItem",">"]]],"description":"User's inventory array."},"meta":{"line":130,"file":"InventoryManager.js","path":"src/managers"}},{"name":"get","description":"Fetches the user's inventory.\r\rThis method is an alias for the `InventoryManager.fetch()` method.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["InventoryItem",">"]]],"description":"User's inventory array."},"meta":{"line":154,"file":"InventoryManager.js","path":"src/managers"}},{"name":"useItem","description":"Uses the item: returns the item usage message and removes the item from user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"client","description":"Discord Client. [Specify if the role will be given on a Discord server]","optional":true,"type":[[["Client"]]]}],"returns":{"types":[[["string"]]],"description":"Item message."},"meta":{"line":166,"file":"InventoryManager.js","path":"src/managers"}},{"name":"use","description":"Uses the item: returns the item usage message and removes the item from user's inventory.\r\rThis method is an alias for the `InventoryManager.useItem()` method.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"client","description":"The Discord Client. [Specify if the role will be given on a Discord server].","optional":true,"type":[[["Client"]]]}],"returns":{"types":[[["string"]]],"description":"Item message."},"meta":{"line":265,"file":"InventoryManager.js","path":"src/managers"}},{"name":"stacked","description":"Returns the stacked user's inventory -\ran array of objects of item's quantity, total price and the item itself from user's inventory\rfor each unique item.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["StackedInventoryItemObject",">"]]],"description":"Stacked user's inventory."},"meta":{"line":277,"file":"InventoryManager.js","path":"src/managers"}},{"name":"stack","description":"Returns the stacked item in user inventory: it will have the quantity and total price of the item.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["StackedInventoryItemObject"]]],"description":"Stacked item object."},"meta":{"line":303,"file":"InventoryManager.js","path":"src/managers"}},{"name":"removeItem","description":"Removes the item from user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of items to remove.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed successfully: true, else: false."},"meta":{"line":318,"file":"InventoryManager.js","path":"src/managers"}},{"name":"addItem","description":"Adds the item from the shop to user's inventory.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of items to add. Default: 1.","optional":true,"default":1,"type":[[["number"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"If added successfully: true, else: false."},"meta":{"line":369,"file":"InventoryManager.js","path":"src/managers"}},{"name":"sellItem","description":"Removes the item from user's inventory\rand adds its price to the user's balance.\rThis is the same as selling something.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of items to sell.","optional":true,"default":1,"type":[[["number"]]]},{"name":"reason","description":"The reason why the item was sold.","optional":true,"default":"'sold the item from the inventory'","type":[[["string"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Selling operation info."},"meta":{"line":454,"file":"InventoryManager.js","path":"src/managers"}},{"name":"sell","description":"Removes the item from user's inventory\rand adds its price to the user's balance.\rThis is the same as selling something.\r\rThis method is an alias for 'InventoryManager.sellItem()' method.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of items to sell.","optional":true,"default":1,"type":[[["number"]]]},{"name":"reason","description":"The reason why the item was sold.","optional":true,"default":"'sold the item from the inventory'","type":[[["string"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Selling operation info."},"meta":{"line":536,"file":"InventoryManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":16,"file":"InventoryManager.js","path":"src/managers"}},{"name":"RewardManager","description":"Reward manager methods class.","construct":{"name":"RewardManager","description":"Reward Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]},{"name":"options.dailyCooldown","description":"Cooldown for Daily Reward (in ms). Default: 24 hours (60000 * 60 * 24 ms)","type":[[["number"]]]},{"name":"options.workCooldown","description":"Cooldown for Work Reward (in ms). Default: 1 hour (60000 * 60 ms)","type":[[["number"]]]},{"name":"options.dailyAmount","description":"Amount of money for Daily Reward. Default: 100.","type":[[["number"]]]},{"name":"options.weeklyCooldown","description":"Cooldown for Weekly Reward (in ms). Default: 7 days (60000 * 60 * 24 * 7 ms)","type":[[["number"]]]},{"name":"options.weeklyAmount","description":"Amount of money for Weekly Reward. Default: 1000.","type":[[["number"]]]},{"name":"options.workAmount","description":"Amount of money for Work Reward. Default: [10, 50].","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":45,"file":"RewardManager.js","path":"src/managers"}},{"name":"database","description":"Database manager methods class.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":52,"file":"RewardManager.js","path":"src/managers"}},{"name":"cooldowns","description":"Cooldown manager methods class.","access":"private","type":[[["CooldownManager"]]],"meta":{"line":59,"file":"RewardManager.js","path":"src/managers"}},{"name":"balance","description":"Balance manager methods class.","access":"private","type":[[["BalanceManager"]]],"meta":{"line":66,"file":"RewardManager.js","path":"src/managers"}}],"methods":[{"name":"receive","description":"Adds a reward on user's balance.","params":[{"name":"reward","description":"Reward to give.","type":[[["RewardType"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was added.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Daily reward object."},"meta":{"line":77,"file":"RewardManager.js","path":"src/managers"}},{"name":"getDaily","description":"Adds a daily reward on user's balance.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was added. Default: 'claimed the daily reward'.","optional":true,"default":"'claimed the daily reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Daily reward object."},"meta":{"line":130,"file":"RewardManager.js","path":"src/managers"}},{"name":"getWork","description":"Adds a work reward on user's balance.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was added. Default: 'claimed the work reward'.","optional":true,"default":"'claimed the work reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Work reward object."},"meta":{"line":198,"file":"RewardManager.js","path":"src/managers"}},{"name":"getWeekly","description":"Adds a weekly reward on user's balance.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was added. Default: 'claimed the weekly reward'.","optional":true,"default":"'claimed the weekly reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Weekly reward object."},"meta":{"line":265,"file":"RewardManager.js","path":"src/managers"}},{"name":"getMonthly","description":"Adds a monthly reward on user's balance.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was added. Default: 'claimed the monthly reward'.","optional":true,"default":"'claimed the monthly reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Monthly reward object."},"meta":{"line":332,"file":"RewardManager.js","path":"src/managers"}},{"name":"getHourly","description":"Adds a hourly reward on user's balance.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"reason","description":"The reason why the money was added. Default: 'claimed the hourly reward'.","optional":true,"default":"'claimed the hourly reward'","type":[[["string"]]]}],"returns":{"types":[[["RewardData"]]],"description":"Hourly reward object."},"meta":{"line":399,"file":"RewardManager.js","path":"src/managers"}}],"meta":{"line":23,"file":"RewardManager.js","path":"src/managers"}},{"name":"SettingsManager","description":"Settings manager class.","construct":{"name":"SettingsManager","description":"Settings Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":135,"file":"SettingsManager.js","path":"src/managers"}},{"name":"database","description":"Database manager methods class.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":142,"file":"SettingsManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Gets the specified setting from the database.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\rconfiguration or default configuration.","params":[{"name":"key","description":"The setting to fetch.","type":[[["Settings"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["any"]]],"description":"The setting from the database."},"meta":{"line":156,"file":"SettingsManager.js","path":"src/managers"}},{"name":"set","description":"Changes the specified setting.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\rspecified configuration or default configuration.","params":[{"name":"key","description":"The setting to change.","type":[[["Settings"]]]},{"name":"value","description":"The value to set.","type":[[["any"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":183,"file":"SettingsManager.js","path":"src/managers"}},{"name":"delete","description":"Deletes the specified setting.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\rspecified configuration or default configuration.","params":[{"name":"key","description":"The setting to delete.","type":[[["Settings"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":217,"file":"SettingsManager.js","path":"src/managers"}},{"name":"remove","description":"Deletes the specified setting.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\rspecified configuration or default configuration.\r\rThis method is an alias for `SettingsManager.delete()` method.","params":[{"name":"key","description":"The setting to delete.","type":[[["Settings"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":247,"file":"SettingsManager.js","path":"src/managers"}},{"name":"all","description":"Fetches all the server's settings object.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":256,"file":"SettingsManager.js","path":"src/managers"}},{"name":"reset","description":"Resets all the settings to setting that are in configuration.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["SettingsTypes"]]],"description":"The server settings object."},"meta":{"line":292,"file":"SettingsManager.js","path":"src/managers"}}],"meta":{"line":121,"file":"SettingsManager.js","path":"src/managers"}},{"name":"ShopManager","description":"Shop manager methods class.","extends":[[["Emitter"]]],"construct":{"name":"ShopManager","description":"Shop Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"options.storagePath","description":"Full path to a JSON file. Default: './storage.json'.","type":[[["string"]]]},{"name":"options.dateLocale","description":"The region (example: 'ru' or 'en') to format date and time. Default: 'en'.","type":[[["string"]]]},{"name":"options.subtractOnBuy","description":"If true, when someone buys the item, their balance will subtract by item price.","type":[[["boolean"]]]},{"name":"options.deprecationWarnings","description":"If true, the deprecation warnings will be sent in the console.","type":[[["boolean"]]]},{"name":"options.savePurchasesHistory","description":"If true, the module will save all the purchases history.","type":[[["boolean"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","nullable":true,"type":[[["EconomyConfiguration"]]],"meta":{"line":38,"file":"ShopManager.js","path":"src/managers"}},{"name":"database","description":"Database manager methods class.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":45,"file":"ShopManager.js","path":"src/managers"}},{"name":"currencies","description":"Currency Manager.","type":[[["CurrencyManager"]]],"meta":{"line":51,"file":"ShopManager.js","path":"src/managers"}}],"methods":[{"name":"addItem","description":"Creates an item in shop.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Configuration with item info.","type":[[["AddItemOptions"]]]}],"returns":{"types":[[["ShopItem"]]],"description":"Item info."},"meta":{"line":60,"file":"ShopManager.js","path":"src/managers"}},{"name":"add","description":"Creates an item in shop.\r\rThis method is an alias for the `ShopManager.addItem()` method.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"options","description":"Configuration with item info.","type":[[["AddItemOptions"]]]}],"returns":{"types":[[["ShopItem"]]],"description":"Item info."},"meta":{"line":148,"file":"ShopManager.js","path":"src/managers"}},{"name":"editItem","description":"Edits the item in the shop.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]},{"name":"itemProperty","description":"This argument means what thing in item you want to edit (item property).\rAvailable item properties are 'description', 'price', 'name', 'message', 'amount', 'role', 'custom'.","type":[[["'description","'"]],[["'price","'"]],[["'name","'"]],[["'message","'"]],[["'maxAmount","'"]],[["'role","'"]],[["'custom","'"]]]},{"name":"value","description":"Any value to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If edited successfully: true, else: false."},"meta":{"line":163,"file":"ShopManager.js","path":"src/managers"}},{"name":"edit","description":"Edits the item in the shop.\r\rThis method is an alias for the `ShopManager.editItem()` method.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]},{"name":"itemProperty","description":"This argument means what thing in item you want to edit (item property).\rAvailable item properties are 'description', 'price', 'name', 'message', 'amount', 'role', 'custom'.","type":[[["'description","'"]],[["'price","'"]],[["'name","'"]],[["'message","'"]],[["'maxAmount","'"]],[["'role","'"]],[["'custom","'"]]]},{"name":"value","description":"Any value to set.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If edited successfully: true, else: false."},"meta":{"line":246,"file":"ShopManager.js","path":"src/managers"}},{"name":"setCustom","description":"Sets a custom object for the item.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"customObject","description":"Custom item data object.","type":[[["object"]]]}],"returns":{"types":[[["boolean"]]],"description":"If set successfully: true, else: false."},"meta":{"line":257,"file":"ShopManager.js","path":"src/managers"}},{"name":"removeItem","description":"Removes an item from the shop.","params":[{"name":"itemID","description":"Item ID or name .","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If removed: true, else: false."},"meta":{"line":267,"file":"ShopManager.js","path":"src/managers"}},{"name":"clear","description":"Clears the shop.","params":[{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":307,"file":"ShopManager.js","path":"src/managers"}},{"name":"clearInventory","description":"Clears the user's inventory.\r\r[!!!] This method is deprecated.\rIf you want to get all the bugfixes and\ruse the newest inventory features, please\rswitch to the usage of the new InventoryManager.\r\r[!!!] No help will be provided for inventory\rrelated methods in ShopManager.","deprecated":true,"params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":340,"file":"ShopManager.js","path":"src/managers"}},{"name":"fetch","description":"Shows all items in the shop.","params":[{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["ShopItem",">"]]],"description":"The shop array."},"meta":{"line":373,"file":"ShopManager.js","path":"src/managers"}},{"name":"get","description":"Shows all items in the shop.\r\rThis method is an alias for the `ShopManager.fetch()` method.","params":[{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["ShopItem",">"]]],"description":"The shop array."},"meta":{"line":389,"file":"ShopManager.js","path":"src/managers"}},{"name":"all","description":"Shows all items in the shop.\r\rThis method is an alias for the `ShopManager.get()` method.","params":[{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["ShopItem",">"]]],"description":"The shop array."},"meta":{"line":400,"file":"ShopManager.js","path":"src/managers"}},{"name":"getItem","description":"Gets the item in the shop.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["ShopItem"]]],"description":"If item not found: null; else: item info object."},"meta":{"line":410,"file":"ShopManager.js","path":"src/managers"}},{"name":"findItem","description":"Gets the item in the shop.\r\rThis method is an alias for the `ShopManager.getItem()` method.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["ShopItem"]]],"description":"If item not found: null; else: item info object."},"meta":{"line":438,"file":"ShopManager.js","path":"src/managers"}},{"name":"searchInventoryItem","description":"Gets the item in the inventory.\r\r[!!!] This method is deprecated.\rIf you want to get all the bugfixes and\ruse the newest inventory features, please\rswitch to the usage of the new InventoryManager.\r\r[!!!] No help will be provided for inventory\rrelated methods in ShopManager.","deprecated":true,"params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["InventoryData"]]],"description":"If item not found: null; else: item info object."},"meta":{"line":458,"file":"ShopManager.js","path":"src/managers"}},{"name":"buy","description":"Buys the item from the shop.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of items to buy. Default: 1.","optional":true,"default":1,"type":[[["number"]]]},{"name":"currency","description":"The currency to subtract the money from.\rCan be omitted by specifying 'null' or ignoring this parameter.\rRequires the `subtractOnBuy` option to be enabled. Default: null.","optional":true,"default":null,"type":[[["string"]],[["number"]]]},{"name":"reason","description":"The reason why the money was subtracted. Default: 'received the item from the shop'.","optional":true,"default":"'received the item from the shop'","type":[[["string"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Operation information object."},"meta":{"line":509,"file":"ShopManager.js","path":"src/managers"}},{"name":"buyItem","description":"Buys the item from the shop.\r\rThis method is an alias for the `ShopManager.buy()` method.","params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"quantity","description":"Quantity of items to buy. Default: 1.","optional":true,"default":1,"type":[[["number"]]]},{"name":"currency","description":"The currency to subtract the money from.\rCan be omitted by specifying 'null' or ignoring this parameter.\rRequires the `subtractOnBuy` option to be enabled. Default: null.","optional":true,"default":null,"type":[[["string"]],[["number"]]]},{"name":"reason","description":"The reason why the money was subtracted. Default: 'received the item from the shop'.","optional":true,"default":"'received the item from the shop'","type":[[["string"]]]}],"returns":{"types":[[["ShopOperationInfo"]]],"description":"Operation information object."},"meta":{"line":667,"file":"ShopManager.js","path":"src/managers"}},{"name":"inventory","description":"Shows all items in user's inventory.\r\r[!!!] This method is deprecated.\rIf you want to get all the bugfixes and\ruse the newest inventory features, please\rswitch to the usage of the new InventoryManager.\r\r[!!!] No help will be provided for inventory\rrelated methods in ShopManager.","deprecated":true,"params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["InventoryData",">"]]],"description":"User's inventory array."},"meta":{"line":686,"file":"ShopManager.js","path":"src/managers"}},{"name":"useItem","description":"Uses the item: returns the item usage message and removes the item from user's inventory.\r\r[!!!] This method is deprecated.\rIf you want to get all the bugfixes and\ruse the newest inventory features, please\rswitch to the usage of the new InventoryManager.\r\r[!!!] No help will be provided for inventory\rrelated methods in ShopManager.","deprecated":true,"params":[{"name":"itemID","description":"Item ID or name.","type":[[["string"]],[["number"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"client","description":"Discord Client. [Specify if the role will be given on a Discord server]","type":[[["Client"]]]}],"returns":{"types":[[["string"]],[["boolean"]]],"description":"Item message or null if item not found."},"meta":{"line":728,"file":"ShopManager.js","path":"src/managers"}},{"name":"history","description":"Shows the user's purchase history.\r\r[!!!] This method is deprecated.\rIf you want to get all the bugfixes and\ruse the newest history features, please\rswitch to the usage of the new HistoryManager.\r\r[!!!] No help will be provided for history\rrelated methods in ShopManager.","deprecated":true,"params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["Array","<"],["HistoryData",">"]]],"description":"User's purchase history."},"meta":{"line":845,"file":"ShopManager.js","path":"src/managers"}},{"name":"clearHistory","description":"Clears the user's purchases history.\r\r[!!!] This method is deprecated.\rIf you want to get all the bugfixes and\ruse the newest history features, please\rswitch to the usage of the new HistoryManager.\r\r[!!!] No help will be provided for history\rrelated methods in ShopManager.","deprecated":true,"params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared: true, else: false."},"meta":{"line":889,"file":"ShopManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":15,"file":"ShopManager.js","path":"src/managers"}},{"name":"UserManager","description":"User manager methods class.","extends":[[["BaseManager"]]],"construct":{"name":"UserManager","description":"User Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["EconomyConfiguration"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","type":[[["EconomyConfiguration"]]],"meta":{"line":29,"file":"UserManager.js","path":"src/managers"}},{"name":"database","description":"Database Manager.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":36,"file":"UserManager.js","path":"src/managers"}},{"name":"memberID","description":"Member ID.","type":[[["string"]]],"meta":{"line":69,"file":"BaseManager.js","path":"src/managers"}},{"name":"guildID","description":"Guild ID.","type":[[["string"]]],"meta":{"line":75,"file":"BaseManager.js","path":"src/managers"}},{"name":"baseConstructor","description":"A constructor (EconomyUser, ShopItem, etc.) to work with.","access":"private","type":[[["any"]]],"meta":{"line":82,"file":"BaseManager.js","path":"src/managers"}},{"name":"emptyBaseConstructor","description":"An empty constructor (EmptyEconomyUser, EmptyEconomyGuild, etc.) to replace the `undefined` value with.","access":"private","type":[[["any"]]],"meta":{"line":89,"file":"BaseManager.js","path":"src/managers"}},{"name":"length","description":"Amount of elements in database.","type":[[["number"]]],"meta":{"line":95,"file":"BaseManager.js","path":"src/managers"}}],"methods":[{"name":"get","description":"Gets the user by it's ID and guild ID.","params":[{"name":"userID","description":"User ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["EconomyUser"]]],"description":"User object."},"meta":{"line":45,"file":"UserManager.js","path":"src/managers"}},{"name":"create","description":"Creates an economy user object in database.","params":[{"name":"memberID","description":"The user ID to set.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["EconomyUser"]]],"description":"Economy user object."},"meta":{"line":58,"file":"UserManager.js","path":"src/managers"}},{"name":"reset","description":"Sets the default user object for a specified member.","params":[{"name":"userID","description":"User ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["EconomyUser"]]],"description":"If reset successfully: true; else: false."},"meta":{"line":79,"file":"UserManager.js","path":"src/managers"}},{"name":"all","description":"Gets the array of ALL users in database.","returns":[[["Array","<"],["EconomyUser",">"]]],"meta":{"line":87,"file":"UserManager.js","path":"src/managers"}},{"name":"first","description":"Gets the first element in specified guild.","inherits":"BaseManager#first","inherited":true,"returns":{"types":[[["any"]]],"description":"First database object."},"meta":{"line":102,"file":"BaseManager.js","path":"src/managers"}},{"name":"last","description":"Gets the last element in specified guild.","inherits":"BaseManager#last","inherited":true,"returns":{"types":[[["any"]]],"description":"Last database object."},"meta":{"line":151,"file":"BaseManager.js","path":"src/managers"}},{"name":"toArray","description":"Returns an array of elements in specified guild.","inherits":"BaseManager#toArray","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Array of elements in specified guild."},"meta":{"line":197,"file":"BaseManager.js","path":"src/managers"}},{"name":"find","description":"This method is the same as `Array.find()`.\r\rFinds the element in array and returns it.","inherits":"BaseManager#find","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["any"]]],"description":"Database object."},"meta":{"line":236,"file":"BaseManager.js","path":"src/managers"}},{"name":"at","description":"Gets the element at the specified index in the elements array.","inherits":"BaseManager#at","inherited":true,"params":[{"name":"index","description":"Index of the user.","type":[[["number"]]]}],"returns":{"types":[[["any"]]],"description":"Object at the specified index."},"meta":{"line":261,"file":"BaseManager.js","path":"src/managers"}},{"name":"findIndex","description":"This method is the same as `Array.findIndex()`.\r\rFinds the element's index in array and returns it.","inherits":"BaseManager#findIndex","inherited":true,"params":[{"name":"predicate","description":"Find calls predicate once for each element of the array, in ascending order,\runtil it finds one where predicate returns true.\rIf such an element is found, findIndex immediately returns that element index.\rOtherwise, findIndex returns -1.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["number"]]],"description":"Element index."},"meta":{"line":319,"file":"BaseManager.js","path":"src/managers"}},{"name":"includes","description":"This method is the same as `Array.includes()`.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#includes","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The position in this array at which to begin searching for searchElement.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":331,"file":"BaseManager.js","path":"src/managers"}},{"name":"has","description":"This method is the same as `Array.includes()`.\r\rThis method is an alias for `UserManager.includes()` method.\r\rDetermines whether an array includes a certain element, returning true or false as appropriate.","inherits":"BaseManager#has","inherited":true,"params":[{"name":"searchElement","description":"The element to search for.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is the specified element included or not."},"meta":{"line":347,"file":"BaseManager.js","path":"src/managers"}},{"name":"indexOf","description":"This method is the same as `Array.indexOf()`.","inherits":"BaseManager#indexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin the search.\rIf fromIndex is omitted, the search starts at index 0.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":360,"file":"BaseManager.js","path":"src/managers"}},{"name":"lastIndexOf","description":"This method is the same as `Array.lastIndexOf()`.","inherits":"BaseManager#lastIndexOf","inherited":true,"params":[{"name":"searchElement","description":"The value to locate in the array.","type":[[["any"]]]},{"name":"fromIndex","description":"The array index at which to begin searching backward.\rIf fromIndex is omitted, the search starts at the last index in the array.","optional":true,"type":[[["number"]]]}],"returns":{"types":[[["number"]]],"description":"Element index in the array."},"meta":{"line":373,"file":"BaseManager.js","path":"src/managers"}},{"name":"reverse","description":"This method is the same as `Array.reverse()`.\r\rReverses the array of all elements and returns it.","inherits":"BaseManager#reverse","inherited":true,"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Reversed elements array."},"meta":{"line":383,"file":"BaseManager.js","path":"src/managers"}},{"name":"sort","description":"This method is the same as `Array.sort()`.\r\rSorts an array in place. This method mutates the array and returns a reference to the same array.","inherits":"BaseManager#sort","inherited":true,"params":[{"name":"compareFn","description":"Function used to determine the order of the elements.\rIt is expected to return a negative value if first argument is less than second argument,\rzero if they're equal and a positive value otherwise.\rIf omitted, the elements are sorted in ascending, ASCII character order.","optional":true,"type":[[["CompareFunction"]]]}],"returns":{"types":[[["Array","<"],["any",">"]]],"description":"Sorted elements array."},"meta":{"line":398,"file":"BaseManager.js","path":"src/managers"}},{"name":"filter","description":"This method is the same as `Array.filter()`.\r\rFilters the array by specified condition and returns the array.","inherits":"BaseManager#filter","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe filter method calls the predicate function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["Array","<"],["any",">"]]],"meta":{"line":414,"file":"BaseManager.js","path":"src/managers"}},{"name":"map","description":"This method is the same as `Array.map()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#map","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["any"]]],"meta":{"line":431,"file":"BaseManager.js","path":"src/managers"}},{"name":"forEach","description":"This method is the same as `Array.forEach()`.\r\rCalls a defined callback function on each element of an array,\rand returns an array that contains the results.","inherits":"BaseManager#forEach","inherited":true,"params":[{"name":"callbackfn","description":"A function that accepts up to three arguments.\rThe map method calls the callbackfn function one time for each element in the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":[[["void"]]],"meta":{"line":448,"file":"BaseManager.js","path":"src/managers"}},{"name":"some","description":"This method is the same as `Array.some()`.\r\rDetermines whether the specified callback function returns true for any element of an array.","inherits":"BaseManager#some","inherited":true,"params":[{"name":"predicate","description":"A function that accepts up to three arguments.\rThe some method calls the predicate function for each element in the array\runtil the predicate returns a value which is coercible to the Boolean value true,\ror until the end of the array.","type":[[["PredicateFunction"]]]},{"name":"thisArg","description":"An object to which the this keyword can refer in the callbackfn function.\rIf thisArg is omitted, undefined is used as the this value.","optional":true,"type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"Is any of the elements meets the specified condition."},"meta":{"line":466,"file":"BaseManager.js","path":"src/managers"}},{"name":"values","description":"Returns an iterable of values in the array.","inherits":"BaseManager#values","inherited":true,"returns":{"types":[[["IterableIterator","<"],["any",">"]]],"description":"An iterable of values in the array."},"meta":{"line":474,"file":"BaseManager.js","path":"src/managers"}},{"name":"toString","description":"Returns a string representation of an array.","inherits":"BaseManager#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"String representation of an array."},"meta":{"line":482,"file":"BaseManager.js","path":"src/managers"}},{"name":"on","description":"Listens to the event.","inherits":"Emitter#on","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":26,"file":"Emitter.js","path":"src/classes/util"}},{"name":"once","description":"Listens to the event only for once.","inherits":"Emitter#once","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"listener","description":"Callback function.","type":[[["function"]]]}],"returns":{"types":[[["Emitter"]]],"description":"Economy Emitter."},"meta":{"line":37,"file":"Emitter.js","path":"src/classes/util"}},{"name":"emit","description":"Emits the event.","inherits":"Emitter#emit","inherited":true,"params":[{"name":"event","description":"Event name.","type":[[["EconomyEvents"]]]},{"name":"data","description":"Any data to send.","type":[[["any"]]]}],"returns":{"types":[[["boolean"]]],"description":"If emitted: true; else: false."},"meta":{"line":48,"file":"Emitter.js","path":"src/classes/util"}}],"meta":{"line":14,"file":"UserManager.js","path":"src/managers"}},{"name":"UtilsManager","description":"Utils manager methods class.","construct":{"name":"UtilsManager","description":"Utils Manager.","params":[{"name":"options","description":"Economy configuration.","type":[[["object"]]]},{"name":"database","description":"Database manager.","type":[[["DatabaseManager"]]]}]},"props":[{"name":"options","description":"Economy configuration.","access":"private","nullable":true,"type":[[["EconomyConfiguration"]]],"meta":{"line":56,"file":"UtilsManager.js","path":"src/managers"}},{"name":"_logger","description":"Economy Logger.","access":"private","type":[[["Logger"]]],"meta":{"line":63,"file":"UtilsManager.js","path":"src/managers"}},{"name":"database","description":"Database manager methods class.","access":"private","type":[[["DatabaseManager"]]],"meta":{"line":70,"file":"UtilsManager.js","path":"src/managers"}}],"methods":[{"name":"checkUpdates","description":"Checks for the module updates.","async":true,"returns":{"types":[[["Promise","<"],["VersionData",">"]]],"description":"Is the module updated, latest version and installed version."},"meta":{"line":77,"file":"UtilsManager.js","path":"src/managers"}},{"name":"all","description":"Fetches the entire database.","returns":{"types":[[["any"]]],"description":"Database contents"},"meta":{"line":100,"file":"UtilsManager.js","path":"src/managers"}},{"name":"clearDatabase","description":"Clears the database.","returns":{"types":[[["boolean"]]],"description":"If cleared successfully: true."},"meta":{"line":108,"file":"UtilsManager.js","path":"src/managers"}},{"name":"removeGuild","description":"Fully removes the guild from database.","params":[{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared successfully: true; else: false"},"meta":{"line":123,"file":"UtilsManager.js","path":"src/managers"}},{"name":"removeUser","description":"Removes the user from database.","params":[{"name":"memberID","description":"Member ID","type":[[["string"]]]},{"name":"guildID","description":"Guild ID","type":[[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"If cleared successfully: true; else: false"},"meta":{"line":139,"file":"UtilsManager.js","path":"src/managers"}},{"name":"resetUser","description":"Sets the default user object for the specified member.","params":[{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"returns":{"types":[[["EconomyUser"]]],"description":"If reset successfully: new user object."},"meta":{"line":157,"file":"UtilsManager.js","path":"src/managers"}},{"name":"checkConfiguration","description":"Checks the Economy configuration, fixes the problems and returns it.","params":[{"name":"options","description":"Option checker options.","type":[[["CheckerConfiguration"]]]},{"name":"ecoOptions","description":"Economy configuration to check.","type":[[["EconomyConfiguration"]]]}],"returns":{"types":[[["EconomyConfiguration"]]],"description":"Fixed Economy configuration."},"meta":{"line":179,"file":"UtilsManager.js","path":"src/managers"}}],"meta":{"line":42,"file":"UtilsManager.js","path":"src/managers"}}],"interfaces":[],"typedefs":[{"name":"EconomyConfiguration","description":"Default Economy configuration.","type":[[["object"]]],"props":[{"name":"dailyCooldown","description":"Cooldown for Daily Reward (in ms). Default: 24 hours (60000 * 60 * 24 ms)","optional":true,"default":86400000,"type":[[["number"]]]},{"name":"workCooldown","description":"Cooldown for Work Reward (in ms). Default: 1 hour (60000 * 60 ms)","optional":true,"default":3600000,"type":[[["number"]]]},{"name":"dailyAmount","description":"Amount of money for Daily Reward. Default: 100.","optional":true,"default":100,"type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"weeklyCooldown","description":"Cooldown for Weekly Reward (in ms). Default: 7 days (60000 * 60 * 24 * 7 ms)","optional":true,"default":604800000,"type":[[["number"]]]},{"name":"weeklyAmount","description":"Amount of money for Weekly Reward. Default: 1000.","optional":true,"default":100,"type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"workAmount","description":"Amount of money for Work Reward. Default: [10, 50].","optional":true,"default":"[10, 50]","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"monthlyAmount","description":"Amount of money for Monthly Reward. Default: 10000.","optional":true,"default":10000,"type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"monthlyCooldown","description":"Cooldown for Weekly Reward (in ms). Default: 1 month (2629746000 ms).","optional":true,"default":2629746000,"type":[[["number"]]]},{"name":"hourlyAmount","description":"Amount of money for Hourly Reward. Default: 20.","optional":true,"default":20,"type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"hourlyCooldown","description":"Cooldown for Hourly Reward (in ms). Default: 1 hour (3600000 ms).","optional":true,"default":3600000,"type":[[["number"]]]},{"name":"subtractOnBuy","description":"If true, when someone buys the item, their balance will subtract by item price. Default: false","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"sellingItemPercent","description":"Percent of the item's price it will be sold for. Default: 75.","optional":true,"default":75,"type":[[["number"]]]},{"name":"deprecationWarnings","description":"If true, the deprecation warnings will be sent in the console. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"savePurchasesHistory","description":"If true, the module will save all the purchases history.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"dateLocale","description":"The region (example: 'ru'; 'en') to format the date and time. Default: 'en'.","optional":true,"default":"'en'","type":[[["string"]]]},{"name":"updater","description":"Update checker configuration.","optional":true,"default":"UpdaterOptions","type":[[["UpdaterOptions"]]]},{"name":"errorHandler","description":"Error handler configuration.","optional":true,"default":"ErrorHandlerConfiguration","type":[[["ErrorHandlerConfiguration"]]]},{"name":"optionsChecker","description":"Configuration for an 'Economy.utils.checkConfiguration' method.","optional":true,"default":"CheckerConfiguration","type":[[["CheckerConfiguration"]]]},{"name":"debug","description":"Enables or disables the debug mode.","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":384,"file":"UtilsManager.js","path":"src/managers"}},{"name":"UpdaterOptions","description":"Update checker configuration.","type":[[["object"]]],"props":[{"name":"checkUpdates","description":"Sends the update state message in console on start. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"upToDateMessage","description":"Sends the message in console on start if module is up to date. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":423,"file":"UtilsManager.js","path":"src/managers"}},{"name":"ErrorHandlerConfiguration","type":[[["object"]]],"props":[{"name":"handleErrors","description":"Handles all errors on startup. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"attempts","description":"Amount of attempts to load the module. Use 0 for infinity attempts. Default: 5.","optional":true,"default":5,"type":[[["number"]]]},{"name":"time","description":"Time between every attempt to start the module (in ms). Default: 3000.","optional":true,"default":3000,"type":[[["number"]]]}],"meta":{"line":430,"file":"UtilsManager.js","path":"src/managers"}},{"name":"CheckerConfiguration","description":"Configuration for an 'Economy.utils.checkConfiguration' method.","type":[[["object"]]],"props":[{"name":"ignoreInvalidTypes","description":"Allows the method to ignore the options with invalid types. Default: false.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"ignoreUnspecifiedOptions","description":"Allows the method to ignore the unspecified options. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreInvalidOptions","description":"Allows the method to ignore the unexisting options. Default: false.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"showProblems","description":"Allows the method to show all the problems in the console. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"sendLog","description":"Allows the method to send the result in the console.\rRequires the 'showProblems' or 'sendLog' options to set. Default: true.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"sendSuccessLog","description":"Allows the method to send the result if no problems were found. Default: false.","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":437,"file":"UtilsManager.js","path":"src/managers"}},{"name":"LoggerColors","type":[[["object"]]],"props":[{"name":"red","description":"Red color.","type":[[["string"]]]},{"name":"green","description":"Green color.","type":[[["string"]]]},{"name":"yellow","description":"Yellow color.","type":[[["string"]]]},{"name":"blue","description":"Blue color.","type":[[["string"]]]},{"name":"magenta","description":"Magenta color.","type":[[["string"]]]},{"name":"cyan","description":"Cyan color.","type":[[["string"]]]},{"name":"white","description":"White color.","type":[[["string"]]]},{"name":"reset","description":"Reset color.","type":[[["string"]]]},{"name":"black","description":"Black color.","type":[[["string"]]]},{"name":"lightgray","description":"Light gray color.","type":[[["string"]]]},{"name":"darkgray","description":"Dark gray color.","type":[[["string"]]]},{"name":"lightred","description":"Light red color.","type":[[["string"]]]},{"name":"lightgreen","description":"Light green color.","type":[[["string"]]]},{"name":"lightyellow","description":"Light yellow color.","type":[[["string"]]]},{"name":"lightblue","description":"Light blue color.","type":[[["string"]]]},{"name":"lightmagenta","description":"Light magenta color.","type":[[["string"]]]},{"name":"lightcyan","description":"Light cyan color.","type":[[["string"]]]}],"meta":{"line":114,"file":"Logger.js","path":"src/classes/util"}},{"name":"Manager","type":[[["object"]]],"props":[{"name":"name","description":"The manager's short name.","type":[[["string"]]]},{"name":"manager","description":"The manager class.","type":[[["function"]]]}],"meta":{"line":895,"file":"index.js","path":"src"}},{"name":"CurrencyObject","type":[[["Object"]]],"props":[{"name":"id","description":"Currency ID.","type":[[["number"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"name","description":"Currency name.","type":[[["string"]]]},{"name":"symbol","description":"Currency symbol.","optional":true,"type":[[["string"]]]},{"name":"balances","description":"Currency balances object.","type":[[["object"]]]},{"name":"custom","description":"Custom currency data object.","type":[[["object"]]]}],"meta":{"line":387,"file":"CurrencyManager.js","path":"src/managers"}},{"name":"TransferingResult","type":[[["Object"]]],"props":[{"name":"success","description":"Whether the transfer was successful or not.","type":[[["boolean"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]},{"name":"amount","description":"Amount of money that was sent.","type":[[["number"]]]},{"name":"senderMemberID","description":"Sender member ID.","type":[[["string"]]]},{"name":"receiverMemberID","description":"Receiver member ID.","type":[[["string"]]]},{"name":"sendingReason","description":"Sending reason.","type":[[["string"]]]},{"name":"receivingReason","description":"Receiving reason.","type":[[["string"]]]},{"name":"senderBalance","description":"New sender balance.","type":[[["number"]]]},{"name":"receiverBalance","description":"New receiver balance.","type":[[["number"]]]}],"meta":{"line":371,"file":"BalanceManager.js","path":"src/managers"}},{"name":"TransferingOptions","description":"Transfering options.","type":[[["object"]]],"props":[{"name":"amount","description":"Amount of money to send.","type":[[["number"]]]},{"name":"senderMemberID","description":"A member ID who will send the money.","type":[[["string"]]]},{"name":"receiverMemberID","description":"A member ID who will receive the money.","type":[[["string"]]]},{"name":"sendingReason","description":"The reason of subtracting the money from sender. (example: \"sending money to {user}\")","optional":true,"default":"'sending money to user'","type":[[["string"]]]},{"name":"receivingReason","description":"The reason of adding a money to receiver. (example: \"receiving money from {user}\")","optional":true,"default":"'receiving money from user'","type":[[["string"]]]}],"meta":{"line":424,"file":"BalanceManager.js","path":"src/managers"}},{"name":"AddItemOptions","description":"Configuration with item info for 'Economy.shop.addItem' method.","type":[[["object"]]],"props":[{"name":"name","description":"Item name.","type":[[["string"]]]},{"name":"price","description":"Item price.","type":[[["string"]],[["number"]]]},{"name":"message","description":"Item message that will be returned on use.","optional":true,"default":"'You have used this item!'","type":[[["string"]]]},{"name":"description","description":"Item description.","optional":true,"default":"'Very mysterious item.'","type":[[["string"]]]},{"name":"maxAmount","description":"Max amount of the item that user can hold in their inventory.","optional":true,"default":null,"type":[[["string"]],[["number"]]]},{"name":"role","description":"Role **ID** from your Discord server.","optional":true,"default":null,"type":[[["string"]]]},{"name":"custom","description":"Custom item properties object.","optional":true,"type":[[["object"]]]}],"meta":{"line":917,"file":"ShopManager.js","path":"src/managers"}},{"name":"ItemData","description":"Item data object.","type":[[["object"]]],"props":[{"name":"id","description":"Item ID.","type":[[["number"]]]},{"name":"name","description":"Item name.","type":[[["string"]]]},{"name":"price","description":"Item price.","type":[[["number"]]]},{"name":"message","description":"The message that will be returned on item use.","type":[[["string"]]]},{"name":"description","description":"Item description.","type":[[["string"]]]},{"name":"role","description":"ID of Discord Role that will be given to the user on item use.","type":[[["string"]]]},{"name":"maxAmount","description":"Max amount of the item that user can hold in their inventory.","type":[[["number"]]]},{"name":"date","description":"Date when the item was added in the shop.","type":[[["string"]]]},{"name":"custom","description":"Custom item properties object.","type":[[["object"]]]}],"meta":{"line":235,"file":"HistoryManager.js","path":"src/managers"}},{"name":"RawEconomyUser","description":"Raw economy user object from database.","type":[[["object"]]],"props":[{"name":"dailyCooldown","description":"User's daily cooldown.","type":[[["number"]]]},{"name":"workCooldown","description":"User's work cooldown.","type":[[["number"]]]},{"name":"weeklyCooldown","description":"User's weekly cooldown.","type":[[["number"]]]},{"name":"monthlyCooldown","description":"User's monthly cooldown.","type":[[["number"]]]},{"name":"hourlyCooldown","description":"User's hourly cooldown.","type":[[["number"]]]},{"name":"money","description":"User's balance.","type":[[["number"]]]},{"name":"bank","description":"User's bank balance.","type":[[["number"]]]},{"name":"inventory","description":"User's inventory.","type":[[["InventoryData"]]]},{"name":"history","description":"User's purchases history.","type":[[["HistoryData"]]]},{"name":"id","description":"User ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"meta":{"line":209,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"InventoryData","description":"Inventory data object.","type":[[["object"]]],"props":[{"name":"id","description":"Item ID in your inventory.","type":[[["number"]]]},{"name":"name","description":"Item name.","type":[[["string"]]]},{"name":"price","description":"Item price.","type":[[["number"]]]},{"name":"message","description":"The message that will be returned on item use.","type":[[["string"]]]},{"name":"role","description":"ID of Discord Role that will be given to user on item use.","type":[[["string"]]]},{"name":"maxAmount","description":"Max amount of the item that user can hold in their inventory.","type":[[["number"]]]},{"name":"date","description":"Date when the item was bought by a user.","type":[[["string"]]]},{"name":"custom","description":"Custom item properties object.","type":[[["object"]]]}],"meta":{"line":950,"file":"ShopManager.js","path":"src/managers"}},{"name":"HistoryData","description":"History data object.","type":[[["object"]]],"props":[{"name":"id","description":"Item ID in history.","type":[[["number"]]]},{"name":"name","description":"Item name.","type":[[["string"]]]},{"name":"price","description":"Item price.","type":[[["number"]]]},{"name":"message","description":"The message that will be returned on item use.","type":[[["string"]]]},{"name":"role","description":"ID of Discord Role that will be given to user on item use.","type":[[["string"]]]},{"name":"date","description":"Date when the item was bought by a user.","type":[[["string"]]]},{"name":"memberID","description":"Member ID.","type":[[["string"]]]},{"name":"guildID","description":"Guild ID.","type":[[["string"]]]}],"meta":{"line":937,"file":"ShopManager.js","path":"src/managers"}},{"name":"BalanceLeaderboard","description":"Balance leaderboard object.","type":[[["object"]]],"props":[{"name":"index","description":"User's place in the leaderboard.","type":[[["number"]]]},{"name":"userID","description":"User ID.","type":[[["string"]]]},{"name":"money","description":"Amount of money.","type":[[["number"]]]}],"meta":{"line":436,"file":"BalanceManager.js","path":"src/managers"}},{"name":"BankLeaderboard","description":"Bank leaderboard object.","type":[[["object"]]],"props":[{"name":"index","description":"User's position in the leaderboard.","type":[[["number"]]]},{"name":"userID","description":"User ID.","type":[[["string"]]]},{"name":"money","description":"Amount of money.","type":[[["number"]]]}],"meta":{"line":272,"file":"BankManager.js","path":"src/managers"}},{"name":"SettingsTypes","description":"Settings object.","type":[[["object"]]],"props":[{"name":"dailyAmount","description":"Amount of money for Daily Reward. Default: 100.","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"dailyCooldown","description":"Cooldown for Daily Reward (in ms). Default: 24 hours (60000 * 60 * 24 ms)","type":[[["number"]]]},{"name":"workAmount","description":"Amount of money for Work Reward. Default: [10, 50].","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"workCooldown","description":"Cooldown for Work Reward (in ms). Default: 1 hour (60000 * 60 ms)","type":[[["number"]]]},{"name":"weeklyAmount","description":"Amount of money for Weekly Reward. Default: 1000.","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"weeklyCooldown","description":"Cooldown for Weekly Reward (in ms). Default: 7 days (60000 * 60 * 24 * 7 ms)","type":[[["number"]]]},{"name":"monthlyAmount","description":"Amount of money for Monthly Reward. Default: 10000.","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"monthlyCooldown","description":"Cooldown for Weekly Reward (in ms). Default: 1 month (2629746000 ms).","type":[[["number"]]]},{"name":"hourlyAmount","description":"Amount of money for Hourly Reward. Default: 20.","type":[[["number"]],[["Array","<"],["number",">"]]]},{"name":"hourlyCooldown","description":"Cooldown for Hourly Reward (in ms). Default: 1 hour (3600000 ms).\r*","type":[[["number"]]]},{"name":"dateLocale","description":"The region (example: 'ru' or 'en') to format the date and time. Default: 'en'","type":[[["string"]]]},{"name":"subtractOnBuy","description":"If true, when someone buys the item, their balance will subtract by item price. Default: false.","type":[[["boolean"]]]},{"name":"sellingItemPercent","description":"Percent of the item's price it will be sold for. Default: 75.","type":[[["number"]]]}],"meta":{"line":325,"file":"SettingsManager.js","path":"src/managers"}},{"name":"Settings","type":[[["'dailyAmount","'"]],[["'dailyCooldown","'"]],[["'workAmount","'"]],[["'workCooldown","'"]],[["'weeklyAmount","'"]],[["'weeklyCooldown","'"]],[["'monthlyAmount","'"]],[["'monthlyCooldown","'"]],[["'hourlyAmount","'"]],[["'hourlyCooldown","'"]],[["'dateLocale","'"]],[["'subtractOnBuy","'"]],[["'sellingItemPercent","'"]],[["'savePurchasesHistory","'"]]],"meta":{"line":424,"file":"SettingsManager.js","path":"src/managers"}},{"name":"StackedInventoryItemObject","description":"Stacked item object.","type":[[["object"]]],"props":[{"name":"quantity","description":"Quantity of the item in inventory.","type":[[["number"]]]},{"name":"totalPrice","description":"Total price of the items in inventory.","type":[[["number"]]]},{"name":"item","description":"The stacked item.","type":[[["InventoryItem"]]]}],"meta":{"line":560,"file":"InventoryManager.js","path":"src/managers"}},{"name":"CurrencyFactory","type":[[["object"]]],"props":[{"name":"get","description":"Gets the currency balance.","type":[[["FactoryGet"]]]},{"name":"getCurrency","description":"Gets the currency object.","type":[[["FactoryGetCurrency"]]]},{"name":"set","description":"Sets the currency balance.","type":[[["FactorySet"]]]},{"name":"add","description":"Adds the money on the currency balance.","type":[[["FactoryAdd"]]]},{"name":"subtract","description":"Subtracts the money from the currency balance.","type":[[["FactorySubtract"]]]}],"meta":{"line":384,"file":"BalanceManager.js","path":"src/managers"}},{"name":"FactoryGet","type":[[["function"]]],"returns":{"types":[[["number"]]],"description":"Currency balance."},"meta":{"line":393,"file":"BalanceManager.js","path":"src/managers"}},{"name":"FactoryGetCurrency","type":[[["function"]]],"returns":{"types":[[["Currency"]]],"description":"Currency data object."},"meta":{"line":398,"file":"BalanceManager.js","path":"src/managers"}},{"name":"FactorySet","type":[[["function"]]],"params":[{"name":"amount","description":"Amount of money to set.","type":[[["number"]]]},{"name":"reason","description":"The reason why the money was set.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Updated currency balance."},"meta":{"line":403,"file":"BalanceManager.js","path":"src/managers"}},{"name":"FactoryAdd","type":[[["function"]]],"params":[{"name":"amount","description":"Amount of money to add.","type":[[["number"]]]},{"name":"reason","description":"The reason why the money was added.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Updated currency balance."},"meta":{"line":410,"file":"BalanceManager.js","path":"src/managers"}},{"name":"FactorySubtract","type":[[["function"]]],"params":[{"name":"amount","description":"Amount of money to subtract.","type":[[["number"]]]},{"name":"reason","description":"The reason why the money was subtracted.","optional":true,"type":[[["string"]]]}],"returns":{"types":[[["number"]]],"description":"Updated currency balance."},"meta":{"line":417,"file":"BalanceManager.js","path":"src/managers"}},{"name":"UserTransferingOptions","description":"Transfering options.","type":[[["object"]]],"props":[{"name":"amount","description":"Amount of money to send.","type":[[["number"]]]},{"name":"senderMemberID","description":"A member ID who will send the money.","type":[[["string"]]]},{"name":"sendingReason","description":"The reason of subtracting the money from sender. (example: \"sending money to {user}\")","optional":true,"default":"'sending money to user'","type":[[["string"]]]},{"name":"receivingReason","description":"The reason of adding a money to receiver. (example: \"receiving money from {user}\")","optional":true,"default":"'receiving money from user'","type":[[["string"]]]}],"meta":{"line":263,"file":"Balance.js","path":"src/classes/user"}},{"name":"RewardCooldowns","type":[[["object"]]],"props":[{"name":"daily","description":"Daily cooldown.","type":[[["number"]]]},{"name":"work","description":"Work cooldown.","type":[[["number"]]]},{"name":"weekly","description":"Weekly cooldown.","type":[[["number"]]]},{"name":"monthly","description":"Hourly cooldown.","type":[[["number"]]]},{"name":"hourly","description":"Hourly cooldown.","type":[[["number"]]]}],"meta":{"line":200,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"TimeData","type":[[["object"]]],"props":[{"name":"days","description":"Amount of days until the cooldown ends.","type":[[["number"]]]},{"name":"hours","description":"Amount of hours until the cooldown ends.","type":[[["number"]]]},{"name":"minutes","description":"Amount of minutes until the cooldown ends.","type":[[["number"]]]},{"name":"seconds","description":"Amount of seconds until the cooldown ends.","type":[[["number"]]]},{"name":"milliseconds","description":"Amount of milliseconds until the cooldown ends.","type":[[["number"]]]}],"meta":{"line":17,"file":"timeParser.js","path":"src/structures"}},{"name":"CooldownData","type":[[["object"]]],"props":[{"name":"time","description":"A time object with the remaining time until the cooldown ends.","type":[[["TimeData"]]]},{"name":"pretty","description":"A formatted string with the remaining time until the cooldown ends.","type":[[["string"]]]},{"name":"endTimestamp","description":"Cooldown end timestamp.","type":[[["number"]]]}],"meta":{"line":475,"file":"RewardManager.js","path":"src/managers"}},{"name":"CooldownsObject","type":[[["object"]]],"props":[{"name":"daily","description":"Cooldown for Daily Reward.","type":[[["number"]]]},{"name":"work","description":"Cooldown for Work Reward.","type":[[["number"]]]},{"name":"weekly","description":"Cooldown for Weekly Reward.","type":[[["number"]]]},{"name":"monthly","description":"Cooldown for Monthly Reward.","type":[[["number"]]]},{"name":"hourly","description":"Cooldown for Hourly Reward.","type":[[["number"]]]}],"meta":{"line":289,"file":"Cooldowns.js","path":"src/classes/user"}},{"name":"ShopOperationInfo","type":[[["object"]]],"props":[{"name":"status","description":"Operation status.","type":[[["boolean"]]]},{"name":"message","description":"Operation message.","type":[[["string"]]]},{"name":"item","description":"Item object.","type":[[["ShopItem"]],[["InventoryItem"]]]},{"name":"quantity","description":"Item quantity.","type":[[["number"]]]},{"name":"totalPrice","description":"Total price of the items.","type":[[["number"]]]}],"meta":{"line":928,"file":"ShopManager.js","path":"src/managers"}},{"name":"RewardData","type":[[["object"]]],"props":[{"name":"type","description":"Type of the operation.","type":[[["'daily","'"]],[["'work","'"]],[["'weekly","'"]]]},{"name":"claimed","description":"Whether the reward was claimed.","type":[[["boolean"]]]},{"name":"cooldown","description":"Cooldown object.","type":[[["CooldownData"]]]},{"name":"reward","description":"Amount of money that the user received.","type":[[["number"]]]},{"name":"defaultReward","description":"Reward that was specified in a module configuration.","type":[[["number"]]]}],"meta":{"line":457,"file":"RewardManager.js","path":"src/managers"}},{"name":"EconomyEvents","description":"Economy events.","type":[[["'balanceSet","'"]],[["'balanceAdd","'"]],[["'balanceSubtract","'"]],[["'bankSet","'"]],[["'bankAdd","'"]],[["'bankSubtract","'"]],[["'customCurrencySet","'"]],[["'customCurrencyAdd","'"]],[["'customCurrencySubtract","'"]],[["'shopItemAdd","'"]],[["'shopItemEdit","'"]],[["'shopItemBuy","'"]],[["'shopItemUse","'"]],[["'shopClear","'"]],[["'ready","'"]],[["'destroy","'"]]],"meta":{"line":59,"file":"Emitter.js","path":"src/classes/util"}},{"name":"LoggerOptions","type":[[["object"]]],"props":[{"name":"debug","description":"Is the debug mode enabled.","type":[[["boolean"]]]}],"meta":{"line":109,"file":"Logger.js","path":"src/classes/util"}},{"name":"PredicateFunction","type":[[["function"]]],"params":[{"name":"value","type":[[["any"]]]},{"name":"index","type":[[["number"]]]},{"name":"array","type":[[["Array","<"],["any",">"]]]}],"returns":[[["boolean"]]],"meta":{"line":530,"file":"BaseManager.js","path":"src/managers"}},{"name":"CompareFunction","type":[[["function"]]],"params":[{"name":"a","type":[[["any"]]]},{"name":"b","type":[[["any"]]]}],"returns":[[["number"]]],"meta":{"line":538,"file":"BaseManager.js","path":"src/managers"}},{"name":"CooldownsTimeObject","type":[[["object"]]],"props":[{"name":"daily","description":"Cooldown for Daily Reward.","type":[[["number"]]]},{"name":"work","description":"Cooldown for Work Reward.","type":[[["number"]]]},{"name":"weekly","description":"Cooldown for Weekly Reward.","type":[[["number"]]]},{"name":"monthly","description":"Cooldown for Monthly Reward.","type":[[["number"]]]},{"name":"hourly","description":"Cooldown for Hourly Reward.","type":[[["number"]]]}],"meta":{"line":319,"file":"CooldownManager.js","path":"src/managers"}},{"name":"VersionData","description":"Module update state.","type":[[["object"]]],"props":[{"name":"updated","description":"Is the module updated.","type":[[["boolean"]]]},{"name":"installedVersion","description":"Installed version.","type":[[["string"]]]},{"name":"packageVersion","description":"Avaible version.","type":[[["string"]]]}],"meta":{"line":376,"file":"UtilsManager.js","path":"src/managers"}},{"name":"ProperyDeprecationOptions","type":[[["object"]]],"props":[{"name":"method","description":"The method that includes an options object with deprecated property.","type":[[["string"]]]},{"name":"argumentName","description":"The name of the argument where the options object has a deprecated property.","type":[[["string"]]]},{"name":"argumentsList","description":"The list of arguments of the method.","type":[[["Array","<"],["string",">"]]]},{"name":"example","description":"Example of the usage of the new property.","type":[[["string"]]]}],"meta":{"line":234,"file":"errors.js","path":"src/structures"}}],"externals":[]}