{
    "meta": {
        "generator": "0.10.0",
        "format": 20,
        "date": 1630868608885
    },
    "custom": {
        "general": {
            "name": "General",
            "files": {
                "welcome": {
                    "name": "Welcome",
                    "type": "md",
                    "content": "# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## üôã‚Äç‚ôÇÔ∏è | Welcome!\r\nWelcome to the `discord-economy-super v1.3.9` documentation.\r\n\r\n## üìÇ | Installation\r\n<b>Note:<b>\r\n</br>\r\n<b>Node.js 14.0.0 or newer is required. Otherwise, the module won't work.</b><br>\r\n```console\r\nnpm i discord-leveling-super\r\nyarn add discord-leveling-super\r\npnpm add discord-leveling-super\r\n```\r\n\r\n## ‚ùì | About\r\n<b>Discord Economy Super is a powerful Node.js module that allows you to make an economy system in your bot very easily.</b>\r\n<br>\r\n<ul>\r\n<li><b>TypeScript Support üìò</b></li>\r\n<li><b>Object-oriented üìú</b></li>\r\n<li><b>Flexible and Customizable ‚öôÔ∏è</b></li>\r\n<li><b>Easy to use üëç</b></li>\r\n<li><b>Beginner Friendly üòÑ</b></li>\r\n<li><b>Shop System üõí</b></li>\r\n<li><b>Bank Balance System üè¶</b></li>\r\n<li><b>Multi-Server Setup üîß</b></li>\r\n</ul>\r\n\r\n## ü§î | Help\r\n<b>If you don't understand something in the documentation or you are experiencing problems, feel free to join our <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n\r\n## ‚ùó | Useful Links\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<br>\r\n<b>If you don't understand something in the documentation or you are experiencing problems, feel free to join our <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for using Discord Economy Super ‚ù§Ô∏è",
                    "path": "docs/general/welcome.md"
                },
                "faq": {
                    "name": "FAQ",
                    "type": "md",
                    "content": "# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## ‚ùì | Frequently Asked Questions\r\n\r\n### Q: Will the module support MongoDB?\r\n#### A: No. At the moment, we cant do support for MongoDB in the module. Sorry about that.\r\n<br>\r\n\r\n### Q: Why do I get the \"Cannot read property '(any manager property from main class)' of null\"?\r\n#### A: Because the module is not started and not ready yet. If you have a command handler, you have to do `<client>.economy = economy`, which will add my module in your bot client's property and you could use the module in any command without any errors. For example: `<client>.economy.ranks.get(...)` will return you a user's rank object.\r\n<br>\r\n\r\n### Q: Why are examples not working?\r\n#### A: Examples provided in documentation and in GitHub are for one-file bot. See the question above to get more info. If it's a bug, see the question below.\r\n<br>\r\n\r\n### Q: I found a bug or have an idea. Where I could submit it?\r\n#### A: On our [Support Server](https://discord.gg/4pWKq8vUnb). We appreciate that!\r\n<br>\r\n\r\n## ‚ùó | Useful Links\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Bot Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for using Discord Economy Super ‚ù§Ô∏è",
                    "path": "docs/general/faq.md"
                },
                "examples": {
                    "name": "Examples",
                    "type": "md",
                    "content": "# Discord Economy Super\n\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\n\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\n\n## Simple Example\n```js\nconst { Client } = require('discord.js')\nconst client = new Client({\n    partials: ['CHANNEL', 'GUILD_MEMBER', 'MESSAGE', 'REACTION', 'USER'],\n    intents: [\n        'GUILDS', 'GUILD_BANS', 'GUILD_EMOJIS_AND_STICKERS', 'GUILD_INTEGRATIONS',\n        'GUILD_INVITES', 'GUILD_MEMBERS', 'GUILD_MESSAGES', 'GUILD_MESSAGE_REACTIONS',\n        'GUILD_MESSAGE_TYPING', 'GUILD_PRESENCES', 'GUILD_VOICE_STATES', 'GUILD_WEBHOOKS',\n        'DIRECT_MESSAGES', 'DIRECT_MESSAGE_REACTIONS', 'DIRECT_MESSAGE_TYPING'\n    ]\n});\n\nconst Economy = require('discord-economy-super');\nconst eco = new Economy();\n\nclient.on('ready', () => {\n  console.log(`${client.user.tag} is ready!`);\n});\n\nclient.login('token')\n```\n\n## Options Example\n```js\nconst Economy = require('discord-economy-super');\nnew Economy({\n  storagePath: './storage.json', // Full path to a JSON File. Default: './storage.json'.\n  checkStorage: true, // Checks the if database file exists and if it has errors. Default: true.\n  dailyCooldown: 60000 * 60 * 24, // Daily Cooldown, ms (24 Hours = 1 Day). Default: 24 Hours (60000 * 60 * 24) ms.\n  workCooldown: 60000 * 60, // Work Cooldown, ms (1 Hour). Default: 1 Hour (60000 * 60) ms.\n  weeklyCooldown: 60000 * 60 * 24 * 7, // Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms\n  dailyAmount: 100, // Daily Amount. Default: 100.\n  workAmount: [10, 50], // Work Amount: first element is min value, second is max value (It also can be a Number). Default: [10, 50].\n  weeklyAmount: 1000, // Amount of money for Weekly Command. Default: 1000.\n  updateCountdown: 1000, // Checks for if storage file exists in specified time (in ms). Default: 1000.\n  dateLocale: 'ru', // The region (example: ru; en) to format date and time. Default: 'ru'.\n  updater: {\n        checkUpdates: true, // Sends the update state message in console on start. Default: true.\n        upToDateMessage: true // Sends the message in console on start if module is up to date. Default: true.\n    },\n    errorHandler: {\n        handleErrors: true, // Handles all errors on start. Default: true.\n        attempts: 5, // Amount of attempts to load the module. Use 'null' for infinity attempts. Default: 5.\n        time: 3000 // Time between every attempt to start the module. Default: 3000.\n    },\n    optionsChecker: {\n        ignoreInvalidTypes: false, // Allows the method to ignore the options with invalid types. Default: false.\n        ignoreUnspecifiedOptions: false, // Allows the method to ignore the unspecified options. Default: false.\n        ignoreInvalidOptions: false, // Allows the method to ignore the unexisting options. Default: false.\n        showProblems: false, // Allows the method to show all the problems in the console. Default: false.\n        sendLog: false, // Allows the method to send the result in the console. Default: false.\n        sendSuccessLog: false // Allows the method to send the result if no problems were found. Default: false.\n    }\n});\n```\n\n## Events Example\n```js\n// balance events\neco.on('balanceSet', balance => {\n    console.log(`Someone's just set ${balance.amount} coins for balance for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('balanceAdd', balance => {\n    console.log(`Someone's just added ${balance.amount} coins for balance for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('balanceSubtract', balance => {\n    console.log(`Someone's just subtracted ${balance.amount} coins from balance for member ${balance.memberID} on guild ${balance.guildID}. His balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'.`)\n})\n\n\n// bank balance events\neco.on('bankSet', balance => {\n    console.log(`Someone's just set ${balance.amount} coins in bank for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('bankAdd', balance => {\n    console.log(`Someone's just added ${balance.amount} coins in bank for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\neco.on('bankSubtract', balance => {\n    console.log(`Someone's just subtracted ${balance.amount} coins from bank for member ${balance.memberID} on guild ${balance.guildID}. His bank balance is ${balance.balance} coins now.\\nReason: ${balance.reason}\\nOperation type: '${balance.type}'`)\n})\n\n// shop events\neco.on('shopAddItem', item => {\n    console.log(`Someone's just added an item in the shop!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description}\\nMessage on use: ${item.message}\\nMax amount of item in inventory: ${item.maxAmount}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopRemoveItem', item => {\n    console.log(`Someone's just removed an item from the shop!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description}\\nMessage on use: ${item.message}\\nMax amount of item in inventory: ${item.maxAmount}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopEditItem', item => {\n    console.log(`Someone's just edited an item in the shop!\\nID: ${item.id}\\Guild ID: ${item.guildID}\\nWhat changed: ${item.changed}\\nBefore: ${item.oldValue}\\nAfter: ${item.newValue}`)\n})\neco.on('shopItemBuy', item => {\n    console.log(`Someone's just bought an item from the shop!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description || 'Not specified'}\\nMessage on use: ${item.message || 'Not specified'}\\nMax amount of item in inventory: ${item.maxAmount || 'Any'}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopItemUse', item => {\n    console.log(`Someone's just used an item!\\nItem data:\\nID: ${item.id}\\nName: ${item.itemName}\\nPrice: ${item.price}\\nDescription: ${item.description || 'Not specified'}\\nMessage on use: ${item.message || 'Not specified'}\\nMax amount of item in inventory: ${item.maxAmount || 'Any'}\\nRole ID: ${item.role || 'Not specified'}`)\n})\neco.on('shopClear', cleared => {\n  if (cleared) console.log('The shop was cleared successfully!')\n  else console.log('Cannot clear the shop!')\n})\n\n\n// core events\neco.on('ready', () => {\n    console.log('Economy is ready!')\n})\neco.on('destroy', () => {\n    console.log('Economy was destroyed.')\n})\n```\n## Balance Command\n```js\nif (message.content.startsWith('+balance')) {\n    const member = message.guild.member(message.mentions.members.first() || message.author)\n        \n    const balance = eco.balance.fetch(member.id, message.guild.id)\n    const bank = eco.bank.fetch(member.user.id, message.guild.id)\n        \n    message.channel.send(`**${member.user.username}**'s Balance:\\nCash: **${balance}** coins.\\nBank: **${bank}** coins.`)\n}\n```\n\n## Daily & Work Commands\n```js\nif (message.content.startsWith('+daily')) {\n    const daily = eco.rewards.daily(message.author.id, message.guild.id)\n    if (!daily.status) return message.channel.send(`You have already claimed your daily reward! Time left until next claim: **${daily.value.days}** days, **${daily.value.hours}** hours, **${daily.value.minutes}** minutes and **${daily.value.seconds}** seconds.`)\n    message.channel.send(`You have received **${daily.reward}** daily coins!`)\n}\n\nif (message.content.startsWith('+work')) {\n    const work = eco.rewards.work(message.author.id, message.guild.id)\n    if (!work.status) return message.channel.send(`You have already worked! Time left until next work: **${work.value.days}** days, **${work.value.hours}** hours, **${work.value.minutes}** minutes and **${work.value.seconds}** seconds.`)\n    message.channel.send(`You worked hard and earned **${work.pretty}** coins!`)\n}\n```\n\n## Cash & Deposit Commands\n```js\nconst args = message.content.slice(1).trim().split(' ').slice(1)\nif (message.content.startsWith('+cash')) {\n    const amount = args[0]\n    const balance = eco.bank.fetch(message.author.id, message.guild.id)\n\n    if (!amount) return message.channel.send('Specify an amount.')\n    if (isNaN(amount)) return message.channel.send('Amount must be a number.')\n    if (amount > balance) return message.channel.send(`You don\\'t have enough money in your bank to send **${amount}** coins on your balance.`)\n        \n    eco.balance.add(amount, message.author.id, message.guild.id)\n    eco.bank.subtract(amount, message.author.id, message.guild.id)\n        \n    message.channel.send(`Successfully sent **${amount}** on your balance!`)\n}\n\nif (message.content.startsWith('+deposit') || message.content.startsWith('+dep')) {\n    const amount = args[0]\n    const balance = eco.balance.fetch(message.author.id, message.guild.id)\n\n    if (!amount) return message.channel.send('Specify an amount.')\n    if (isNaN(amount)) return message.channel.send('Amount must be a number.')\n    if (amount > balance) return message.channel.send(`You don\\'t have enough money on your balance to deposit **${amount}** coins.`)\n        \n    eco.balance.subtract(amount, message.author.id, message.guild.id)\n    eco.bank.add(amount, message.author.id, message.guild.id)\n \n    message.channel.send(`Successfully deposited **${amount}** coins!`)\n}\n```\n\n## ‚ùó | Useful Links\n<ul>\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Bot Examples</a></b></li>\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\n</ul>\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\n<br>\n<b>Module Created by ShadowPlay.</b>\n\n# ‚ù§Ô∏è Thanks for using Discord Economy Super ‚ù§Ô∏è",
                    "path": "docs/general/examples.md"
                },
                "updating": {
                    "name": "Updating your code",
                    "type": "md",
                    "content": "# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## ‚úç | Updating your code\r\n\r\n## Version 1.3.2\r\nVersion 1.3.2 takes a much more object-oriented approach than previous versions. It also contains many bug fixes, optimizations and support for new Database Manager.\r\n\r\nHere's some examples of methods that were changed in this version:\r\n- `Economy.daily()` ==> `RewardManager.daily()`\r\n- `Economy.getDailyCooldown()` ==> `CooldownManager.daily()`\r\n- `Economy.all()` ==> `UtilsManager.all()`\r\n<br>\r\n\r\nSo you have to change your code like this:\r\n- `eco.daily()` ==> `eco.rewards.daily()`\r\n- `eco.getDailyCooldown()` ==> `eco.cooldowns.daily()`\r\n- `eco.all()` ==> `eco.utils.all()`\r\n\r\nSee the [changelog](https://des-docs.tk/#/docs/main/stable/general/changelog) for the full list of changes.\r\n\r\n## Version 1.2.5\r\nIn version 1.2.5 everything was optimized and all balance and bank balance methods were moved to objects:\r\n\r\n```diff\r\n- eco.fetch('memberID', 'guildID')\r\n- eco.set(amount, 'memberID', 'guildID')\r\n- eco.add(amount, 'memberID', 'guildID')\r\n- eco.subtract(amount, 'memberID', 'guildID')\r\n- eco.leaderboard('guildID')\r\n\r\n+ eco.balance.fetch('memberID', 'guildID')\r\n+ eco.balance.set(amount, 'memberID', 'guildID')\r\n+ eco.balance.add(amount, 'memberID', 'guildID')\r\n+ eco.balance.subtract(amount, 'memberID', 'guildID')\r\n+ eco.balance.leaderboard('guildID')\r\n\r\n- eco.bankFetch('memberID', 'guildID')\r\n- eco.bankSet(amount, 'memberID', 'guildID')\r\n- eco.bankAdd(amount, 'memberID', 'guildID')\r\n- eco.bankSubtract(amount, 'memberID', 'guildID')\r\n- eco.bankLeaderboard('guildID')\r\n\r\n+ eco.bank.fetch('memberID', 'guildID')\r\n+ eco.bank.set(amount, 'memberID', 'guildID')\r\n+ eco.bank.add(amount, 'memberID', 'guildID')\r\n+ eco.bank.subtract(amount, 'memberID', 'guildID')\r\n+ eco.bank.leaderboard('guildID')\r\n```\r\n\r\n## ‚ùó | Useful Links\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for using Discord Economy Super ‚ù§Ô∏è",
                    "path": "docs/general/updating.md"
                },
                "changelog": {
                    "name": "Changelog",
                    "type": "md",
                    "content": "# Discord Economy Super\r\n\r\n[![Downloads](https://img.shields.io/npm/dt/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n[![Stable Version](https://img.shields.io/npm/v/discord-economy-super?style=for-the-badge)](https://www.npmjs.com/package/discord-economy-super)\r\n\r\n<b>Discord Economy Super</b> - Easy and customizable economy framework for your [Discord Bot](https://discord.js.org/#/).\r\n\r\n## ‚è∞ | Changelog\r\n<b>1.0.1</b>\r\n<ul>\r\n  <li><b>The first version of the module: added a basic methods: 'Economy.fetch()', 'Economy.set()', 'Economy.add()', 'Economy.subtract()', 'Economy.daily()', 'Economy.work()', 'Economy.getDailyCooldown()', 'Economy.getWorkCooldown()', 'Economy.all()' and 'Economy.leaderboard()'. Also added an EconomyError class, but you couldn't use it yourself.</b></li>\r\n</ul>\r\n<b>1.0.2</b>\r\n<ul>\r\n  <li><b>Edited README.md</b></li>\r\n</ul>\r\n<b>1.0.3</b>\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n<b>1.0.4</b>\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n<b>1.0.5</b>\r\n<ul>\r\n  <li><b>Fixed bugs.</b></li>\r\n</ul>\r\n<b>1.0.6</b>\r\n<ul>\r\n  <li><b>Edited README.md</b></li>\r\n  <li><b>Fixed bugs.</b></li>\r\n  <li><b>Code optimization</b></li>\r\n  <li><b>Now you can create a shop on your Discord server using Economy.shop methods. They are listed above.</b></li>\r\n  <li><b>Added an 'EconomyError' class property.</b></li>\r\n  <li><b>Added a 'dateLocale' property for options object.</b></li>\r\n</ul>\r\n<b>1.0.7</b>\r\n<ul>\r\n  <li><b>Fixed bugs</b></li>\r\n</ul>\r\n<b>1.0.8</b>\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now this module is including Events. They are listed above.</b></li>\r\n</ul>\r\n<b>1.1.4</b>\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Added an update checking system for this module.</b></li>\r\n<li><b>Added a 'checkUpdates' property for options object.</b></li>\r\n</ul>\r\n<b>1.1.5</b>\r\n<ul>\r\n<li><b>Edted README.md</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Updated the examples.</b></li>\r\n<li><b>Fixed the types.</b></li>\r\n<li><b>Added a Table of Contents in README.md</b></li>\r\n<li><b>If you have an earlier Node.js version than v14, you will receive an error.</b></li>\r\n<li><b>Now you can configure the update checking system settings using 'options.updater' properties in constructor options. The 'options.checkUpdates' property was removed in favor of 'options.updater' configuration object. Use 'options.updater.checkUpdates' instead.</b></li>\r\n<li><b>Added an error handler that will work on startup. You can configure it using 'options.errorHandler' properties in constructor options.</b></li>\r\n<li><b>Option properties 'description, 'mesasge' and 'maxAmount', in 'Economy.shop.addItem' method are optional now.</b></li>\r\n<li><b>Now everyone will have a Bank Balance. This is another type of money, you can use it whatever you want. :) | The methods are almost the same: 'Economy.bankFetch()', 'Economy.bankSet()', 'Economy.bankAdd()', 'Economy.bankSubtract()' and 'Economy.bankLeaderboard()'.</b></li>\r\n<li><b>Added a new events for Bank Balance: 'bankSet', 'bankAdd' and 'bankSubtract'.</b></li>\r\n<li><b>Now every balance and bank-balance event object is including 'type' and 'balance' properties. The first property is type of the operation ('set', 'add', 'subtract', 'bankSet', 'bankAdd', 'bankSubtract') and the second is user's new balance after the operation was completed successfully.</b></li>\r\n<li><b>Now you can manually check the module updates using the new 'Economy.checkUpdates()' method.</b></li>\r\n<li><b>Added an additional 'Economy.ready' and 'Economy.errored' properties to check the module state.</b></li>\r\n<li><b>Now you can add a role to users on your Discord server. Click <a href=\"https://des-docs.tk/#/docs/main/stable/class/ShopManager\">here</a> for more info.</b></li>\r\n<li><b>Added a new 'shopItemBuy' and 'shopItemUse' events.</b></li>\r\n<li><b>Now if user try to buy an item when he reached the max amount of item in his inventory, the method will return a 'max' string.</b></li>\r\n<li><b>Now this module has a Support Server. Click <b><a href = \"https://discord.gg/4pWKq8vUnb\">here</a></b> to join!</b></li>\r\n</ul>\r\n<b>1.1.6</b>\r\n<ul>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed bug with \"The module is not ready to work\" error on startup.</b></li>\r\n<li><b>Removed an accidentaly added \"discord.js\" module from dependencies.</b></li>\r\n</ul>\r\n<b>1.1.7</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>TypeScript support is finally here! Created a type defenitions for this module.</b></li>\r\n</ul>\r\n<b>1.1.8</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now you can disable checking a storage file using the 'options.checkStorage' option.</b></li>\r\n<li><b>Now you can kill the Economy instance using the 'Economy.kill()' method.</b></li>\r\n<li><b>'Economy.init()' method is not private anymore due to 'Economy.kill()' method.</b></li>\r\n<li><b>Added an 'interval' property that displays the database checking interval.</b></li>\r\n<li><b>Now you can clear the entire database using the 'Economy.clearStorage()' method.</b></li>\r\n<li><b>Now this module is using errors that in 'Economy.errors' property and in './src/errors.js' file.</b></li>\r\n<li><b>Now you can clear any cooldown using the 'Economy.clearDailyCooldown', 'Economy.clearWorkCooldown' and ''Economy.clearWeeklyCooldown' methods.</b></li>\r\n<li><b>Added a test for basic Economy methods. You can run it by using these commands:\r\n\r\n```console\r\ncd node_modules/discord-economy-super\r\nnpm test\r\n```\r\nThe test will look like this:\r\n\r\n![Test](https://cdn.discordapp.com/attachments/764192017542283325/838226957166313472/Screenshot_4.png)\r\n</b></li>\r\n</ul>\r\n<b>1.1.9</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed type defenitions.</b></li>\r\n</ul>\r\n<b>1.2.0</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>'Economy.shop.clearInventory()' method is working fine now.</b></li>\r\n</ul>\r\n<b>1.2.1</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Now 'Economy.work()' method is not taking a daily cooldown as work reward anymore.</b></li>\r\n<li><b>Added an 'Economy.removeGuild()' method to fully remove the guild from database.</b></li>\r\n<li><b>Added an 'Economy.removeUser()' method to to remove the user from database.</b></li>\r\n</ul>\r\n<b>1.2.2</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed another issues with 'Economy.work()' method...</b></li>\r\n</ul>\r\n<b>1.2.3</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>'Economy.leaderboard()' method will return an empty array if the leaderboard is empty.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n<li><b>Fixed typos</b></li>\r\n</ul>\r\n<b>1.2.4</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>'Economy.daily()', '.work()' and '.weekly()' methods will return an object** instead of Number | String.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n</ul>\r\n\r\n** The object structure will look like this:\r\n\r\n```js\r\n{\r\n    status: Boolean,\r\n    value: { // object returns if reward is already claimed; else - number\r\n        days: Number,\r\n        hours: Number,\r\n        minutes: Number,\r\n        seconds: Number,\r\n        milliseconds: Number\r\n    },\r\n    pretty: String | Number,\r\n    reward: Number | Number[] // array returns if work reward is array\r\n}\r\n```\r\n\r\n<b>1.2.5</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Updated typings.</b></li>\r\n<li><b>Updated examples.</b></li>\r\n<li><b>discord.js is no longer imported in the module.</b></li>\r\n<li><b>Added a 'ready' and 'destroy' events. <a href = \"https://www.npmjs.com/package/discord-economy-super#module-events\">Learn more</a>.</b></li>\r\n<li><b>All balance and bank methods were moved to objects. <a href = \"https://www.npmjs.com/package/discord-economy-super#balance-methods\">Learn more</a>.</b></li>\r\n<b>Here is the difference between v1.2.4 and v1.2.5.</b>\r\n\r\n```diff\r\n- eco.fetch('123', '123')\r\n- eco.set(10, '123', '123')\r\n- eco.add(10, '123', '123')\r\n- eco.subtract(10, '123', '123')\r\n- eco.leaderboard('123')\r\n\r\n+ eco.balance.fetch('123', '123')\r\n+ eco.balance.set(10, '123', '123')\r\n+ eco.balance.add(10, '123', '123')\r\n+ eco.balance.subtract(10, '123', '123')\r\n+ eco.balance.leaderboard('123')\r\n\r\n- eco.bankFetch('123', '123')\r\n- eco.bankSet(10, '123', '123')\r\n- eco.bankAdd(10, '123', '123')\r\n- eco.bankSubtract(10, '123', '123')\r\n- eco.bankLeaderboard('123')\r\n\r\n+ eco.bank.fetch('123', '123')\r\n+ eco.bank.set(10, '123', '123')\r\n+ eco.bank.add(10, '123', '123')\r\n+ eco.bank.subtract(10, '123', '123')\r\n+ eco.bank.leaderboard('123')\r\n```\r\n<li><b>'Economy.balance.leaderboard()' and 'Economy.bank.leaderboard()' methods arrays are now have an 'index' property in object.</b></li>\r\n</ul>\r\n<b>1.2.6</b>\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Now 'ready' and 'destroy' events will return nothing (Void) instead of Boolean.</b></li>\r\n</ul>\r\n<b>1.2.8</b>\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Item IDs in shop and inventory are now synced with the last element of array. It fixes the bug with similar item IDs in the shop and inventory.</b></li>\r\n</ul>\r\n<b>1.3.0</b>\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Now this module has a <a href=\"https://des-docs.tk\">documentation website</a>!</b></li>\r\n<li><b>Added an 'Economy.docs' property that contains a link to the documentation website.</b></li>\r\n</ul>\r\n<b>1.3.2</b>\r\n<ul>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed the expired link to the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b></li>\r\n<li><b>Updated README.md.</b></li>\r\n<li><b>Updated documentation.</b></li>\r\n<li><b>Added a bank example in module files.</b></li>\r\n<li><b>Added more examples on <a href=\"https://des-docs.tk\">documentation website</a>.</b></li>\r\n<li><b>The entire module structure was rewritten on Managers.</b></li>\r\n<li><b>Added a new Database Manager that allows you to interact with module's storage file.</b></li>\r\n</ul>\r\n<b>1.3.3</b>\r\n<ul>\r\n<li><b>Fixed minor bugs.</b></li>\r\n<li><b>Fixed bugs with Database Manager.</b></li>\r\n</ul>\r\n<b>1.3.4</b>\r\n<ul>\r\n<li><b>Full code rewrite.</b></li>\r\n<li><b>Lots of bugfixes.</b></li>\r\n<li><b>Code optimization.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Added a new Fetch Manager that allows you to fetch data from database.</b></li>\r\n<li><b>Added an 'add()', 'subtract()', 'push()' and 'removeElement()' methods in Database Manager.</b></li>\r\n<li><b>Added a 'checkOptions()' and 'reset()' methods in Utils Manager.</b></li>\r\n<li><b>Added an 'optionsChecker' object property in constructor options.</b></li>\r\n<li><b>Added a 'subtractOnBuy' property in constructor options.</b></li>\r\n<li><b>All typings were separated into files.</b></li>\r\n<li><b><a href=\"https://des-docs.tk\">Documentation</a> update: now you can view the docs for a multiple module versions.</b></li>\r\n<li><b><a href=\"https://des-docs.tk\">Documentation</a> update: now you can view the weekly downloads of the module on it's main page.</b></li>\r\n<li><b>... and more!</li>\r\n</ul>\r\n<b>1.3.5</b>\r\n<ul>\r\n<li><b>Fixed the 'Cannot find module `structures/Errors`' error.</b></li>\r\n<li><b>Fixed bugs in typings.</b></li>\r\n</ul>\r\n<b>1.3.6</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typos.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Fixed the economy options resetting to default.</b></li>\r\n</ul>\r\n<b>1.3.7</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed the hard crash if options object is not specified.</b></li>\r\n</ul>\r\n<b>1.3.8</b>\r\n<ul>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Fixed a hard crash with 'Economy.rewards.work()' method.</b></li>\r\n</ul>\r\n<b>1.3.9</b>\r\n<ul>\r\n<li><b>Fixed typings.</b></li>\r\n</ul>\r\n<b>1.4.0</b>\r\n<ul>\r\n<li><b>Fixed bugs.</b></li>\r\n<li><b>Fixed typings.</b></li>\r\n<li><b>Now you can put an array with 2 numbers in 'dailyAmount' and 'weeklyAmount' options.</b></li>\r\n<li><b>Now you can setup the module on different guilds using the brand new Settings Manager.</b></li>\r\n<li><b>Removed 'lodash' from the dependencies.</b></li>\r\n<li><b>Made a function that checks the Node.js version.</b></li>\r\n</ul>\r\n\r\n## ‚ùó | Useful Links\r\n<ul>\r\n<li><b><a href = \"https://www.npmjs.com/package/discord-economy-super\">NPM</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super\">GitHub</a></b></li>\r\n<li><b><a href = \"https://github.com/shadowplay1/discord-economy-super/tree/main/examples\">Examples</a></b></li>\r\n<li><b><a href = \"https://discord.gg/4pWKq8vUnb\">Discord Server</a></b></li>\r\n</ul>\r\n<br>\r\n<b>If you found a bug, have any questions or need help, join the <a href = \"https://discord.gg/4pWKq8vUnb\">Support Server</a>.</b>\r\n<br>\r\n<b>Module Created by ShadowPlay.</b>\r\n\r\n# ‚ù§Ô∏è Thanks for using Discord Economy Super ‚ù§Ô∏è",
                    "path": "docs/general/changelog.md"
                }
            }
        }
    },
    "classes": [
        {
            "name": "Economy",
            "description": "The main Economy class.",
            "construct": {
                "name": "Economy",
                "description": "The Economy class.",
                "params": [
                    {
                        "name": "options",
                        "description": "Economy options object.",
                        "type": [
                            [
                                [
                                    "EconomyOptions"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "ready",
                    "description": "Module ready status.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 54,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "errored",
                    "description": "Economy errored status.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 60,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "version",
                    "description": "Module version.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 66,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "docs",
                    "description": "Link to the module's documentation website.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 72,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "utils",
                    "description": "Utils manager methods object.",
                    "type": [
                        [
                            [
                                "UtilsManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 78,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "options",
                    "description": "Constructor options object.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 84,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "interval",
                    "description": "Database checking interval.",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "NodeJSTimeout"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 90,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "EconomyError",
                    "description": "Economy error class.",
                    "type": [
                        [
                            [
                                "EconomyError"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 96,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "balance",
                    "description": "Balance methods object.",
                    "type": [
                        [
                            [
                                "BalanceManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 102,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bank",
                    "description": "Bank balance methods object.",
                    "type": [
                        [
                            [
                                "BankManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 108,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "fetcher",
                    "description": "Fetch manager methods object.",
                    "type": [
                        [
                            [
                                "FetchManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 114,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "database",
                    "description": "Database manager methods object.",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 120,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shop",
                    "description": "Shop manager methods object.",
                    "type": [
                        [
                            [
                                "ShopManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 126,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "rewards",
                    "description": "Balance methods object.",
                    "type": [
                        [
                            [
                                "RewardManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 132,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "cooldowns",
                    "description": "Bank balance methods object.",
                    "type": [
                        [
                            [
                                "CooldownManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 138,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "settings",
                    "description": "Settings manager methods object.",
                    "type": [
                        [
                            [
                                "SettingsManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 144,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "methods": [
                {
                    "name": "kill",
                    "description": "Kills the Economy instance.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Economy"
                                ]
                            ]
                        ],
                        "description": "Economy instance."
                    },
                    "meta": {
                        "line": 153,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "init",
                    "description": "Starts the module.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Promise",
                                    "<"
                                ],
                                [
                                    "Boolean",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "If started successfully: true; else: Error instance."
                    },
                    "meta": {
                        "line": 185,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "_init",
                    "description": "Initializates the module.",
                    "access": "private",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Promise",
                                    "<("
                                ],
                                [
                                    "true",
                                    "|"
                                ],
                                [
                                    "Error",
                                    ")>"
                                ]
                            ]
                        ],
                        "description": "If started successfully: true; else: Error instance."
                    },
                    "meta": {
                        "line": 247,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "start",
                    "description": "Starts all the managers.",
                    "access": "private",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If successfully started: true."
                    },
                    "meta": {
                        "line": 372,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "events": [
                {
                    "name": "balanceSet",
                    "description": "Emits when someone's set the money on the balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 392,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "balanceAdd",
                    "description": "Emits when someone's added the money on the balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 404,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "balanceSubtract",
                    "description": "Emits when someone's subtracts the money from user's balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 416,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bankSet",
                    "description": "Emits when someone's set the money on the bank balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 428,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bankAdd",
                    "description": "Emits when someone's added the money on the bank balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 440,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "bankSubtract",
                    "description": "Emits when someone's subtracts the money from user's bank balance.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Data object.",
                            "type": [
                                [
                                    [
                                        "Object"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.type",
                            "description": "The type of operation.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.amount",
                            "description": "Amount of money in completed operation.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.balance",
                            "description": "User's balance after the operation was completed successfully.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.reason",
                            "description": "The reason why the operation was completed.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 452,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopAddItem",
                    "description": "Emits when someone's added an item in the shop.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.name",
                            "description": "Item name.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.price",
                            "description": "Item price.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.message",
                            "description": "Item message that will be returned on item use.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.description",
                            "description": "Item description.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.maxAmount",
                            "description": "Max amount of the item that user can hold in his inventory.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.role",
                            "description": "Role ID from your Discord server.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.date",
                            "description": "Formatted date when the item was added to the shop.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 464,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopItemBuy",
                    "description": "Emits when someone's added an item in the shop.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.name",
                            "description": "Item name.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.price",
                            "description": "Item price.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.message",
                            "description": "Item message that will be returned on item use.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.description",
                            "description": "Item description.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.maxAmount",
                            "description": "Max amount of the item that user can hold in his inventory.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.role",
                            "description": "Role ID from your Discord server.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.date",
                            "description": "Formatted date when the item was added to the shop.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 477,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopItemUse",
                    "description": "Emits when someone's used an item from his inventory.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.name",
                            "description": "Item name.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.price",
                            "description": "Item price.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.message",
                            "description": "Item message that will be returned on item use.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.description",
                            "description": "Item description.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.maxAmount",
                            "description": "Max amount of the item that user can hold in his inventory.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.role",
                            "description": "Role ID from your Discord server.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.date",
                            "description": "Formatted date when the item was added to the shop.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 490,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "shopEditItem",
                    "description": "Emits when someone's edited an item in the shop.",
                    "params": [
                        {
                            "name": "id",
                            "description": "Item ID.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.changed",
                            "description": "hat was changed in item data.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.oldValue",
                            "description": "Value before edit.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data.newValue",
                            "description": "Value after edit.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 503,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "ready",
                    "description": "Emits when the module is ready.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Void event.",
                            "type": [
                                [
                                    [
                                        "void"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 513,
                        "file": "index.js",
                        "path": "src"
                    }
                },
                {
                    "name": "destroy",
                    "description": "Emits when the module is destroyed.",
                    "params": [
                        {
                            "name": "data",
                            "description": "Void event.",
                            "type": [
                                [
                                    [
                                        "void"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "meta": {
                        "line": 519,
                        "file": "index.js",
                        "path": "src"
                    }
                }
            ],
            "meta": {
                "line": 41,
                "file": "index.js",
                "path": "src"
            }
        },
        {
            "name": "DotParser",
            "description": "Dot parser class.",
            "access": "private",
            "construct": {
                "name": "DotParser",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy constructor options object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 29,
                        "file": "DotParser.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "fetcher",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "FetchManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 36,
                        "file": "DotParser.js",
                        "path": "src/classes"
                    }
                }
            ],
            "methods": [
                {
                    "name": "parse",
                    "description": "Parses the key and fetches the value from database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "any"
                                ]
                            ],
                            [
                                [
                                    "false"
                                ]
                            ]
                        ],
                        "description": "The data from database or 'false' if failed to parse or 'null' if nothing found."
                    },
                    "meta": {
                        "line": 46,
                        "file": "DotParser.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "set",
                    "description": "Parses the key and sets the data in database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data",
                            "description": "Any data to set.",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If set successfully: true; else: false"
                    },
                    "meta": {
                        "line": 63,
                        "file": "DotParser.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "remove",
                    "description": "Parses the key and removes the data from database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If removed successfully: true; else: false"
                    },
                    "meta": {
                        "line": 82,
                        "file": "DotParser.js",
                        "path": "src/classes"
                    }
                }
            ],
            "meta": {
                "line": 15,
                "file": "DotParser.js",
                "path": "src/classes"
            }
        },
        {
            "name": "EconomyError",
            "description": "EconomyError class.",
            "construct": {
                "name": "EconomyError",
                "description": "Creates an 'EconomyError' instance.",
                "params": [
                    {
                        "name": "message",
                        "description": "Error message.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ],
                            [
                                [
                                    "Error"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "name",
                    "description": "Error name.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 25,
                        "file": "EconomyError.js",
                        "path": "src/classes"
                    }
                }
            ],
            "meta": {
                "line": 7,
                "file": "EconomyError.js",
                "path": "src/classes"
            }
        },
        {
            "name": "Emitter",
            "description": "Simple Economy event emitter with only important emitter methods.",
            "access": "private",
            "construct": {
                "name": "Emitter",
                "description": "Simple Economy event emitter with only important emitter methods."
            },
            "methods": [
                {
                    "name": "on",
                    "description": "Listens to the event.",
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 21,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "once",
                    "description": "Listens to the event only for once.",
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 31,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "emit",
                    "description": "Emits the event.",
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data",
                            "description": "Any data to send.",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If emitted: true; else: false."
                    },
                    "meta": {
                        "line": 41,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                }
            ],
            "meta": {
                "line": 8,
                "file": "Emitter.js",
                "path": "src/classes"
            }
        },
        {
            "name": "BalanceManager",
            "description": "Balance manager methods class.",
            "extends": [
                [
                    [
                        "Emitter"
                    ]
                ]
            ],
            "construct": {
                "name": "BalanceManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy constructor options object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 28,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetcher",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "FetchManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 35,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "database",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 42,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "fetch",
                    "description": "Fetches the user's balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "User's balance"
                    },
                    "meta": {
                        "line": 51,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "set",
                    "description": "Sets the money amount on user's balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Money amount.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money.",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount."
                    },
                    "meta": {
                        "line": 66,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "add",
                    "description": "Adds the money amount on user's balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Money amount.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money.",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount."
                    },
                    "meta": {
                        "line": 94,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "subtract",
                    "description": "Subtracts the money amount on user's balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Money amount.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money.",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount."
                    },
                    "meta": {
                        "line": 122,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "leaderboard",
                    "description": "Shows a money leaderboard for your server",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Array",
                                    "<"
                                ],
                                [
                                    "BalanceLeaderboard",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "Sorted leaderboard array"
                    },
                    "meta": {
                        "line": 147,
                        "file": "BalanceManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "on",
                    "description": "Listens to the event.",
                    "inherits": "Emitter#on",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 21,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "once",
                    "description": "Listens to the event only for once.",
                    "inherits": "Emitter#once",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 31,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "emit",
                    "description": "Emits the event.",
                    "inherits": "Emitter#emit",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data",
                            "description": "Any data to send.",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If emitted: true; else: false."
                    },
                    "meta": {
                        "line": 41,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                }
            ],
            "meta": {
                "line": 13,
                "file": "BalanceManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "BankManager",
            "description": "Bank manager methods class.",
            "extends": [
                [
                    [
                        "Emitter"
                    ]
                ]
            ],
            "construct": {
                "name": "BankManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy constructor options object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 28,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetcher",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "FetchManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 35,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "database",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 42,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "fetch",
                    "description": "Fetches the user's bank balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "User's bank balance"
                    },
                    "meta": {
                        "line": 51,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "set",
                    "description": "Sets the money amount on user's bank balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Money amount.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money.",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount."
                    },
                    "meta": {
                        "line": 66,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "add",
                    "description": "Adds the money amount on user's bank balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Money amount.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money.",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount."
                    },
                    "meta": {
                        "line": 94,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "subtract",
                    "description": "Subtracts the money amount on user's bank balance.",
                    "params": [
                        {
                            "name": "amount",
                            "description": "Money amount.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why you add the money.",
                            "default": null,
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Money amount."
                    },
                    "meta": {
                        "line": 122,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "leaderboard",
                    "description": "Shows a money leaderboard for your server",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Array",
                                    "<"
                                ],
                                [
                                    "BankLeaderboard",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "Sorted leaderboard array"
                    },
                    "meta": {
                        "line": 147,
                        "file": "BankManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "on",
                    "description": "Listens to the event.",
                    "inherits": "Emitter#on",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 21,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "once",
                    "description": "Listens to the event only for once.",
                    "inherits": "Emitter#once",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 31,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "emit",
                    "description": "Emits the event.",
                    "inherits": "Emitter#emit",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data",
                            "description": "Any data to send.",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If emitted: true; else: false."
                    },
                    "meta": {
                        "line": 41,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                }
            ],
            "meta": {
                "line": 13,
                "file": "BankManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "CooldownManager",
            "description": "Cooldown manager methods class.",
            "construct": {
                "name": "CooldownManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dailyCooldown",
                        "description": "Cooldown for Daily Command (in ms). Default: 24 Hours (60000 * 60 * 24) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.workCooldown",
                        "description": "Cooldown for Work Command (in ms). Default: 1 Hour (60000 * 60) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dailyAmount",
                        "description": "Amount of money for Daily Command. Default: 100.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.weeklyCooldown",
                        "description": "Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.weeklyAmount",
                        "description": "Amount of money for Weekly Command. Default: 1000.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.workAmount",
                        "description": "Amount of money for Work Command. Default: [10, 50].",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ],
                            [
                                [
                                    "Array"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy options object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 30,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "database",
                    "description": "Database manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 37,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "daily",
                    "description": "Gets a user's daily cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Cooldown end timestamp"
                    },
                    "meta": {
                        "line": 46,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "work",
                    "description": "Gets a user's work cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Cooldown end timestamp"
                    },
                    "meta": {
                        "line": 61,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "weekly",
                    "description": "Gets a user's daily cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "Cooldown end timestamp"
                    },
                    "meta": {
                        "line": 76,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "clearDaily",
                    "description": "Clears user's daily cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false"
                    },
                    "meta": {
                        "line": 91,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "clearWork",
                    "description": "Clears user's work cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false"
                    },
                    "meta": {
                        "line": 104,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "clearWeekly",
                    "description": "Clears user's weekly cooldown",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false"
                    },
                    "meta": {
                        "line": 117,
                        "file": "CooldownManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "meta": {
                "line": 10,
                "file": "CooldownManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "DatabaseManager",
            "description": "Database manager methods class.",
            "construct": {
                "name": "DatabaseManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "fetcher",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "FetchManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 26,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "storagePath",
                    "description": "Full path to a JSON file.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 33,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "parser",
                    "description": "Dot parser methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DotParser"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 40,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "keyList",
                    "description": "Gets a list of keys in database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Array",
                                    "<"
                                ],
                                [
                                    "String",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "An array with all keys in database or 'null' if nothing found."
                    },
                    "meta": {
                        "line": 50,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "set",
                    "description": "Sets data in a property in database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "value",
                            "description": "Any data to set in property.",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If set successfully: true; else: false"
                    },
                    "meta": {
                        "line": 67,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "add",
                    "description": "Adds a number to a property data in database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "value",
                            "description": "Any number to add.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If added successfully: true; else: false"
                    },
                    "meta": {
                        "line": 81,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "subtract",
                    "description": "Subtracts a number from a property data in database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "value",
                            "description": "Any number to subtract.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If set successfully: true; else: false"
                    },
                    "meta": {
                        "line": 102,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetch",
                    "description": "Fetches the data from the storage file.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "any"
                                ]
                            ],
                            [
                                [
                                    "false"
                                ]
                            ]
                        ],
                        "description": "Value from the specified key or 'false' if failed to read or 'null' if nothing found."
                    },
                    "meta": {
                        "line": 122,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "remove",
                    "description": "Removes the property from the existing object in database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false."
                    },
                    "meta": {
                        "line": 134,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "push",
                    "description": "Pushes a value to a specified array from the database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "value",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false."
                    },
                    "meta": {
                        "line": 147,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "removeElement",
                    "description": "Removes an element from a specified array in the database.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The key in database.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "index",
                            "description": "The index in the array.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true; else: false."
                    },
                    "meta": {
                        "line": 165,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "all",
                    "description": "Fetches the entire database.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ],
                        "description": "Database contents"
                    },
                    "meta": {
                        "line": 181,
                        "file": "DatabaseManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "meta": {
                "line": 11,
                "file": "DatabaseManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "FetchManager",
            "description": "Fetch manager methods class.",
            "construct": {
                "name": "FetchManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy constructor options object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 24,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "storagePath",
                    "description": "Full path to a JSON file.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 31,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "fetchAll",
                    "description": "Fetches the entire database.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ],
                        "description": "Database contents"
                    },
                    "meta": {
                        "line": 38,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetchBalance",
                    "description": "Fetches the user's balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "User's balance"
                    },
                    "meta": {
                        "line": 55,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetchBank",
                    "description": "Fetches the user's bank balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ],
                        "description": "User's bank balance"
                    },
                    "meta": {
                        "line": 75,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetchInventory",
                    "description": "Fetches the user's inventory.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "InventoryData"
                                ]
                            ]
                        ],
                        "description": "User's bank balance"
                    },
                    "meta": {
                        "line": 95,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetchHistory",
                    "description": "Fetches the user's purchases history.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "HistoryData"
                                ]
                            ]
                        ],
                        "description": "User's bank balance"
                    },
                    "meta": {
                        "line": 115,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetchCooldowns",
                    "description": "Fetches the user's cooldowns.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "CooldownData"
                                ]
                            ]
                        ],
                        "description": "User's bank balance"
                    },
                    "meta": {
                        "line": 135,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetchShop",
                    "description": "Shows all items in the shop.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Array",
                                    "<"
                                ],
                                [
                                    "ItemData",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "The shop array."
                    },
                    "meta": {
                        "line": 160,
                        "file": "FetchManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "meta": {
                "line": 10,
                "file": "FetchManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "RewardManager",
            "description": "Reward manager methods class.",
            "construct": {
                "name": "RewardManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dailyCooldown",
                        "description": "Cooldown for Daily Command (in ms). Default: 24 Hours (60000 * 60 * 24) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.workCooldown",
                        "description": "Cooldown for Work Command (in ms). Default: 1 Hour (60000 * 60) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dailyAmount",
                        "description": "Amount of money for Daily Command. Default: 100.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.weeklyCooldown",
                        "description": "Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.weeklyAmount",
                        "description": "Amount of money for Weekly Command. Default: 1000.",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.workAmount",
                        "description": "Amount of money for Work Command. Default: [10, 50].",
                        "type": [
                            [
                                [
                                    "Number"
                                ]
                            ],
                            [
                                [
                                    "Array"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy options object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 45,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "utils",
                    "description": "Utils manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "UtilsManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 52,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "database",
                    "description": "Database manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 59,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "cooldowns",
                    "description": "Cooldown manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "CooldownManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 66,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "balance",
                    "description": "Balance manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "BalanceManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 73,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "settings",
                    "description": "Settings manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "SettingsManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 80,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "daily",
                    "description": "Adds a daily reward on user's balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was added. Default: 'claimed the daily reward'.",
                            "default": "claimed the daily reward",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "RewardData"
                                ]
                            ]
                        ],
                        "description": "Daily reward object."
                    },
                    "meta": {
                        "line": 90,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "work",
                    "description": "Adds a work reward on user's balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was added. Default: 'claimed the work reward'.",
                            "default": "claimed the work reward",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "RewardData"
                                ]
                            ]
                        ],
                        "description": "Work reward object."
                    },
                    "meta": {
                        "line": 136,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "weekly",
                    "description": "Adds a weekly reward on user's balance.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was added. Default: 'claimed the weekly reward'.",
                            "default": "claimed the weekly reward",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "RewardData"
                                ]
                            ]
                        ],
                        "description": "Weekly reward object."
                    },
                    "meta": {
                        "line": 182,
                        "file": "RewardManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "meta": {
                "line": 25,
                "file": "RewardManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "SettingsManager",
            "description": "Settings manager class.",
            "construct": {
                "name": "SettingsManager",
                "description": "Economy options object.",
                "params": [
                    {
                        "name": "options",
                        "description": "Options object.",
                        "type": [
                            [
                                [
                                    "EconomyOptions"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy options object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 78,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "database",
                    "description": "Database manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 86,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "utils",
                    "description": "Utils manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "UtilsManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 93,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "get",
                    "description": "Gets the specified setting from the database.\r\rNote: If the server don't have any setting specified,\rthe module will take the values from the\roptions object or default options object.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The setting to fetch.",
                            "type": [
                                [
                                    [
                                        "dailyAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "dailyCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "workAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "workCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "weeklyAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "weeklyCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "dateLocale",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "subtractOnBuy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "any"
                                ]
                            ]
                        ],
                        "description": "The setting from the database."
                    },
                    "meta": {
                        "line": 107,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "set",
                    "description": "Changes the specified setting.\r\rNote: If the server don't have any setting specified, \rthe module will take the values from the \roptions object or default options object.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The setting to change.",
                            "type": [
                                [
                                    [
                                        "dailyAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "dailyCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "workAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "workCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "weeklyAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "weeklyCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "dateLocale",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "subtractOnBuy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "value",
                            "description": "The value to set.`",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "SettingsTypes"
                                ]
                            ]
                        ],
                        "description": "The server settings object."
                    },
                    "meta": {
                        "line": 129,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "remove",
                    "description": "Removes the specified setting.\r\rNote: If the server don't have any setting specified, \rthe module will take the values from the \roptions object or default options object.",
                    "params": [
                        {
                            "name": "key",
                            "description": "The setting to remove.",
                            "type": [
                                [
                                    [
                                        "dailyAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "dailyCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "workAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "workCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "weeklyAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "weeklyCooldown",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "dateLocale",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "subtractOnBuy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "SettingsTypes"
                                ]
                            ]
                        ],
                        "description": "The server settings object."
                    },
                    "meta": {
                        "line": 153,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "all",
                    "description": "Fetches the server's settings object.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "SettingsTypes"
                                ]
                            ]
                        ],
                        "description": "The server settings object."
                    },
                    "meta": {
                        "line": 168,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "reset",
                    "description": "Resets all the settings to setting that are in options object.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "SettingsTypes"
                                ]
                            ]
                        ],
                        "description": "The server settings object."
                    },
                    "meta": {
                        "line": 192,
                        "file": "SettingsManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "meta": {
                "line": 66,
                "file": "SettingsManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "ShopManager",
            "description": "Shop manager methods class.",
            "extends": [
                [
                    [
                        "Emitter"
                    ]
                ]
            ],
            "construct": {
                "name": "ShopManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.dateLocale",
                        "description": "The region (example: 'ru' or 'en') to format date and time. Default: 'ru'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.subtractOnBuy",
                        "description": "If true, when someone buys the item, their balance will subtract by item price.",
                        "type": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy constructor options object.",
                    "access": "private",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 31,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetcher",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "FetchManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 38,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "database",
                    "description": "Database manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 45,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "balance",
                    "description": "Balance manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "BalanceManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 52,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "addItem",
                    "description": "Creates an item in shop.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "options",
                            "description": "object with item info.",
                            "type": [
                                [
                                    [
                                        "AddItemOptions"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "ItemData"
                                ]
                            ]
                        ],
                        "description": "Item info."
                    },
                    "meta": {
                        "line": 61,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "editItem",
                    "description": "Edits the item in the shop.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "arg",
                            "description": "This argument means what thing in item you want to edit. Available arguments: 'description', 'price', 'name', 'message', 'amount', 'role'.",
                            "type": [
                                [
                                    [
                                        "description",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "price",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "itemName",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "message",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "maxAmount",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "role",
                                        "'"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If edited successfully: true, else: false."
                    },
                    "meta": {
                        "line": 99,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "removeItem",
                    "description": "Removes an item from the shop.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name .",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If removed: true, else: false."
                    },
                    "meta": {
                        "line": 159,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "clear",
                    "description": "Clears the shop.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true, else: false."
                    },
                    "meta": {
                        "line": 191,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "clearInventory",
                    "description": "Clears the user's inventory.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true, else: false."
                    },
                    "meta": {
                        "line": 213,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "clearHistory",
                    "description": "Clears the user's purchases history.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared: true, else: false."
                    },
                    "meta": {
                        "line": 230,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "list",
                    "description": "Shows all items in the shop.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Array",
                                    "<"
                                ],
                                [
                                    "ItemData",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "The shop array."
                    },
                    "meta": {
                        "line": 246,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "searchItem",
                    "description": "Searches for the item in the shop.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "ItemData"
                                ]
                            ]
                        ],
                        "description": "If item not found: null; else: item data array."
                    },
                    "meta": {
                        "line": 259,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "buy",
                    "description": "Buys the item from the shop.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "reason",
                            "description": "The reason why the money was subtracted. Default: 'received the item from the shop'.",
                            "default": "received the item from the shop",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "max",
                                    "'"
                                ]
                            ],
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If item bought successfully: true; if item not found: false; if user reached the item's max amount: 'max'."
                    },
                    "meta": {
                        "line": 282,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "inventory",
                    "description": "Shows all items in user's inventory.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Array",
                                    "<"
                                ],
                                [
                                    "InventoryData",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "User's inventory array."
                    },
                    "meta": {
                        "line": 344,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "useItem",
                    "description": "Uses the item from the user's inventory.",
                    "params": [
                        {
                            "name": "itemID",
                            "description": "Item ID or name.",
                            "type": [
                                [
                                    [
                                        "Number"
                                    ]
                                ],
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "client",
                            "description": "The Discord Client. [Optional]",
                            "type": [
                                [
                                    [
                                        "Client"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "String"
                                ]
                            ],
                            [
                                [
                                    "false"
                                ]
                            ]
                        ],
                        "description": "Item message or 'false' if item not found."
                    },
                    "meta": {
                        "line": 361,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "history",
                    "description": "Shows the user's purchase history.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Array",
                                    "<"
                                ],
                                [
                                    "HistoryData",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "User's purchase history."
                    },
                    "meta": {
                        "line": 403,
                        "file": "ShopManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "on",
                    "description": "Listens to the event.",
                    "inherits": "Emitter#on",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 21,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "once",
                    "description": "Listens to the event only for once.",
                    "inherits": "Emitter#once",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "fn",
                            "description": "Callback function.",
                            "type": [
                                [
                                    [
                                        "function"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Emitter"
                                ]
                            ]
                        ],
                        "description": "Economy Emitter."
                    },
                    "meta": {
                        "line": 31,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                },
                {
                    "name": "emit",
                    "description": "Emits the event.",
                    "inherits": "Emitter#emit",
                    "inherited": true,
                    "params": [
                        {
                            "name": "event",
                            "description": "Event name.",
                            "type": [
                                [
                                    [
                                        "balanceSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "balanceSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSet",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankAdd",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "bankSubtract",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopAddItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopEditItem",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemBuy",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopItemUse",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "shopClear",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "ready",
                                        "'"
                                    ]
                                ],
                                [
                                    [
                                        "destroy",
                                        "'"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data",
                            "description": "Any data to send.",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If emitted: true; else: false."
                    },
                    "meta": {
                        "line": 41,
                        "file": "Emitter.js",
                        "path": "src/classes"
                    }
                }
            ],
            "meta": {
                "line": 14,
                "file": "ShopManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "UtilsManager",
            "description": "Utils manager methods class.",
            "construct": {
                "name": "UtilsManager",
                "description": "Economy constructor options object. There's only needed options object properties for this manager to work properly.",
                "params": [
                    {
                        "name": "options",
                        "description": "Constructor options object.",
                        "type": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ]
                    },
                    {
                        "name": "options.storagePath",
                        "description": "Full path to a JSON file. Default: './storage.json'.",
                        "type": [
                            [
                                [
                                    "String"
                                ]
                            ]
                        ]
                    }
                ]
            },
            "props": [
                {
                    "name": "options",
                    "description": "Economy constructor options object.",
                    "access": "private",
                    "nullable": true,
                    "type": [
                        [
                            [
                                "EconomyOptions"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 32,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "storagePath",
                    "description": "Full path to a JSON file.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 39,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "fetcher",
                    "description": "Fetch manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "FetchManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 46,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "database",
                    "description": "Database manager methods object.",
                    "access": "private",
                    "type": [
                        [
                            [
                                "DatabaseManager"
                            ]
                        ]
                    ],
                    "meta": {
                        "line": 53,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "methods": [
                {
                    "name": "checkUpdates",
                    "description": "Checks for if the module is up to date.",
                    "async": true,
                    "returns": {
                        "types": [
                            [
                                [
                                    "Promise",
                                    "<"
                                ],
                                [
                                    "VersionData",
                                    ">"
                                ]
                            ]
                        ],
                        "description": "This method will show is the module updated, latest version and installed version."
                    },
                    "meta": {
                        "line": 60,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "all",
                    "description": "Fetches the entire database.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Object"
                                ]
                            ]
                        ],
                        "description": "Database contents"
                    },
                    "meta": {
                        "line": 78,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "write",
                    "description": "Writes the data to file.",
                    "params": [
                        {
                            "name": "path",
                            "description": "File path to write.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "data",
                            "description": "Any data to write",
                            "type": [
                                [
                                    [
                                        "any"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If successfully written: true; else: false."
                    },
                    "meta": {
                        "line": 88,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "clearStorage",
                    "description": "Clears the storage file.",
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared successfully: true; else: false"
                    },
                    "meta": {
                        "line": 103,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "removeGuild",
                    "description": "Fully removes the guild from database.",
                    "params": [
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared successfully: true; else: false"
                    },
                    "meta": {
                        "line": 117,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "removeUser",
                    "description": "Removes the user from database.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If cleared successfully: true; else: false"
                    },
                    "meta": {
                        "line": 133,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "reset",
                    "description": "Sets the default user object for the specified member.",
                    "params": [
                        {
                            "name": "memberID",
                            "description": "Member ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "guildID",
                            "description": "Guild ID.",
                            "type": [
                                [
                                    [
                                        "String"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "Boolean"
                                ]
                            ]
                        ],
                        "description": "If resetted successfully: true; else: false."
                    },
                    "meta": {
                        "line": 152,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                },
                {
                    "name": "checkOptions",
                    "description": "Checks the Economy options object, fixes the problems in it and returns the fixed options object.",
                    "params": [
                        {
                            "name": "options",
                            "description": "Option checker options.",
                            "type": [
                                [
                                    [
                                        "CheckerOptions"
                                    ]
                                ]
                            ]
                        },
                        {
                            "name": "ecoOptions",
                            "description": "Economy options object to check.",
                            "type": [
                                [
                                    [
                                        "EconomyOptions"
                                    ]
                                ]
                            ]
                        }
                    ],
                    "returns": {
                        "types": [
                            [
                                [
                                    "EconomyOptions"
                                ]
                            ]
                        ],
                        "description": "Fixed economy options object."
                    },
                    "meta": {
                        "line": 165,
                        "file": "UtilsManager.js",
                        "path": "src/managers"
                    }
                }
            ],
            "meta": {
                "line": 18,
                "file": "UtilsManager.js",
                "path": "src/managers"
            }
        }
    ],
    "interfaces": [],
    "typedefs": [
        {
            "name": "EconomyOptions",
            "description": "Default Economy options object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "storagePath",
                    "description": "Full path to a JSON file. Default: './storage.json'",
                    "optional": true,
                    "default": "'./storage.json'",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "checkStorage",
                    "description": "Checks the if database file exists and if it has errors. Default: true",
                    "optional": true,
                    "default": true,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "dailyCooldown",
                    "description": "Cooldown for Daily Command (in ms). Default: 24 Hours (60000 * 60 * 24) ms",
                    "optional": true,
                    "default": 86400000,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "workCooldown",
                    "description": "Cooldown for Work Command (in ms). Default: 1 Hour (60000 * 60) ms",
                    "optional": true,
                    "default": 3600000,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "dailyAmount",
                    "description": "Amount of money for Daily Command. Default: 100.",
                    "optional": true,
                    "default": 100,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ],
                        [
                            [
                                "Array",
                                "<"
                            ],
                            [
                                "Number",
                                ">"
                            ]
                        ]
                    ]
                },
                {
                    "name": "weeklyCooldown",
                    "description": "Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms",
                    "optional": true,
                    "default": 604800000,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "weeklyAmount",
                    "description": "Amount of money for Weekly Command. Default: 1000.",
                    "optional": true,
                    "default": 100,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ],
                        [
                            [
                                "Array",
                                "<"
                            ],
                            [
                                "Number",
                                ">"
                            ]
                        ]
                    ]
                },
                {
                    "name": "workAmount",
                    "description": "Amount of money for Work Command. Default: [10, 50].",
                    "optional": true,
                    "default": "[10, 50]",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ],
                        [
                            [
                                "Array",
                                "<"
                            ],
                            [
                                "Number",
                                ">"
                            ]
                        ]
                    ]
                },
                {
                    "name": "subtractOnBuy",
                    "description": "If true, when someone buys the item, their balance will subtract by item price. Default: false",
                    "optional": true,
                    "default": true,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "updateCountdown",
                    "description": "Checks for if storage file exists in specified time (in ms). Default: 1000.",
                    "optional": true,
                    "default": 1000,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "dateLocale",
                    "description": "The region (example: 'ru'; 'en') to format the date and time. Default: 'ru'.",
                    "optional": true,
                    "default": "'ru'",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "updater",
                    "description": "Update Checker options object.",
                    "optional": true,
                    "default": "UpdaterOptions",
                    "type": [
                        [
                            [
                                "UpdaterOptions"
                            ]
                        ]
                    ]
                },
                {
                    "name": "errorHandler",
                    "description": "Error Handler options object.",
                    "optional": true,
                    "default": "ErrorHandlerOptions",
                    "type": [
                        [
                            [
                                "ErrorHandlerOptions"
                            ]
                        ]
                    ]
                },
                {
                    "name": "optionsChecker",
                    "description": "Options object for an 'Economy.utils.checkOptions' method.",
                    "optional": true,
                    "default": "CheckerOptions",
                    "type": [
                        [
                            [
                                "CheckerOptions"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 283,
                "file": "UtilsManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "UpdaterOptions",
            "description": "Updatee options object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "checkUpdates",
                    "description": "Sends the update state message in console on start. Default: true.",
                    "optional": true,
                    "default": true,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "upToDateMessage",
                    "description": "Sends the message in console on start if module is up to date. Default: true.",
                    "optional": true,
                    "default": true,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 301,
                "file": "UtilsManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "ErrorHandlerOptions",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "handleErrors",
                    "description": "Handles all errors on startup. Default: true.",
                    "optional": true,
                    "default": true,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "attempts",
                    "description": "Amount of attempts to load the module. Use 0 for infinity attempts. Default: 5.",
                    "optional": true,
                    "default": 5,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "time",
                    "description": "Time between every attempt to start the module (in ms). Default: 3000.",
                    "optional": true,
                    "default": 3000,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 307,
                "file": "UtilsManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "CheckerOptions",
            "description": "Options object for an 'Economy.utils.checkOptions' method.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "ignoreInvalidTypes",
                    "description": "Allows the method to ignore the options with invalid types. Default: false.",
                    "optional": true,
                    "default": false,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "ignoreUnspecifiedOptions",
                    "description": "Allows the method to ignore the unspecified options. Default: false.",
                    "optional": true,
                    "default": false,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "ignoreInvalidOptions",
                    "description": "Allows the method to ignore the unexisting options. Default: false.",
                    "optional": true,
                    "default": false,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "showProblems",
                    "description": "Allows the method to show all the problems in the console. Default: false.",
                    "optional": true,
                    "default": false,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "sendLog",
                    "description": "Allows the method to send the result in the console. Default: false.",
                    "optional": true,
                    "default": false,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "sendSuccessLog",
                    "description": "Allows the method to send the result if no problems were found. Default: false.",
                    "optional": true,
                    "default": false,
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 314,
                "file": "UtilsManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "BalanceLeaderboard",
            "description": "Balance leaderboard object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "index",
                    "description": "User's place in the top.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "userID",
                    "description": "User's ID.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "money",
                    "description": "User's amount of money.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 169,
                "file": "BalanceManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "BankLeaderboard",
            "description": "Bank leaderboard object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "index",
                    "description": "User's place in the top.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "userID",
                    "description": "User's ID.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "money",
                    "description": "User's amount of money.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 169,
                "file": "BankManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "CooldownData",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "days",
                    "description": "Amount of days until the cooldown ends.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "hours",
                    "description": "Amount of hours until the cooldown ends.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "minutes",
                    "description": "Amount of minutes until the cooldown ends.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "seconds",
                    "description": "Amount of seconds until the cooldown ends.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "milliseconds",
                    "description": "Amount of milliseconds until the cooldown ends.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 230,
                "file": "RewardManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "HistoryData",
            "description": "History data object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "id",
                    "description": "Item ID in history.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "itemName",
                    "description": "Item name.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "price",
                    "description": "Item price.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "message",
                    "description": "The message that will be returned on item use.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "role",
                    "description": "ID of Discord Role that will be given to user on item use.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "date",
                    "description": "Date when the item was bought.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "memberID",
                    "description": "Member ID.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "guildID",
                    "description": "Guild ID.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 424,
                "file": "ShopManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "InventoryData",
            "description": "Inventory data object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "id",
                    "description": "Item ID in your inventory.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "itemName",
                    "description": "Item name.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "price",
                    "description": "Item price.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "message",
                    "description": "The message that will be returned on item use.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "role",
                    "description": "ID of Discord Role that will be given to user on item use.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "maxAmount",
                    "description": "Max amount of the item that user can hold in his inventory.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "date",
                    "description": "Date when the item was bought.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 450,
                "file": "ShopManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "RewardData",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "status",
                    "description": "The status of operation.",
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "value",
                    "description": "Reward or cooldown time object.",
                    "type": [
                        [
                            [
                                "CooldownData"
                            ]
                        ]
                    ]
                },
                {
                    "name": "pretty",
                    "description": "Reward or formatted cooldown time object.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ],
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "reward",
                    "description": "Amount of money for the reward from constructor options.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ],
                        [
                            [
                                "Array",
                                "<"
                            ],
                            [
                                "Number",
                                ">"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 222,
                "file": "RewardManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "SettingsTypes",
            "description": "Settings object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "dailyAmount",
                    "description": "Amount of money for Daily Command. Default: 100.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ],
                        [
                            [
                                "Array",
                                "<"
                            ],
                            [
                                "Number",
                                ">"
                            ]
                        ]
                    ]
                },
                {
                    "name": "dailyCooldown",
                    "description": "Cooldown for Daily Command (in ms). Default: 24 Hours (60000 * 60 * 24) ms",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "workAmount",
                    "description": "Amount of money for Work Command. Default: [10, 50].",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ],
                        [
                            [
                                "Array",
                                "<"
                            ],
                            [
                                "Number",
                                ">"
                            ]
                        ]
                    ]
                },
                {
                    "name": "workCooldown",
                    "description": "Cooldown for Work Command (in ms). Default: 1 Hour (60000 * 60) ms",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "weeklyAmount",
                    "description": "Amount of money for Weekly Command. Default: 1000.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ],
                        [
                            [
                                "Array",
                                "<"
                            ],
                            [
                                "Number",
                                ">"
                            ]
                        ]
                    ]
                },
                {
                    "name": "weeklyCooldown",
                    "description": "Cooldown for Weekly Command (in ms). Default: 7 Days (60000 * 60 * 24 * 7) ms",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "dateLocale",
                    "description": "The region (example: 'ru' or 'en') to format the date and time. Default: 'en'",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "subtractOnBuy",
                    "description": "If true, when someone buys the item, their balance will subtract by item price. Default: false.",
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 215,
                "file": "SettingsManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "AddItemOptions",
            "description": "Options object with item info for 'Economy.shop.addItem' method.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "itemName",
                    "description": "Item name.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "price",
                    "description": "Item price.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "message",
                    "description": "Item message that will be returned on use.",
                    "optional": true,
                    "default": "'You have used this item!'",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "description",
                    "description": "Item description.",
                    "optional": true,
                    "default": "'Very mysterious item.'",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "maxAmount",
                    "description": "Max amount of the item that user can hold in his inventory.",
                    "optional": true,
                    "default": null,
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "role",
                    "description": "Role ID from your Discord server.",
                    "optional": true,
                    "default": null,
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                }
            ],
            "returns": {
                "types": [
                    [
                        [
                            "ItemData"
                        ]
                    ]
                ],
                "description": "Item info."
            },
            "meta": {
                "line": 413,
                "file": "ShopManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "ItemData",
            "description": "Item data object.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "id",
                    "description": "Item ID.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "itemName",
                    "description": "Item name.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "price",
                    "description": "Item price.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "message",
                    "description": "The message that will be returned on item use.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "description",
                    "description": "Item description.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "role",
                    "description": "ID of Discord Role that will be given to Wuser on item use.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "maxAmount",
                    "description": "Max amount of the item that user can hold in his inventory.",
                    "type": [
                        [
                            [
                                "Number"
                            ]
                        ]
                    ]
                },
                {
                    "name": "date",
                    "description": "Date when the item was added in the shop.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 437,
                "file": "ShopManager.js",
                "path": "src/managers"
            }
        },
        {
            "name": "VersionData",
            "description": "Module update state.",
            "type": [
                [
                    [
                        "Object"
                    ]
                ]
            ],
            "props": [
                {
                    "name": "updated",
                    "description": "Is the module updated.",
                    "type": [
                        [
                            [
                                "Boolean"
                            ]
                        ]
                    ]
                },
                {
                    "name": "installedVersion",
                    "description": "Installed version.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                },
                {
                    "name": "packageVersion",
                    "description": "Avaible version.",
                    "type": [
                        [
                            [
                                "String"
                            ]
                        ]
                    ]
                }
            ],
            "meta": {
                "line": 275,
                "file": "UtilsManager.js",
                "path": "src/managers"
            }
        }
    ],
    "externals": []
}